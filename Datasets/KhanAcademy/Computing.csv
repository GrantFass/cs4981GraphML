course,unit,lesson,video_title,about,transcript
Computer programming,Intro to JS: Drawing & Animation,Intro to programming,What is Programming?,"Programming is the process of creating a set of instructions that tell a computer how to perform a task. Programming can be done using a variety of computer programming languages, such as JavaScript, Python, and C++.  Created by Pamela Fox.","Hi, welcome to programming! If you've never learned
to program before, you might be wondering
what programming actually is. Well, when we write a program, we're giving the computer
a series of commands that kind of look like
a weird form of English. You can think of a computer
as a very obedient dog, listening to your every command,
and doing whatever you tell it to do. So what's so cool about programming? Well, it really depends on
what you think is cool. Because as it turns out, you can
use programming for almost everything. Programs control robots
that can take care of patients, and my favorite,
robots that can roam around Mars and look for water on the surface. Programs help self-driving cars
know which way to turn-- which is pretty important! Programs help doctors cure diseases by
processing huge amounts of medical data. Programs can be really fun games,
like Doodle Jump, Angry Birds, Minecraft. Programs make it possible for Pixar to put out their awesome
3-D animated movies, and for movies like Harry Potter
to have such cool special effects. What's your favorite movie? I bet that a computer
helped make it somehow. Programs are behind
the websites and the apps that you use every day, all the time, like Google Maps, and
Wikipedia, and YouTube, and of course, where you are now,
Khan Academy. Here, on Khan Academy, you'll learn
how to write JavaScript programs to make drawings, animations, and games. And that will be a great start towards creating whatever
you're imagining in your head. I know, it might be hard to see
how a drawing program relates to programs for robots,
or curing diseases. But believe it or not,
the same basic concepts are used by pretty much
every programmer in every program. Once you learn to program JavaScript, you'll be able to learn other
programming languages much more easily. Now you just gotta keep going!"
Computer programming,Intro to JS: Drawing & Animation,Coloring,The Power of the Docs, Created by Pamela Fox.,"Voiceover: Ok so you've
made a few programs, you might be wondering how on earth am I
supposed to remember all of these commands is it oval or circle or
ellipse? Is it width and height,
or is it height and width? Do I have to memorize all
of this? Thankfully, no! That's what the computer is for. The thing
is, we always have a computer with us when we are programming, and a computer
is really good at remembering things, better than we are. So what
if we just had the computer
remember all the details for us, and we can just use it like
a dictionary for programming. Then we can focus on making cool programs, not memorizing a bunch of boring details. That's what we call documentation,
a document that explains how to program in a particular
language and environment, with examples and gotchas, so if we
can't remember the exact details, no worries - we can just look them up! You might think it's boring
to read documentation, and you are right - it is kind of boring,
it's a lot more fun to write code. But unless you want to memorize
absolutely everything (ugh!), you need to learn how to use documentation
or be able to code your ideas. Even great programmers don't
try to memorize everything. In fact, great programmers are usually
some of the best at reading documentation. For example, I'm drawing this smiley face, and I've already drawn the face
and the eyes using ellipse, a function I know pretty
well. But I have more work to. First, I want to draw the face with
thick outlines, like a sticker. I remember that has
something to do with stroke, but I don't remember exactly the name, so instead of sitting here
and trying to invent it, which could take hours (or infinity),
I'll just go to the documentation tab and look around and try and
find what I'm looking for. Umm, and I'll look under this coloring
category, cause that seems likely, and look at all the functions here, and then finally at the very
end, I find stroke weight to change the thickness
of lines and outlines. So here we see the function
name and the parameters - just one in this case. So
what I usually do is start off by just copying that code
and pasting it into my code. But I immediately get an error:
""thickness is not defined"". That's because thickness
is a placeholder parameter. It's not a real value, I
am meant to replace that with what I actually want it to be,
right, so that could be with a number or a variable that refers to a number, so
in this case I'll just put a number in. Say, ah, ok, perfect, 10's nice,
but we know we can fiddle with that and see. oh that's a little
extreme (laughs). that's too small. All right, so go back - 12. Cool! Now there is something really obvious
missing in my smily face: the smile. So I basically just want
something like this, right... And I can look at that
smile and think, well, doesn't look I'd draw by using
an ellipse, or line, or rect, cause it's got this curve to it,
but it doesn't have any inside. So I think, well, I should
check the docs and see if there is some other way
to draw a curve like this. So, to the docs machine we go! Scrolling down, scrolling
down, and looking around. So I'll check out the shapes category... Aha! The very first
entry in shapes is arc, which is used for drawing an arc,
which sounds kind of perfect, because that's what the smile is. So this one has a lot
more parameters in it. I'll start off by pasting this in here... And remember these are placeholder
parameters so we need to replace them with what we think they should be... All right, so x and y, so maybe x
and y is where i want it to begin, so we'll say, so our middle is
100 so maybe it will start at 150, and then y is maybe 250, and then width - width sounds like, you
know, the width of the arc, so probably a bit less than
width of the actual face. So maybe it's 200, and then the height... maybe that's the height from the
top of the arc to the bottom, so go, maybe that's 50. Start and stop... Hmm, I don't actually
know what those are... Ok, now I'm stuck, because I'm looking
at this function and trying to use it, but I don't really
understand these parameters. Well, luckily, what you can do
is just go back down to the docs and actually click on the function
that you are interested in, and it will bring up a program
that shows you how to use it, and actually explains the
parameters in a lot more detail. So by looking at this, it
says, ok, x is the x-coordinate of the center of the ellipse
derived from the ark. Okay, so basically it seems like to
draw an arc you kinda have to pretend you're drawing an ellipse,
but only part of it, and calculate everything based on that. So the x and y zap to the center of
that pretend ellipse we're making, the width and the height are the width
and height of that pretend ellipse, and start and stop - those
are the ones I didn't know. Start and stop is the angle...
ah! Ok, the start angle to
start the arc at, in degrees, and stop is where to stop it at, right. And we can actually look at
the examples they've done here, so drawing the arc from 1 to 270, that's
probably this guy over here, right, because 1 degree to 270 degrees,
that's what that would look like. Let's try and change it. There we go,
that makes sense, right, because 1 to 180, that's kind of what we want, right,
because we want our half arc... Ok, so now I think I understand
arc well enough to use it, and let's go back to my smiley... All right, so we're going
from 0 to 180, and... we've almost got it. My x amount
is off because I didn't realize that x is actually the
middle of the ellipse, and is a little bit wide, so
let's go make that smaller! Haha! I now have a real smiley face! Thanks to using the docs I was able
to do what I wanted much faster. And that's a goal of programming -
turn our ideas into reality faster. Remember - use the power of the docs!"
Computer programming,Intro to HTML/CSS: Making webpages,Intro to HTML,Welcome to the web!,n/a,"•Current transcript segment: 0:00- Welcome, let's talk about the web,•0:02the thing that you're using right now.•0:05The web is this fast network
of connected computers,•0:08and as of 2014, there
are literally more than•0:11a billion websites - a billion!•0:15When I was a kid, we only had one million,•0:17and we thought we were cool.•0:18What do we use websites for?•0:20Well in the beginning,
researchers used websites to share•0:23their research, like on
high-energy particle colliders.•0:26But now everybody uses it
for pretty much everything.•0:30Maybe you use a social network
to chat with your family,•0:33a photo website for sharing photos•0:35of your adorable kitty cats,•0:37a travel website to decide
where to go on an exotic trip,•0:40or a news website to figure out•0:41what's going on in the world.•0:44And of course, you must be using•0:45the Khan Academy website to learn.•0:48So what's your favorite website?•0:52Actually, I have a better question.•0:55What website do you wish
existed, but doesn't yet?•0:59Maybe a website about yourself•1:00or about something that you love?•1:03The cool thing is you can
program a website yourself,•1:06and you can learn how to
do it here on Khan Academy.•1:09Start brainstorming what you want to make•1:10because you'll be able
to do it soon enough.•1:14First, let's back up a bit
and clear up some terminology.•1:17What is the ""web,"" exactly?•1:20Well, like I said, it's a bunch of•1:22connected computers that have websites.•1:25When a computer is connected to the web•1:26and spitting out a website, we
call that computer a ""server""•1:30because it's ""serving"" the website.•1:34A website is written
using three languages:•1:36HTML, for marking up the website content;•1:39CSS, for styling it;•1:42and JavaScript, for making it interactive.•1:46How do users like you
actually see those websites?•1:50Well you use an app dedicated
for website browsing,•1:53like Chrome, Firefox,
or Internet Explorer,•1:56and we call those apps ""browsers.""•1:59Browsers try to all show the
same website the same way,•2:01but they do have their
differences, which is why•2:03we sometimes say, ""Oops,
there's a bug in that browser.•2:06""Try another one.""•2:08Which browser are you using right now?•2:12Well you must be using that browser•2:13from some sort of device, like a laptop,•2:15phone, tablet, or even a smart TV,•2:18and we call those devices ""clients.""•2:21Clients can be really different.•2:23Some are way smaller than others,•2:25some have touchscreens,
others have keyboards,•2:27some are black and white.•2:29So websites have to try to work well•2:32in all sorts of clients.•2:34What client are you using right now?•2:36And that's the web.•2:37Well, the two-minute version.•2:39There's lots more to learn about the web,•2:41but now I think it's about
time to start having you write•2:43some HTML and CSS to
make your own web pages."
Computer programming,Intro to HTML/CSS: Making webpages,CSS text properties,CSS Zen Garden,n/a,"•Current transcript segment: 0:00- Now that you've seen a ton of HTML text,•0:02the whole rest of this course
is going to be about CSS,•0:05and everything you can do with CSS.•0:07To get you excited and get you to stay on,•0:10I want to show you one
of the best examples•0:12of everything you can do.•0:14And that's a site called csszengarden.com.•0:18And you can check it
out for yourself after.•0:20CSS Zen Garden is a simple site
with heading and background•0:23and text and all that stuff.•0:25But the thing that's cool about it•0:27is that it's a gallery
of designs of people•0:31that take the exact same
HTML and only change the CSS•0:37to see how much they can
change with just CSS.•0:42Let me show you.•0:44Here's another one.•0:45Remember, this is the exact same HTML•0:49that you saw in the previous page.•0:51The only difference is CSS.•0:55Here's another one.•0:56So not only do the colors change,•0:58but things get laid out on
the page in a different order.•1:02And this one makes it really different,•1:04so now it looks like this
cityscape with this title•1:07that comes down here, and
there's credits over here,•1:11and oh my things are animating,
and all of this is just CSS.•1:16Maybe it's not CSS that you know yet,•1:19but if you keep going,•1:20all of this will be
available at your fingertips.•1:23If you put in enough work,•1:24you'll be able to make beautiful websites•1:26that look exactly how
you want them to look.•1:29Keep going."
Computer programming,Intro to HTML/CSS: Making webpages,CSS layout,CSS in the wild: Google Maps,n/a,"•Current transcript segment: 0:01- Let me show you an
example of CSS position•0:03in z-index in the wild; Google Maps.•0:07Probably, most of you
have used Google Maps•0:09or some sort of online
mapping service before,•0:11to help you find what you're looking for.•0:14These things are just really cool.•0:17We can browse around, we can zoom in,•0:19we can zoom out, and
we can look for things.•0:23So, since I'm in Barcelona right now,•0:25I'll look for Sagrada Familia,•0:27which is this beautiful church.•0:31This is actually HTML CSS and JavaScript.•0:35Let me show you all the
z-index that's going on here.•0:38So all the different elements that we see,•0:40these have all been positioned•0:42using CSS to be on top of each other•0:45and they're using z-index
in a very particular way•0:48to make sure that the
order is exactly correct.•0:52So, let me just use my Chrome console•0:56to show you a few things.•1:01This mini map here, in the corner,•1:03has position absolute,
bottom zero, left zero•1:07and a z-index of one.•1:09So, that should put it above something•1:11with a z-index of zero.•1:14This Hovercard that shows up,•1:15and has all these options here,•1:18it has vision fixed, and
then a z-index of 10.•1:22So, it shows up on top of a lot of things.•1:27The zoom button has a z-index of two,•1:30so that should mean that it ends up•1:31underneath the Hovercard.•1:33Let's just move this over here•1:38and see what happens.•1:39See, the Hovercard that shows up,•1:41shows up above that zoom,
because it has a z-index of four•1:45and the zoom has a z-index of two.•1:50As you can see, Google Maps uses a lot•1:53of CSS position and
z-index in order to lay out•1:55all the map and controls on top of it.•1:57It does use a lot of other
CSS and JavaScript as well,•2:01but it's pretty neat
that now you can start•2:04to understand how other websites•2:05are built that look nothing like the ones•2:08that we've been showing so far.•2:10That's the power of CSS."
Computer programming,Intro to HTML/CSS: Making webpages,Further learning,HTML validation,Learn how to validate your webpages with the W3C validator service. ,"- [Voiceover] On Khan Academy, we pop up the oh noes guide to tell you when there's something wrong with your webpage. But we only tell you about the big things. There could be other things wrong with your webpage too, things that aren't quite right according to
the HTML specification. But the browsers let you get away with it because browsers like
to be really forgiving. They just want to make it work. So then you end up not knowing that there's something
wrong with your webpage. That's why it's a good idea to run your webpage through the
W3 validation service. That will actually check and tell you if your page is valid and if there's something not quite right about it. To do that, go to validator.w3.org. It'll give you options to enter a URL, upload a file, or just copy and paste. That's what I'll do. I'll take the most recent webpage that I was showing in a talk through and paste it in here and then check. Ta-da! It was successfully checked as HTML 5 and there were no issues with it. Fantastic. Let's try one more. This is our HTML internal links example. I want to paste this in here and check. Uh-oh, there was one error, two warnings. Let's go down. It says that an image element must have an alt attribute. Uh-oh, this is a classic thing to forget is that alt attribute. We see the images, but not everybody does. So what I should do is
go back into that HTML and add the alt attribute. So let's say the image was here, alt equals photo of Tim Berners-Lee next to computer and let me copy and go back up, paste. I will re-validate. Ta-da! It's valid HTML. When possible, you should be trying to make webpages that are valid HTML because that way you can have a lot more confidence that the browser is going to interpret them exactly like you expect all the time. Now go try and validate
a few of your pages and see how they turn out."
Computer programming,Intro to SQL: Querying and managing data,SQL basics,Welcome to SQL,SQL is useful for creating and querying relational databases. Learn how to use SQL with this interactive course!  ,"- [Instructor] The world is full of data. Every app that you use is full of data. On Khan Academy, we store data about users and badges and progress. On Facebook they store
data about who you are, who your friends are,
and what they're posting. On Bank of America they store
data about how much money you have and what accounts that's in. How do these apps store data? Well, they use a database
which is a program that helps store data and
provides functionality for adding, modifying,
and querying that data, and doing that all fast. Databases come in many forms,
but a really popular type of database is called
a relational database. It stores each kind of data in a table, which is kind of like storing
data in a spreadsheet. A row represents an item, and a column represents
properties about that item. For example, to store data
about Khan Academy users, we'd have a users table with a
row for each user and columns for properties like their
nickname and location. Relational databases
make it particularly easy to form relationships between tables. For example, in order to
store Khan Academy users and their badges, we
might have a users table and a badges table, and
then a user badges table to remember which users
earned which badges, just by mapping user IDs to badge IDs. That's a more efficient
form of storage than having to repeat everything about the user and everything about the badge
in the user badges table. Most database come with a
query language to interact with the database. SQL is a language designed
entirely for accessing databases and is the most popular of them. With SQL, we can create
tables, change data, get back the data we're interested in. Like if we wanna find
out which users joined in the last week or which
users have a particular badge. That's what we're going to teach here. And you'll actually get to try
out SQL here in the browser using SQL Lite, a particular
implementation of it. You won't be able to
write the whole app here, but when you're done learning SQL, you'll have a much better understanding of how data is stored
in the apps that you use and be able to use SQL
if you ever build an app."
Computer programming,Intro to SQL: Querying and managing data,SQL basics,S-Q-L or SEQUEL?,How is it pronounced? Why? Let's discuss... ,"At this point, you've probably heard me
pronounce SQL two ways-- sequel or S-Q-L. Some of you might even be mad that I'm pronouncing it
one way or the other, and you may have
very good reason for believing that your favorite pronunciation
is the correct one. So what's the deal? Well, SQL was originally invented
at IBM in the early 1970s. And the first version
was called SEQUEL, and it stood for
Structured English QUEry Language. That acronym, SEQUEL,
was later changed to SQL, because SEQUEL was already
trademarked by an airplane company, and companies really don't like
getting into trademark lawsuits. Nowadays, many of us still
pronounce it sequel, because it's shorter to say, and we've got historical reasons
to claim that it's the right way. However, when I surveyed
developers across the world, I found that in non-English languages,
many of them pronounce it S-Q-L, or, for example,
ese cu ele in Spanish. Since our videos get translated
here on Khan Academy, I figured I'd make it easier for translators to match
the pace of our videos, by pronouncing SQL the long way. But in everyday life,
I'm used to calling it sequel, so both of them come out of me. Now you know,
it can be S-Q-L or sequel, and you'll probably hear both
the rest of your life. The world is a messy place, but at least you now have a way of
structuring your queries about it, right?"
Computer programming,Advanced JS: Games & Visualizations,Intro to Games & Visualizations,Intro to Games and Visualizations, Created by Pamela Fox.,"Voiceover: Congratulations! You now understand the
JavaScript language. Variables, loops, strings,
functions, objects, arrays, even object-oriented design. But what good is a language if you can't make something cool with it? There are lots of ways you can use your new knowledge, but one of the most popular ways to use JavaScript with Processing.js is to make games and visualizations, which you probably know,
if you've ever looked at our hot programs list. A game is something interactive, where you get some reward. There is usually a win
state, a lose state, a score. A visualization is also
highly interactive, but without the game mechanics. Let's look at some of the common components we'll need. We'll need UI controls
for anything we're doing. Like buttons, and sliders, and menus. And some of these will be simple buttons, other times we'll need multiple buttons, other times we'll need
sliders, and drop-downs, and it all builds upon the same
basic principles, though. Besides interaction with
a mouse, we'll also want keyboard control, like
being able to use the arrows to move our characters up and down, or to change the angle of our visualization. We often also want the notion of scenes. A scene is like your
start screen, and your options screen, and your main screen, and your end screen. And they're usually very different, and at any given point
we want to be showing one of them or the other,
so you have to really organize your code in order to know the difference between
the scenes, and have a good way of switching between them. And now let's talk about a few things specific to games. The environment of a game. Is it a side-scroller,
which means it's kinda a character moving
forward through a space? Is it a bird's eye view, like going through a maze? Is it a 3D environment? It's crazy, but you can do it. Are there multiple levels, and each of them have different environments? What are the characters in the game? They'll probably have different behaviors, and emotions, and states, like a happy state and a dead state. And they'll might be user controlled or sometimes they'll be
programatically controlled. And your program gives it some sort of logic to follow. There could be one of them, there could be lots of them. They could get spawned during the game as it's played. Now once we've got characters in an environment, we usually
also add in some items, and then we have a lot of things
colliding with each other. And we usually want to
know when things collide, because things are typically trying to attract each other, or avoid each other, like when you're picking up gems, or avoiding nasty turtles. So we need to be able to detect collision between objects, and
sometimes it's very simple collision, and other
times it's more complex if the objects are all
different shapes and sizes. Finally, if it's a game,
it's usually got a score. So how do you measure how
well the user is doing? When do you tell them
if they've lost or won? How spectacular can you make the win screen or the lose screen? So, as you can see, there
are a lot of aspects to think about when making
games and visualizations. We'll walk through some of them here, but we don't know what's in your head, and most likely, you'll
have to just combine the knowledge you learned here to make whatever really cool thing
is in your head right now."
Computer programming,Advanced JS: Natural Simulations,Intro to Natural Simulations,Welcome to Natural Simulations, Created by Pamela Fox.,"Voiceover: The world is a beautiful place. Sometimes we walk outside
and just revel in it, but other times, because we're programmers and we like to program everything, we walk outside, get inspired by it and then run home to program a simulation of the world around us. Be it's a leaf falling,
spinning to the ground or maybe it's a fire
burning in a dry forest. We can program simulations
of all those things and we can do it here on Khan Academy using JavaScript, ProcessingJS,
and a bit of math. In this course on natural simulations, we'll think about how and why things work the way they do in the real world, and then figure out how we
can translate into code. We'll make many simple [cases] because the real world
is filled with complexity and we don't always need
to model that complexity in order to achieve a
[machine] simulation. Of course our computers
can only handle so much. Whenever a programmer simulates nature we'll always have to fall
short of a 100% copy. Hey, I think you'll be really impressed with what we can do,
especially in the browser. We'll start off by
talking about randomness. A technique you've probably already used in your programs. Then noise, a more
sophisticated form of that. We can use those to
model motion of objects in the world, like
somebody lost in the woods but most objects don't move randomly. Next we'll introduce vectors and forces, which you might have
covered in physics class and figure out how to programmatically apply forces or objects
so they can accelerate. Based on being pushed,
and pulled, and repelled by everything around them. To make it so our objects
can spin on their own axis while they're moving, we'll brush up on trigonometry and come up with formulas
for angle acceleration. We can also use
trigonometry to model things like pendulums and waves, which can really get pretty hypnotic. Finally, we'll create particle systems. Many objects moving together according to their own properties and the systems properties. That will let us model a natural phenomena like water, fire, smoke. Okay, so doesn't that sound awesome? Are you pumped? Are you throwing confetti in the air thinking about how soon you'll be able to program that confetti? I know the feeling and you're
almost ready to dive in. First we want to give a huge
shout out to Daniel Shiffman. Daniel's an NYU professor
that teaches a course on natural simulations. He wrote NatureofCode.com, a whole book about it. Since he CC licensed that book we were able to put it over to JavaScript and bring it over here on Khan Academy, so that all of you can learn it here. Plus do coding challenges along the way. Without Daniel's book, we wouldn't have this exciting course. Now, ready, set, simulate!"
Computer programming,HTML/JS: Making webpages interactive,Get ready to make your webpages interactive,Welcome to making webpages interactive,n/a,"•Current transcript segment: 0:00In this course, you're going to learn
how to make your webpages interactive.•0:05You'll start with simple 
HTML/CSS webpages,•0:08then add JavaScript to change them:•0:11like to make a word game, a slide show,•0:15an infinitely-loading gallery, 
or a drawing app.•0:19You can make pretty much
anything you've seen on the web.•0:23We'll be using the language 
JavaScript to do all of that.•0:26And you might be confused•0:28if you've learned JavaScript already
and used it in a different way.•0:33You see, JavaScript was originally 
designed to be shipped with browsers•0:37to make webpages interactive.•0:39But nowadays you can use JavaScript
in so many different environments:•0:43you can use it to power 
the back end of servers•0:45that render webpages 
and store user data,•0:49or to write image manipulation scripts,•0:52or to process data in a spreadsheet,•0:56or even to control robots.•0:59If you learned JavaScript 
here on Khan Academy,•1:02then you learned it in the 
ProcessingJS environment•1:06to make drawings and animations.•1:08If you learned it somewhere else,
like on Codecademy,•1:11then maybe you learned it with a 
simple command line environment.•1:14Each environment comes with its own
set of functionality and global variables.•1:18For example, in ProcessingJS, 
there are many functions•1:22just for drawing an animation,•1:24like fill, ellipse, 
mouseClicked, and text.•1:27In a webpage environment,•1:29browsers provide a set of functions
for making webpages interactive,•1:33like getElementById, setInterval, 
and AddEventListener.•1:39You'll learn all about those functions
-- and more -- in this course,•1:43and be able to use them 
on your webpages•1:46to turn them into amazing 
interactive experiences."
Computer programming,HTML/JS: Making webpages interactive,JS and the DOM,Debugging webpages with the browser console,Learn how to debug in your webpages on Khan Academy using console.log() and the Chrome Developer Tools. ,"- [Voiceover] One of the
most useful skills that you can have as a web developer
is the ability to debug your web pages using the
tools available to you, like the browser developer tools. Every browser these days
comes with developer tools, so you should, theoretically,
learn how to use all of them, but it's also
good to know which browser has the most powerful tools
and start your debugging in that browser. Right now, that's Chrome, at least to me, but that could change in the future. Okay, so let's open the
developer tools in Chrome. And there's a few different
ways that you can do that. I like to find out what
the keyboard shortcut is for my browser and OS and use that 'cause that's the fastest. So on Mac, it's Command-Option-I. Ta-da! There's our dev tools. Another way to do it is to do right-click, Inspect Element, and that'll open up the
dev tools and it'll open up to the HTML console so you
then have to click around to what you want. But it's a pretty quick way as well. And finally, there's the long way, which is to go to your menu, go to More Tools, go to Developer Tools, and that'll open it as well. But that's a sure fire
way, but it is long, so I really recommend finding
out that keyboard shortcut and just doing it over and over and over 'til you remember it. Okay, so keyboard shortcut open, great. So there are a lot of tools down here, but there's one that we're about to use, so that is what I'm going to show. It's the JavaScript Console. This console shows all of
the warnings and errors related to http requests, CSS files, and JavaScript, plus it shows
anything that we log out. So to demonstrate, I will use 'console.log' to show a message. Now notice that it's showing
lots of syntax errors, like 'consol is not defined'. That's because I'm typing slowly and I'm in this real time environment that's constantly evaluating the new code. So it's showing me all
the errors along the way. That's something to keep in mind when you're using the console with your webpages here on Khan Academy. You can ignore all these,
all these messages here, until you're done typing and
see what the actual error is, or hopefully, there'll be no error. Presto! The console said hello to me. How very sweet of it. All right, so there's a
ton more that you can do in your browser dev tools and you should definitely
explore them more, but this should be enough to help you in simple debugging as you
go through this course."
Computer programming,HTML/JS: Making webpages interactive,DOM events,Making webpages interactive with events,n/a,"•Current transcript segment: 0:00Now you all know how to access 
and modify the DOM of your webpages.•0:04And you can do that for hours on end. 
But why would you do that•0:08when you could just start the webpage 
off with the HTML that you wanted?•0:13Because now you can do all of that 
in response to user events.•0:18And that is what makes JavaScript 
on webpages so powerful.•0:22For example, you could 
create interactive slideshows•0:26by responding when 
the user clicks a button.•0:29You could create games of all sorts,•0:31responding when the user presses keys
or moves their mouse to aim a bird.•0:36You can process forms 
and validate user input,•0:40responding when the 
user types in the form.•0:43You could create 
infinitely-loading galleries,•0:46responding whenever 
the user scrolls the page.•0:50All of that is possible by listening
to events in your webpage.•0:55The user will do some action, 
like click a button.•0:59The browser then fires-- or triggers-- 
the click event on that button,•1:05and your code already has a listener
function set up for that event,•1:10so the browser then 
calls your listener function,•1:13which is some bit of JavaScript 
that you want to happen in response.•1:17That's the basic gist of how it works,•1:19and now I'm going to show you 
how to actually code it in your webpage."
Computer programming,HTML/JS: Making webpages interactive with jQuery,Welcome to jQuery,From the inventor: Welcome!,"Meet John Resig, the developer that invented jQuery and now works as an engineer at Khan Academy. ","John Resig: Hi, I'm John Resig. I'm the creator of the jQuery
JavaScript library. I work here at Khan Academy. I created jQuery back in 2005
when I was in college. And here at Khan Academy,
I work on a number of different things including building the live coding editor
that you use here on the website. I hope you'll really enjoy
this course about jQuery. I know I love it,
and I hope you do, too."
Computer programming,HTML/JS: Making webpages interactive with jQuery,Welcome to jQuery,What is jQuery?,Want to keep learning? Keep going with our course on Khan Academy! ,"jQuery is the most popular library
on the web today. It's a library of JavaScript functions that make it easy for webpage developers
to do common tasks-- like manipulating the webpage,
responding to user events, getting data from their servers,
building effects and animations, and much more. jQuery builds on top of the functionality that browsers give us
via the JavaScript DOM API, but lets us accomplish the same things
in fewer lines of code. For example, let's say you wanted to
resize all of the images on your page, like when the user clicked a button. You could write these
four lines of code here, and that would work. Or, you could write
this single line of code, and jQuery will do all the
heavy lifting for you. Plus, jQuery takes care of any
cross-browser bugs or inconsistencies. In 2014, over 60 percent of the
top million webpages included jQuery. So, pretty much all web developers
either know jQuery, or have used jQuery
at some point in their career. And now you can become
one of those developers."
Computer programming,HTML/JS: Making webpages interactive with jQuery,DOM access with jQuery,Debugging webpages with the browser console,Learn how to debug in your webpages on Khan Academy using console.log() and the Chrome Developer Tools. ,"- [Voiceover] One of the
most useful skills that you can have as a web developer
is the ability to debug your web pages using the
tools available to you, like the browser developer tools. Every browser these days
comes with developer tools, so you should, theoretically,
learn how to use all of them, but it's also
good to know which browser has the most powerful tools
and start your debugging in that browser. Right now, that's Chrome, at least to me, but that could change in the future. Okay, so let's open the
developer tools in Chrome. And there's a few different
ways that you can do that. I like to find out what
the keyboard shortcut is for my browser and OS and use that 'cause that's the fastest. So on Mac, it's Command-Option-I. Ta-da! There's our dev tools. Another way to do it is to do right-click, Inspect Element, and that'll open up the
dev tools and it'll open up to the HTML console so you
then have to click around to what you want. But it's a pretty quick way as well. And finally, there's the long way, which is to go to your menu, go to More Tools, go to Developer Tools, and that'll open it as well. But that's a sure fire
way, but it is long, so I really recommend finding
out that keyboard shortcut and just doing it over and over and over 'til you remember it. Okay, so keyboard shortcut open, great. So there are a lot of tools down here, but there's one that we're about to use, so that is what I'm going to show. It's the JavaScript Console. This console shows all of
the warnings and errors related to http requests, CSS files, and JavaScript, plus it shows
anything that we log out. So to demonstrate, I will use 'console.log' to show a message. Now notice that it's showing
lots of syntax errors, like 'consol is not defined'. That's because I'm typing slowly and I'm in this real time environment that's constantly evaluating the new code. So it's showing me all
the errors along the way. That's something to keep in mind when you're using the console with your webpages here on Khan Academy. You can ignore all these,
all these messages here, until you're done typing and
see what the actual error is, or hopefully, there'll be no error. Presto! The console said hello to me. How very sweet of it. All right, so there's a
ton more that you can do in your browser dev tools and you should definitely
explore them more, but this should be enough to help you in simple debugging as you
go through this course."
Computer programming,Meet the professional,Meet the professional,"Welcome to ""Meet the professional""!",Pamela welcomes you to our new series about computing professionals. Created by Pamela Fox.,"Voiceover: You know
what's cool about computer science and computer programming? Well, you know, besides everything? There are tons of
interesting job in fields that use computing knowledge, and those numbers are growing everyday. In this series, we
interviewed a bunch of people that work with their computer
knowledge for a living to find out what they do, how they learnt, and what their advice is
for people new to the field. You can read about Sarah Northway, who's who an Indie game
developer and world traveler. Yann Dauphin, who
researches machine learning and plays bass guitar. Brenda Jin, who creates
table prototypes for Macy's and bikes all around the
hills of San Francisco. Tom Heinan, who creates
medical mobile apps, and is learning to be a
pilot on the weekends. Marcos Ojeda, a Khan Academy designer, developer, and dog owner, and a bunch more. So, go ahead a meet some professionals, and if you're not a
computing professional yet, think about it. It could
be a whole lot of fun."
Computers and the Internet,Digital information,Bits and bytes,Binary & data,"Adafruit founder Limor Fried and program manager Federico Gomez Suarez explain how computers represent numbers, text, images, and sound using tiny electric signals. ","(upbeat music) - Hi, my name is Limor
Fried, and I'm an engineer here at Adafruit Industries,
and this is where I do engineering and design,
and I design circuits for fashion and music and technology. - My name is Federico Gomez Suarez, and I'm a software developer
with Microsoft Hack for Good, and I look into using technology to help solve some of the big
social problems of our times. (upbeat music) - You may have heard that
computers work on ones and zeroes, or you may have seen
scary-looking visuals like this. But almost nobody today
actually deals directly with these ones and zeroes,
but ones and zeroes do play a big role in how computers
work on the inside. - Inside a computer are
electric wires and circuits and carry all the
information in a computer. How do you store or represent
information using electricity? - Well, if you have a single wire with electricity flowing through it, the signal can either be on or off. That's not a lot of choices, but it's a really important start. With one wire, we can
represent a ""yes"" or a ""no,"" true or false, a one or a zero, or anything else with only two options. This on/off state of a
single wire is called a bit, and it's the smallest piece of information the computer can store. If you use more wires, you get more bits. More ones and zeroes with more bits, you can represent more
complex information. But to understand that,
we need to learn about something called the binary number system. (calm music) - In the decimal number system, we have 10 digits from zero to nine, and that's how we've all learned to count. In the binary number system, we only have two digits, zero and one. With these two digits, we
can count up to any number. Here's how this works. In the decimal number
system we're all used to, each position in a number
has a different value. There's the one position, the 10 position, the 100 position, and so on. For example, a nine in
the 100 position is a 900. In binary, each position
also carries a value, but instead of multiplying
by 10 each time, you multiply by two. So there's the one's position, the two's position, four's position, the eight's position, and so on. For example, the number
nine in binary is 1001. To calculate the value,
we add one times eight, plus zero times four, plus zero times two, plus one times one. Almost nobody does this math
because computer do it for us. What's important is that any number can be represented with
only ones and zeroes, or by a bunch of wires that are on or off. The more wires you use, the larger the numbers you can store. With eight wires, you can store numbers between zero and 255. That's eight ones. With just 32 wires, you can store all the way from zero
to over four billion. Using the binary number system, you can represent any number you like. But what about other types of information, like text, images, or sound? It turns out that all these things can also be represented with numbers. (upbeat music) Think of all the letters in the alphabet. You could assign a number to each letter. ""A"" could be ""1,"" ""B""
could be ""2,"" and so on. You can then represent
any word or paragraph as a sequence of numbers, and as we saw, these numbers can be stored as
on or off electrical signals. Every word you see on
every webpage or your phone is represented using a system like this. (upbeat music) Now, let's consider photos, videos, and all the graphics you see on a screen. All of these images are
made out of teeny dots called pixels, and each pixel has color. Each of the colors can be
represented with numbers. When you consider that a
typical image has millions of these pixels, and a
typical video shows 30 images per second, now, we're taking
about a lot of data here. (upbeat music) - Every sound is basically a series of vibrations in the ear. Vibrations can be represented
graphically as a waveform. Any point on this waveform can
be represented by a number. And this way, any sound can be broken down into a series of numbers. If you want higher-quality sound, you will pick 32-bit
audio over 8-bit audio. More bits means a higher range of numbers. - When you use a computer to write code or make your own app,
you're not dealing directly with these ones and zeroes,
but you will be dealing with images, or sound, or video. So, if you want to
understand how computers work on the inside, it all comes down to these simple ones and zeroes and the electrical signals
in the circuits behind them. They are the backbone of how all computers input, store, process,
and output information. (upbeat music)"
Computers and the Internet,Digital information,Binary numbers,Decimal system refresher,Review how the decimal number system works before diving into the binary number system. The decimal number system and binary number system work the same way; the only difference is what each digit represents (0-9 versus 0/1). Created by Pamela Fox.,"- [Instructor] Let's
star with the refresher of the decimal system. Since understanding decimal will help us to understand binary. Consider this number 234. We often say that the
four is in the ones place. The three is in the tens place. And the two is in the hundreds places. That makes this number equal to two times a 100, plus three times 10, plus four times one. All equal 234. Now we can also say that this ones place is 10 raised to the power of zero. The tens place is 10
raised to the power of one. And the hundreds place is 10
raised to the power of two. If we're going to add another place here, this would be a 1,000 and
that would be the same as 10 raised to the power of three. Each place represents a power of 10. And that's why this is the decimal system from the Latin for 10. To figure out what
number we're looking at, we just look at the digit
that's in that place and we multiply it times its place. So a one here would be one
times a 1,000, plus 234. And that's the decimal system."
Computers and the Internet,Digital information,Binary numbers,The binary number system,"Learn about the binary number system, a system where each digit represents a power of 2. Computers store everything in binary, using one bit for each digit. Created by Pamela Fox.","- [Instructor] The binary number system works the same way as the
decimal number system. The only difference is what
each of these places represents. This is a four digit binary number 1010. Each of these digits can
also be called a bit, since a bit represents zero or one. Now this four digit number
equals the decimal number 10. And we're going to see why. This first place, this is the ones place, just like in decimal. Now there's zero here, so that means we're gonna multiply zero times one, get the very exciting value of zero. The second place, the second bit here, that's where things get more interesting. This is actually the twos
place, not the tens place, and there's a one here, so we're gonna multiply one times two. So so far, this number equals two. The third place, the third bit, this is zero and this is the fours place. So we're going to
multiply zero times four, which is once again just zero. And we're still looking at the number two. Finally, this fourth bit here,
this is the eights place, and there's a one here. So we're gonna multiply one times eight. Add that to everything else, we end up having eight plus two, which equals decimal 10. In the decimal system, each of these places
represented a power of 10. But in the binary system, each place represents a power of two. The first bit is two to
the zero power, it's one. The second bit is two to the
power of one, the first power, which is two. The third bit is two squared,
two to the power of two, which is four. And this fourth bit is two cubed, two to the power of three, that's eight. That's the only difference
between decimal and binary, what each place represents. Once we know that, we see
what digit is in each place, we multiply them together,
and we get our final value. Now let's try to convert another binary number to decimal. We can erase this work here. And then for the number,
let's just flip the bits. Zero becomes one, one becomes
zero, zero becomes one, and one becomes zero. What do you think this equals and decimal? I'll give you a second to think about it. (hums) All right. Now let's figure it out together. There's a one in the ones place. So this so far equals one times one, that's one. There's a zero in the twos place. So we add zero times two, that's zero. There's a one in the fours place. So we add one times four, that's four. So so far, we've got four plus one, and then there's a zero
in the final place, the eights place, that's
zero times eight or zero. So we've got zero plus
four plus zero plus one, which equals five in decimal. Let's try converting a bigger
binary number to decimal. We know that this equals five. What happens if we add four more digits to the left of these four digits? Let's start by figuring out
what each place represents. One way of doing that is just
to double the previous places. So this place here is 16, this place is 32, this place is 64, and this place is 128. Another way of doing this is
to calculate the powers of two. So this place is two to
the fourth, which is 16. This is two to the fifth, which is 32. This is two to the sixth, 64. And this is two to the seventh, 128. Okay, so now we know what
each place represents. Now we can add these numbers up. We know already that
these one's equal five. We already did that. Now, let's add in what we've added here. So we have a one in the 16. So that means we're going
to add 16 to the number. Then there's a zero in the 32. So that's just gonna be zero. There's a one in the 64,
so that's going to be 64. And there's a zero in the
128, so that'll be zero. So now we've got 64 plus 16 plus five. So that's 80 plus five, which is 85 in decimal. So it took us eight bits
to represent a number that only takes two digits to represent in the decimal system. That's because each bit
represents less information, just zero or one instead of zero to nine. But it's easier for computer hardware to store binary values. So binary numbers and
the binary number system are the foundation of all computing."
Computers and the Internet,Digital information,Binary numbers,Converting decimal numbers to binary,"Learn a technique for converting decimal numbers into binary numbers using just pen, paper, and calculations. Works best for small numbers, since bigger numbers require increasingly more calculations. Created by Pamela Fox.","- [Instructor] Let's try to
convert the decimal number six, from decimal to binary, I'm gonna show you my
favorite way of doing it. So I started off by writing
dashes for the bits. I'm gonna start off with eight dashes, representing the eight bits or one byte, even though we probably
don't need all of these for such a small number. And then I'm going to write the values of each of these places. So this first bit, this is
the ones place or two to zero. The second bit is the
twos place, two to one. The third bit is the
fours place, two squared. And then we have eights place, 16s place, you see we just double, 32s
place, 64s place and 128s place. Okay, now that we have these places, I start on the left side, and
I look at the place and I say, is this value greater than this value? 128 is greater than that value, so we're gonna put a zero here, because we do not need to
represent the value 128 inside this tiny little number. 64 is also greater than six, 32 also greater than six, 16 is also greater, eight is also greater, so we've got a whole lot of zeros so far. Four is not greater than six. So we're finally going to put a one. And then what we're gonna do
is subtract four from six. So six minus four equals two. So that's the remaining value that we still need to represent. And we go to the next one. This is the twos place, two
is not greater than two, it's actually exactly equal to two. So we're going to put a one as well. And now subtract again,
two minus two equals zero, we fix that, two minus two is zero, there's nothing left to represent, we have entirely represented
the value six already. So that means we can put a
zero in this remaining place. So now we can say this is how
to represent six in binary. The full byte would look like this, or we might shorten it to just four bits. Or we might even shorten it to just three, but we typically do like present bits in groupings of four or eight. Now let's try a bigger number. So let's erase all this work here. I wanna keep my place values around because those are handy and
they're gonna be the same, and just erase everything
else, okay, good enough. All right, so let's
try the value 25, okay? 25 decimal, how do we
convert that to binary? So once again we start over here, is 128 greater than 25? Yes it is, put a zero. 64 is greater, put a zero. 32 also greater, we'll put a zero. 16 is not greater than 25,
so 16 is contained within 25. We'll put a one and then do a little math to figure out what we
still need to represent. So 25 minus 16 equals four
and five, that's nine. All right, so we still need
to represent the value nine in these remaining bits, okay? The next place value is the eights place. Eight is not greater than nine. So that means we are going to
need to use the eights place, we'll put a one in there. So now we have nine
minus eight equals one. All right, there's only one more thing that we have to represent. So we've already represented 24, right? Here we're looking at
having represented 24. If we filled the rest of zeros right now, we'd have the number 24,
but we're looking for 25. So we keep going, is
four greater than one? Yes, so we'll put a zero. Two is greater than one, we'll put a zero. One is equal to one, so
we will put a one here. So here we have the decimal
number 25 in binary. So this required one, two,
three, four five bits, so we would probably represent
it in a byte like this. So this is the basic strategy that I use for converting
numbers from decimal to binary and this will work for numbers up to 255 using these eight bits here. Beyond that, you're
going to need more bits. And honestly, at that point, you might wanna just use a calculator or write a program to do it."
Computers and the Internet,Digital information,Binary numbers,Patterns in binary numbers,Learn what it means when a binary number has a 1 in the 1's place or a 1 in every single place. Created by Pamela Fox.,"- [Instructor] There's
some interesting patterns in binary numbers. And I find that by
understanding these patterns, I have better intuitive understanding for what binary number I'm looking at. So let's look at a few
patterns in this video. We'll start with odd numbers. The decimal number three is odd and in binary it's 0011. Then there's decimal five that's odd. And in binary that's 0101. Then seven, in binary that's 0111. Finally, nine, in binary is 1001. So do you noticed the pattern in these binary numbers here? I'll give you a hint if
you're not seeing it. (instructor humming) All of these binary numbers end in a one. In fact, the only way
to make an odd number in the binary number system is if it ends in a one. That's because the one is the ones place and every other place is a power of two. And odd number is a number
that if you'd divide it by two, gives a remainder of one. So that means that we
always have to have a one in that ones place to make an odd number. Now we should be able to
look at any binary number and say if it's odd or even. Let's try that out for
some very large numbers. Which one of these is odd? Well, let's just look at
the ones place and see. Zero, zero, one, zero. Okay, this one is the odd one out. These other ones, they're all even. So even though I have no
clue what these numbers are, I do know that this is the odd number. So now we have a little
more of an intuitive understanding of binary numbers, but let's keep exploring
and see what else there is. Another interesting pattern is when a binary number is all ones. So we can have one, we can have one, one we can have one, one, one, and we can have one, one, one, one. Lots of ones. So in decimal, this is the same as one for this first value. Three is one, one. Seven is one, one, one. And 15 is one, one, one, one. So what is special about
these decimal numbers here? one, three, seven, and 15? It's probably not obvious at first, but each of these are actually
a power of two minus one. So this one is the same as two minus one. Three is the same as four minus one. Seven is the same as eight minus one. And 15 is the same as 16 minus one. We can also write these in
terms of their powers of two's. So this is two to the one minus one. Two to the two minus one. Two to the three minus one. And two to the four minus one. So whenever a binary number has one in all of its places, then it will always equal to largest number that can be represented
by that number of bits. This is a lot like in the decimal system where there's nine, nine, nine, nine, nine, nine, and nine, nine, nine, nine. If we add one, we'd go over and this is a largest value that can be expressed in
that number of digits. That's what we're looking at here. We can also write the number of bits that we're dealing with here. So the number of bits, this is one bit, this is two bits, this is three bits, and this is four bits. So we can see that for four bits, the highest number that can be represented is two to the fourth minus one. For three, it's two to the
three minus one, et cetera. So that means if we know the
number of bits that we have, we know the highest value
that could be represented and we know that that high value will be a one in every place. So we can use that information to help us have a better understanding
of binary numbers. So consider this binary number; 11111. What is this equal in decimal? Well, it's got one, two,
three, four, five bits. So that means this must be
two to the fifth minus one. Two to the fifth is the
same as two times two times two times two times two, which is the same as 32, and then if we minus one, we get that this is 31. So without having to add these up, we find out what this is. Now we could have it
done it the old way too. So let's see what this is. The one place, two place, four place, eight place, 16 place. And we can say 16 plus eight is 24, plus four is 28, plus two is 30, plus one is 31. So either way we do it, we get the same value. This just gives us another
way of understanding binary numbers and having a
better intuition for them."
Computers and the Internet,Computers,Introducing computers,"What makes a computer, a computer?",Inventor and designer May-Li Khoe and virtual reality designer Nat Brown introduce the four features that all computers share. ,"(upbeat music)
- One, two, three, four! - My name is May-Li Khoe and
I'm a designer and an inventor. So, some of the things I've
designed have been at Apple, and now I design products for kids to use so that they can have an
easier time in school. My other jobs include DJ'ing and dancing. (upbeat, bouncy music) Computers are everywhere. They're in people's pockets, they're in people's cars, people
have them on their wrists, they might be in your backpack right now, but what makes a computer a computer? - What does make a
computer a computer anyway? - And how does it even work? (upbeat guitar music) - Hi, I'm Nat. I was one of the original
designers of the Xbox. I've been working with
computers since I was, maybe, seven years old and now I
work on virtual reality. (fast, jazzy music) As humans, we've always built tools to help us solve problems. Tools like a wheelbarrow, a hammer, or a printing press, or a tractor trailer. All of these inventions
helped us with manual work. Over time, people began to wonder if a machine could be designed and built to help us with the thinking work we do. Like solving equations or
tracking the stars in the sky. Rather than moving or
manipulating physical things, like dirt and stone, these machines would need to be designed
to manipulate information. - As the pioneers of computer science explored how to design a thinking machine, they realized that it had to
perform four different tasks. It would need to take
input, store information, process it, and then output the results. Now this might sound simple, but these four things are
common to all computers. And that's what makes
a computer a computer. - [Nat] The earliest
computers were made out of wood and metal with
mechanical levers and gears. By the 20th century though, computers started using
electrical components. These early computers were
really large and really slow. A computer the size of a room might take hours just to do a basic math problem. - [Announcer] These machines
are things of gleaming, varied colored metal and numerous flashing lights. - Computers started out
as basic calculators, which was already really
awesome at the time and they were only
manipulating numbers back then. But now we can use them
to talk to each other, we can use them to play games, control robots, and do any crazy thing that you could probably imagine. - Modern computers look nothing like those clunky old machines, but they still do the same four things. (funky, upbeat music) - First, we're gonna talk about input. This is my favorite because what input is, is the stuff that the world does, or that you do that makes
the computer do stuff. You can tell a computer what
to do with the keyboard, you can tell them what
to do with the mouse, the microphone, the camera, and now if you're wearing
a computer on your wrist, it might listen to your heartbeat, or in your car it might be listening to what the car is doing. And a touchscreen can
actually sense your finger and it takes that as
input on what it's doing. - All these different inputs
give the computer information, which is then stored in memory. A computer's processor takes
information for memory, it manipulates it or changes it using algorithm, which is
just a series of commands, and then it sends the process information back to be stored in memory again. This continues until the processed information is ready to be output. How a computer outputs information depends on what the
computer is designed to do. A computer display can
show texts, photos, videos, or interactive games,
even virtual reality. The output of a computer may even include signals to control a robot. And when computers
connect over the internet, the output from one computer becomes the input to another, and vice versa. - The computers we use today look really different from the
earliest thinking machines. And who knows what the computers
of tomorrow will be like. My hope is that you get to help decide what you want the computers
of tomorrow to look like. But across all computers, regardless of the different types of
technology they use, they're also doing the same four things. They take in information,
they store it as data, they process it, and then
they output the results."
Computers and the Internet,Computers,Computer components,"CPU, memory, input & output","Smart fabric designer Madison Maxey and founder and maker Danielle Applestone explain the different components that allow computers to input, store, process, and output information. ","(rock music) - Hi, my name is Madison Maxey. I have a company called
Loomia, and we focus on making smart fabrics for smart clothing and smart soft-good products. The sky's the limit when
it comes to textiles. - My name is Danielle Applestone, and I'm CEO of Other Machine Copmany. We build a desktop milling machine. A milling machine takes
a rotating cutting tool and moves it through material
to create a 3-D object. - Under the hood, all computers do the same four basic things. They input information, store, and process the information, and
then output information. Each of these things is done by a different part of the computer. There are input devices that
take input from the outside world and convert it
into binary information. There's memory to store this information. There's a central processing unit, or CPU, where all the calculations are done. And finally, there are output devices that take information and
convert it into physical output. - [Danielle] Let's talk about input first. Computers can take many
different types of input, like the keyboard of a computer,
the touch pad of a phone, a camera, a microphone, or a GPS, but even the sensors
on a car, a thermostat, or a drone are also
different input devices. Now, let's look at a simple
example of how input travels through a computer and becomes output. When you press a key on your keyboard, let's say the letter B, the keyboard converts the letter to a number. That number is sent as binary, ones and zeros, into the computer. Starting from this
number, the CPU calculates how to display the
letter B pixel-by-pixel. The CPU requests step-by-step
instructions from memory, which tell it how to draw the letter B. The CPU runs these instructions and stores the results
as pixels in memory. Finally, this pixel information is sent in binary to the screen. The screen is an output
device, which converts the binary signals into the tiny lights and colors that make up what you see. - This all happens so quickly
it feels instantaneous, but to display each letter,
a computer runs thousands of instructions, starting from the moment your finger presses the keyboard. - In that example, the
output device was the screen, but there are many
different types of output, which take a binary
signal from the computer and do something in the physical world. For example, a speaker will play sound and a 3-D printer will print an object. Output devices can also
control physical motion, like a robotic arm, the motor
of a car, or the cutting tool of the milling machine
that my company makes. New types of inputs and
outputs let computers interact with the world
in entirely new ways. This has been helped out by improvements to the speed and size
of the memory and CPU. The more complicated
a task is and the more information that's input or
output, the more processing power and memory a computer needs. Typing letters on a screen may be easy, but to do complicated
3-D graphics or record a high-definition movie, modern computers often have multiple CPUs to
process all that information, and many gigabits of memory to store it. - No matter what it is you
want to do with a computer, every single action is about inputting information from the physical world, storing and processing that information, and getting some output back
into the physical world."
Computers and the Internet,The Internet,Introducing the Internet,What is the Internet?,"What is the internet? Short answer: a distributed packet-switched network. This is the introduction video to the series, ""How the Internet Works"". Vint Cerf, one of the ""fathers of the internet"" explains the history of the net and how no one person or organization is really in charge of it. ","[woosh] [ding] [buildup sound] [music] What is the internet? The internet is like a popular thing. Some satellites up there. I picture it in my head with like waves of
internet going to the phone. Somebody told me a cloud once. The internet is a lot like plumbing it's always moving. Most people don't have any idea where
the internet came from and doesn't matter, they don't need to. It's
sort of like asking who invented the ballpoint pen, or the flush toilet or the zipper. These are all things we just use every
day we don't even think about the fact that one day somebody invented them. So the internet is just like that. Many,
many years ago in the early 1970s my partner Bob Kahn and I began working on the design of what we now call the internet. It was a result of another experiment called the ARPANET which stood for Advanced Research Project Agency Network. It was a Defense Department research project. Paul Baran was trying to figure out how to build a communication system that might actually survive a nuclear attack. So he had this idea of breaking messages
up into blocks and sending them as fast as possible in every possible direction
through the mesh network. [whoosh] So we built what eventually became a nationwide
experimental packet network, and it worked. [electronic music with heavy beats] Is anybody in charge of the internet? The government controls it. Elves, obviously elves! The people to control the Wi-Fi
because then no Wi-Fi, no internet. T-mobile, um, Xfinity, Bill Gates [pause] Right?! The honest answer is well nobody and maybe another answer is everybody. The real answer is that the internet is
made up of an incredibly large number of independently operated networks. What's interesting about the system is
that it's fully distributed. There's no central control that is deciding how packets are routed or where pieces of the network are built or even who interconnects with whom. These are all business decisions that
are made independently by the operators. They are all motivated to assure that
there is end-to-end connectivity of every part of the network because the
utility of the net is that any device can communicate with any other device;
just like you want to be able to make phone calls to any other telephone in
the world. There's nothing like this that has ever
been built before. The idea that what you know might be useful to somebody else or vice versa is a very powerful motivator for sharing information. By the way that's how science gets done,
people share information. So this is an opportunity for people to
think up new applications, maybe program them as apps on a mobile phone, maybe become part of the continued
growth of the infrastructure of the network to bring it to people who don't
have access to it yet; or just make use of it on a day-to-day basis. You can't escape from contact with the
internet so why not get to know it and use it. [swirling sound effect] [ding] Subtitles by the Amara.org community"
AP®︎/College Computer Science Principles,Digital information,Bits and bytes,Binary & data,"Adafruit founder Limor Fried and program manager Federico Gomez Suarez explain how computers represent numbers, text, images, and sound using tiny electric signals. ","(upbeat music) - Hi, my name is Limor
Fried, and I'm an engineer here at Adafruit Industries,
and this is where I do engineering and design,
and I design circuits for fashion and music and technology. - My name is Federico Gomez Suarez, and I'm a software developer
with Microsoft Hack for Good, and I look into using technology to help solve some of the big
social problems of our times. (upbeat music) - You may have heard that
computers work on ones and zeroes, or you may have seen
scary-looking visuals like this. But almost nobody today
actually deals directly with these ones and zeroes,
but ones and zeroes do play a big role in how computers
work on the inside. - Inside a computer are
electric wires and circuits and carry all the
information in a computer. How do you store or represent
information using electricity? - Well, if you have a single wire with electricity flowing through it, the signal can either be on or off. That's not a lot of choices, but it's a really important start. With one wire, we can
represent a ""yes"" or a ""no,"" true or false, a one or a zero, or anything else with only two options. This on/off state of a
single wire is called a bit, and it's the smallest piece of information the computer can store. If you use more wires, you get more bits. More ones and zeroes with more bits, you can represent more
complex information. But to understand that,
we need to learn about something called the binary number system. (calm music) - In the decimal number system, we have 10 digits from zero to nine, and that's how we've all learned to count. In the binary number system, we only have two digits, zero and one. With these two digits, we
can count up to any number. Here's how this works. In the decimal number
system we're all used to, each position in a number
has a different value. There's the one position, the 10 position, the 100 position, and so on. For example, a nine in
the 100 position is a 900. In binary, each position
also carries a value, but instead of multiplying
by 10 each time, you multiply by two. So there's the one's position, the two's position, four's position, the eight's position, and so on. For example, the number
nine in binary is 1001. To calculate the value,
we add one times eight, plus zero times four, plus zero times two, plus one times one. Almost nobody does this math
because computer do it for us. What's important is that any number can be represented with
only ones and zeroes, or by a bunch of wires that are on or off. The more wires you use, the larger the numbers you can store. With eight wires, you can store numbers between zero and 255. That's eight ones. With just 32 wires, you can store all the way from zero
to over four billion. Using the binary number system, you can represent any number you like. But what about other types of information, like text, images, or sound? It turns out that all these things can also be represented with numbers. (upbeat music) Think of all the letters in the alphabet. You could assign a number to each letter. ""A"" could be ""1,"" ""B""
could be ""2,"" and so on. You can then represent
any word or paragraph as a sequence of numbers, and as we saw, these numbers can be stored as
on or off electrical signals. Every word you see on
every webpage or your phone is represented using a system like this. (upbeat music) Now, let's consider photos, videos, and all the graphics you see on a screen. All of these images are
made out of teeny dots called pixels, and each pixel has color. Each of the colors can be
represented with numbers. When you consider that a
typical image has millions of these pixels, and a
typical video shows 30 images per second, now, we're taking
about a lot of data here. (upbeat music) - Every sound is basically a series of vibrations in the ear. Vibrations can be represented
graphically as a waveform. Any point on this waveform can
be represented by a number. And this way, any sound can be broken down into a series of numbers. If you want higher-quality sound, you will pick 32-bit
audio over 8-bit audio. More bits means a higher range of numbers. - When you use a computer to write code or make your own app,
you're not dealing directly with these ones and zeroes,
but you will be dealing with images, or sound, or video. So, if you want to
understand how computers work on the inside, it all comes down to these simple ones and zeroes and the electrical signals
in the circuits behind them. They are the backbone of how all computers input, store, process,
and output information. (upbeat music)"
AP®︎/College Computer Science Principles,Digital information,Binary numbers,Decimal system refresher,Review how the decimal number system works before diving into the binary number system. The decimal number system and binary number system work the same way; the only difference is what each digit represents (0-9 versus 0/1). Created by Pamela Fox.,"- [Instructor] Let's
star with the refresher of the decimal system. Since understanding decimal will help us to understand binary. Consider this number 234. We often say that the
four is in the ones place. The three is in the tens place. And the two is in the hundreds places. That makes this number equal to two times a 100, plus three times 10, plus four times one. All equal 234. Now we can also say that this ones place is 10 raised to the power of zero. The tens place is 10
raised to the power of one. And the hundreds place is 10
raised to the power of two. If we're going to add another place here, this would be a 1,000 and
that would be the same as 10 raised to the power of three. Each place represents a power of 10. And that's why this is the decimal system from the Latin for 10. To figure out what
number we're looking at, we just look at the digit
that's in that place and we multiply it times its place. So a one here would be one
times a 1,000, plus 234. And that's the decimal system."
AP®︎/College Computer Science Principles,Digital information,Binary numbers,The binary number system,"Learn about the binary number system, a system where each digit represents a power of 2. Computers store everything in binary, using one bit for each digit. Created by Pamela Fox.","- [Instructor] The binary number system works the same way as the
decimal number system. The only difference is what
each of these places represents. This is a four digit binary number 1010. Each of these digits can
also be called a bit, since a bit represents zero or one. Now this four digit number
equals the decimal number 10. And we're going to see why. This first place, this is the ones place, just like in decimal. Now there's zero here, so that means we're gonna multiply zero times one, get the very exciting value of zero. The second place, the second bit here, that's where things get more interesting. This is actually the twos
place, not the tens place, and there's a one here, so we're gonna multiply one times two. So so far, this number equals two. The third place, the third bit, this is zero and this is the fours place. So we're going to
multiply zero times four, which is once again just zero. And we're still looking at the number two. Finally, this fourth bit here,
this is the eights place, and there's a one here. So we're gonna multiply one times eight. Add that to everything else, we end up having eight plus two, which equals decimal 10. In the decimal system, each of these places
represented a power of 10. But in the binary system, each place represents a power of two. The first bit is two to
the zero power, it's one. The second bit is two to the
power of one, the first power, which is two. The third bit is two squared,
two to the power of two, which is four. And this fourth bit is two cubed, two to the power of three, that's eight. That's the only difference
between decimal and binary, what each place represents. Once we know that, we see
what digit is in each place, we multiply them together,
and we get our final value. Now let's try to convert another binary number to decimal. We can erase this work here. And then for the number,
let's just flip the bits. Zero becomes one, one becomes
zero, zero becomes one, and one becomes zero. What do you think this equals and decimal? I'll give you a second to think about it. (hums) All right. Now let's figure it out together. There's a one in the ones place. So this so far equals one times one, that's one. There's a zero in the twos place. So we add zero times two, that's zero. There's a one in the fours place. So we add one times four, that's four. So so far, we've got four plus one, and then there's a zero
in the final place, the eights place, that's
zero times eight or zero. So we've got zero plus
four plus zero plus one, which equals five in decimal. Let's try converting a bigger
binary number to decimal. We know that this equals five. What happens if we add four more digits to the left of these four digits? Let's start by figuring out
what each place represents. One way of doing that is just
to double the previous places. So this place here is 16, this place is 32, this place is 64, and this place is 128. Another way of doing this is
to calculate the powers of two. So this place is two to
the fourth, which is 16. This is two to the fifth, which is 32. This is two to the sixth, 64. And this is two to the seventh, 128. Okay, so now we know what
each place represents. Now we can add these numbers up. We know already that
these one's equal five. We already did that. Now, let's add in what we've added here. So we have a one in the 16. So that means we're going
to add 16 to the number. Then there's a zero in the 32. So that's just gonna be zero. There's a one in the 64,
so that's going to be 64. And there's a zero in the
128, so that'll be zero. So now we've got 64 plus 16 plus five. So that's 80 plus five, which is 85 in decimal. So it took us eight bits
to represent a number that only takes two digits to represent in the decimal system. That's because each bit
represents less information, just zero or one instead of zero to nine. But it's easier for computer hardware to store binary values. So binary numbers and
the binary number system are the foundation of all computing."
AP®︎/College Computer Science Principles,Digital information,Binary numbers,Patterns in binary numbers,Learn what it means when a binary number has a 1 in the 1's place or a 1 in every single place. Created by Pamela Fox.,"- [Instructor] There's
some interesting patterns in binary numbers. And I find that by
understanding these patterns, I have better intuitive understanding for what binary number I'm looking at. So let's look at a few
patterns in this video. We'll start with odd numbers. The decimal number three is odd and in binary it's 0011. Then there's decimal five that's odd. And in binary that's 0101. Then seven, in binary that's 0111. Finally, nine, in binary is 1001. So do you noticed the pattern in these binary numbers here? I'll give you a hint if
you're not seeing it. (instructor humming) All of these binary numbers end in a one. In fact, the only way
to make an odd number in the binary number system is if it ends in a one. That's because the one is the ones place and every other place is a power of two. And odd number is a number
that if you'd divide it by two, gives a remainder of one. So that means that we
always have to have a one in that ones place to make an odd number. Now we should be able to
look at any binary number and say if it's odd or even. Let's try that out for
some very large numbers. Which one of these is odd? Well, let's just look at
the ones place and see. Zero, zero, one, zero. Okay, this one is the odd one out. These other ones, they're all even. So even though I have no
clue what these numbers are, I do know that this is the odd number. So now we have a little
more of an intuitive understanding of binary numbers, but let's keep exploring
and see what else there is. Another interesting pattern is when a binary number is all ones. So we can have one, we can have one, one we can have one, one, one, and we can have one, one, one, one. Lots of ones. So in decimal, this is the same as one for this first value. Three is one, one. Seven is one, one, one. And 15 is one, one, one, one. So what is special about
these decimal numbers here? one, three, seven, and 15? It's probably not obvious at first, but each of these are actually
a power of two minus one. So this one is the same as two minus one. Three is the same as four minus one. Seven is the same as eight minus one. And 15 is the same as 16 minus one. We can also write these in
terms of their powers of two's. So this is two to the one minus one. Two to the two minus one. Two to the three minus one. And two to the four minus one. So whenever a binary number has one in all of its places, then it will always equal to largest number that can be represented
by that number of bits. This is a lot like in the decimal system where there's nine, nine, nine, nine, nine, nine, and nine, nine, nine, nine. If we add one, we'd go over and this is a largest value that can be expressed in
that number of digits. That's what we're looking at here. We can also write the number of bits that we're dealing with here. So the number of bits, this is one bit, this is two bits, this is three bits, and this is four bits. So we can see that for four bits, the highest number that can be represented is two to the fourth minus one. For three, it's two to the
three minus one, et cetera. So that means if we know the
number of bits that we have, we know the highest value
that could be represented and we know that that high value will be a one in every place. So we can use that information to help us have a better understanding
of binary numbers. So consider this binary number; 11111. What is this equal in decimal? Well, it's got one, two,
three, four, five bits. So that means this must be
two to the fifth minus one. Two to the fifth is the
same as two times two times two times two times two, which is the same as 32, and then if we minus one, we get that this is 31. So without having to add these up, we find out what this is. Now we could have it
done it the old way too. So let's see what this is. The one place, two place, four place, eight place, 16 place. And we can say 16 plus eight is 24, plus four is 28, plus two is 30, plus one is 31. So either way we do it, we get the same value. This just gives us another
way of understanding binary numbers and having a
better intuition for them."
AP®︎/College Computer Science Principles,The Internet,Introducing the Internet,What is the Internet?,"What is the internet? Short answer: a distributed packet-switched network. This is the introduction video to the series, ""How the Internet Works"". Vint Cerf, one of the ""fathers of the internet"" explains the history of the net and how no one person or organization is really in charge of it. ","[woosh] [ding] [buildup sound] [music] What is the internet? The internet is like a popular thing. Some satellites up there. I picture it in my head with like waves of
internet going to the phone. Somebody told me a cloud once. The internet is a lot like plumbing it's always moving. Most people don't have any idea where
the internet came from and doesn't matter, they don't need to. It's
sort of like asking who invented the ballpoint pen, or the flush toilet or the zipper. These are all things we just use every
day we don't even think about the fact that one day somebody invented them. So the internet is just like that. Many,
many years ago in the early 1970s my partner Bob Kahn and I began working on the design of what we now call the internet. It was a result of another experiment called the ARPANET which stood for Advanced Research Project Agency Network. It was a Defense Department research project. Paul Baran was trying to figure out how to build a communication system that might actually survive a nuclear attack. So he had this idea of breaking messages
up into blocks and sending them as fast as possible in every possible direction
through the mesh network. [whoosh] So we built what eventually became a nationwide
experimental packet network, and it worked. [electronic music with heavy beats] Is anybody in charge of the internet? The government controls it. Elves, obviously elves! The people to control the Wi-Fi
because then no Wi-Fi, no internet. T-mobile, um, Xfinity, Bill Gates [pause] Right?! The honest answer is well nobody and maybe another answer is everybody. The real answer is that the internet is
made up of an incredibly large number of independently operated networks. What's interesting about the system is
that it's fully distributed. There's no central control that is deciding how packets are routed or where pieces of the network are built or even who interconnects with whom. These are all business decisions that
are made independently by the operators. They are all motivated to assure that
there is end-to-end connectivity of every part of the network because the
utility of the net is that any device can communicate with any other device;
just like you want to be able to make phone calls to any other telephone in
the world. There's nothing like this that has ever
been built before. The idea that what you know might be useful to somebody else or vice versa is a very powerful motivator for sharing information. By the way that's how science gets done,
people share information. So this is an opportunity for people to
think up new applications, maybe program them as apps on a mobile phone, maybe become part of the continued
growth of the infrastructure of the network to bring it to people who don't
have access to it yet; or just make use of it on a day-to-day basis. You can't escape from contact with the
internet so why not get to know it and use it. [swirling sound effect] [ding] Subtitles by the Amara.org community"
AP®︎/College Computer Science Principles,Online data security,Introduction to online data security,Importance of data security,"Why is it important to understand data security? From protecting yourself and your family to protecting your wallet, this introduction to Internet safety will get you interested in learning more! Created by Sal Khan.","- I'm going to make a bold prediction. You probably don't like
people stealing your identity which allows them to steal your money. Or maybe tell the whole
universe what you're up to and being able to track
you and your family, and compromise your security. These don't feel like good things. And so, if that is true
of you, it's true of me. I don't like any of those things. I wanna keep my private
information private, then you should care about data security. And that's what we're
going to do in this unit. You're gonna learn a lot about personally identifiable information. Your name is one example, but also things like your
social security number, or things that are indirectly,
personally identifiable like your address, or your phone number, why that's important. And then we're going to learn the ways that people are going to
try to get ahold of it, and why they want to get ahold of it. Because they might wanna misrepresent you, or or publish things
about you on the Internet, or control your presence on the internet, or steal money from you or from
others that you care about. And then we're going to learn about ways to protect from those. A lot of that's going to be
behavior change on your part to be a little bit more vigilant, but also technology ways of
keeping your data secret, encrypting your data, authentication, making sure that the person
who says they are who they are, are actually them. So enjoy this unit on data security. It isn't just interesting, which it is. It could save you a lot of money, a lot of pain, and a lot of embarrassment."
AP®︎/College Computer Science Principles,Online data security,PII (Personally identifiable information),(PII) Personally Identifiable Information ,"Personally Identifiable Information (PII) includes things that can identify you directly, such as your social security number, to things that may help identify you indirectly, such as your phone number or birthday. If that information falls into the wrong hands, you could be tracked without your knowledge or even have your identity stolen. Created by Sal Khan.","- Hi everyone. Sal Khan here from Khan academy. My Social Security Number is 857, - 32 - 5567. No, it's not. I wouldn't tell you my Social
Security Number like that. And that's because it is personally identifiable
information, or PII. And there's a reason why
you want to keep that to yourself, or at least
limit who has access to PII. Because if someone has access,
they can expose your privacy, tell the world where you
live, they could track you and they could tell the
world what you've been up to, maybe when you should be working what websites you're visiting, or, even worse, potentially,
they could steal your identity, take money out of your bank account, take a credit card in your name, do some other form of identity theft that could be embarrassing,
or super costly. So, if you have some type of a service, either online or otherwise,
that's asking for something like your Social Security Number, or your birthday, which might
be a little bit more indirect, or your email address,
or your phone number, you might ask why. Sometimes there's a legitimate reason why they need to know these things but many times, I'd argue
even most of the time, there might not be a legitimate reason. And so you need to ask yourself, well what are they going to do with it? And if you don't feel comfortable
giving that information, ask yourself, do you
really need that service? So think seriously about your PII. Unfortunately, bad actors
on the Internet are coming up with new ways of
leveraging both direct PII, personally identifiable information like Social Security Numbers, even biometrics, even your name, and indirect measures, or
indirect pieces of PII, like your birthday, or your
address, or your email address, or your phone number,
that can be put together to do shady things with your identity. So be very careful."
Computer science,Algorithms,Intro to algorithms,What is an algorithm and why should you care?,n/a,"•Current transcript segment: 0:00- [Voiceover] What is an algorithm?•0:03One definition might be a set of steps•0:05to accomplish a task.•0:07You might have an algorithm•0:09for getting from home to school,•0:11for making a grilled cheese sandwich,•0:13or for finding what you're
looking for in a grocery store.•0:18In computer science, an
algorithm is a set of steps•0:21for a computer program
to accomplish a task.•0:24Algorithms put the science
in computer science.•0:28And finding good algorithms
and knowing when to apply them•0:31will allow you to write
interesting and important programs.•0:36Let's talk about a few famous algorithms.•0:39How does Google Hangouts
transmit live video•0:41across the Internet so quickly?•0:44They use audio and video
compression algorithms.•0:48How does Google Maps figure out how to get•0:50from Dallas, Texas to Orlando, Florida•0:53so that you can get to Disney World?•0:55They use a route finding algorithm.•0:58How does Pixar color a
3D model of a character•1:01based on the lighting in a virtual room?•1:04They use a rendering algorithm.•1:08How does Nasa choose how
to arrange the solar panels•1:11on the International Space Station•1:13and when to rearrange them?•1:15They use an optimization
and a scheduling algorithm.•1:20Those algorithms are more complex•1:22than our everyday algorithms•1:23like making a grilled cheese sandwich.•1:25But they boil down to the same thing,•1:27a set of steps to accomplish a task.•1:31If you know something
about existing algorithms,•1:34you can save yourself some effort•1:36and make your programs faster•1:38by applying the right one.•1:40For example, let's say
that you're writing a game•1:43and you want the user•1:44to be able to play against the computer.•1:46Well, you could look at
checkers games for inspiration.•1:50Computer scientists have
figured out how to write•1:52checkers programs that never lose•1:55by using the minimax search algorithm•1:58to search through the huge
tree of possible moves.•2:03If your game is similar to checkers,•2:05then you might be able to use algorithms•2:06based on these techniques.•2:08If not, then knowing the
limitations of those algorithms•2:12might lead you to redesign your game•2:14if it requires having a
skilled computer player.•2:17It's also important to know
how to design new algorithms•2:21as well as how to analyze their
correctness and efficiency.•2:25In the biological sciences,•2:27new algorithms are
continually being designed•2:29with purposes like designing
the molecular structures•2:32that are the core of
disease fighting drugs.•2:36In physics, algorithms simulate climate•2:39and weather patterns.•2:40In other algorithms, search
and analyze the vast data•2:44about stars in the
universe that's collected•2:46by automated space telescopes.•2:49Across all the sciences,
and even on websites•2:52like Khan Academy, efficient
algorithms are needed•2:55to analyze huge data sets
or to select intelligently•2:59from a vast number of possible decisions.•3:02In just about any area
you might be interested,•3:05new algorithms will allow
massive computational power•3:08to be harnessed to do things
that people really need•3:11and care about.•3:12Now, not all algorithms are created equal.•3:15So what makes a good algorithm?•3:18The two most important criteria•3:20are that it solves a problem•3:22and that it does so efficiently.•3:26Most of the time, we want an algorithm•3:27to give us an answer that
we know is always correct.•3:31Sometimes we can live with an algorithm•3:33that doesn't give us the correct
answer or the best answer•3:36because the only perfect algorithms•3:38that we know for those problems•3:40take a really, really long time.•3:43For example, let's say we want a program•3:46that would determine
the most efficient route•3:49for a truck that delivers packages,•3:51starting and ending the day at a depot.•3:54It would take weeks to run•3:56going through all the possibilities.•3:59But if we're okay with a program•4:00that would determine a route that's good•4:02but maybe not the best,•4:04then it could run in seconds.•4:06In some case, good is good enough.•4:09How do you measure the
efficiency of an algorithm?•4:12We could time how long
it takes to run the code,•4:15but that would only tell
us about that particular•4:18implementation in a certain
programming language•4:20on a particular computer•4:22and just for the input it was given.•4:25Instead, computer
scientists use a technique•4:27called asymptotic analysis,•4:29which allows algorithms to
be compared independently•4:32of a particular programming
language or hardware•4:35so that we can conclusively say that yes,•4:37some algorithms are more
efficient than others.•4:41Now you can learn about algorithms•4:43and asymptotic analysis on Khan Academy•4:45thanks to the contribution
of two Dartmouth•4:48college professors.•4:50Tom Cormen is the first author•4:52of the most popular
college algorithms textbook•4:54in the world, plus the author•4:56of Algorithms Unlocked.•4:59Devin Balkcom designed
Dartmouth's intro CS course•5:02and researches robotics.•5:04He built the world's first
origami folding robot.•5:08Tom and Devin will teach
you many of the algorithms•5:10that you would learn in APCS or CS 101,•5:13like searching algorithms,
sorting algorithms,•5:15recursive algorithms
and my personal favorite,•5:17graph algorithms.•5:19There will be tons of
interactive visualizations,•5:22quizzes and coding challenges•5:24to help you understand better•5:25along your learning journey."
Computer science,Cryptography,Ancient cryptography,What is cryptography?,What is Cryptography? A story which takes us from Caesar to Claude Shannon. Created by Brit Cruise.,"Imagine two people who share an important secret have to split up. This requires them to communicate private information from a distance. However, an eavesdropper named Eve also wants this information, and has the ability to intercept their messages. So, Alice decides to communicate using letters written in some kind of secret code. The following analogy is helpful. First, Alice locks her message in a box, using a lock that only she and Bob know the combination to. This is known as 'encryption.' Then, the locked message is sent to Bob. When Bob receives the box, he opens it using the code they shared in advance. This is called 'decryption.' Cryptography begins when we abandon physical locks and use 'ciphers' instead. Think of [ciphers] as virtual locks. Ciphers allow Alice and Bob to scramble and descramble their messages so that they would appear meaningless if Eve intercepted them. Cryptography has been around for thousands of years. It has decided wars, and is at the heart of the worldwide communication network today. The fascinating story of cryptography requires us to understand two very old ideas related to number theory and probability theory."
Computer science,Cryptography,Ancient cryptography,The Caesar cipher,"Brit explains the Caesar cipher, the first popular substitution cipher, and shows how it was broken with ""frequency analysis"". Created by Brit Cruise.","SPEAKER 1: The first well known
cipher, a substitution cipher, was used by Julius
Caesar around 58 BC. It is now referred to
as the Caesar Cipher. Caesar shifted each letter
in his military commands in order to make them
appear meaningless should the enemy intercept it. Imagine Alice and Bob decided
to communicate using the Caesar Cipher First, they would need
to agree in advance on a shift to use-- say, three. So to encrypt her
message, Alice would need to apply a shift
of three to each letter in her original message. So A becomes D, B becomes
E, C becomes F, and so on. This unreadable, or
encrypted message, is then sent to Bob openly. Then Bob simply subtracts
the shift of three from each letter in order to
read the original message. Incredibly, this
basic cipher was used by military leaders for
hundreds of years after Caesar. JULIUS CAESAR: I
have fought and won. But I haven't conquered
over man's spirit, which is indomitable. SPEAKER 1: However,
a lock is only as strong as its weakest point. A lock breaker may look
for mechanical flaws. Or failing that,
extract information in order to narrow down
the correct combination. The process of lock breaking and
code breaking are very similar. The weakness of
the Caesar Cipher was published 800 years later
by an Arab mathematician named Al-Kindi. He broke the Caesar Cipher
by using a clue based on an important
property of the language a message is written in. If you scan text from
any book and count the frequency of
each letter, you will find a fairly
consistent pattern. For example, these are the
letter frequencies of English. This can be thought of as
a fingerprint of English. We leave this
fingerprint when we communicate without
realizing it. This clue is one of
the most valuable tools for a codebreaker. To break this
cipher, they count up the frequencies of each
letter in the encrypted text and check how far the
fingerprint has shifted. For example, if H is
the most popular letter in the encrypted
message instead of E, then the shift was likely three. So they reverse
the shift in order to reveal the original message. This is called
frequency analysis, and it was a blow to the
security of the Caesar cipher."
Computer science,Cryptography,Ancient cryptography,Polyalphabetic cipher,"Brit introduces the polyalphabetic cipher, which creates a lighter fingerprint than the Caesar cipher. Created by Brit Cruise.","A strong cipher is one which
disguises your fingerprint. To make a lighter
fingerprint is to flatten this distribution of
letter frequencies. By the mid-15th
century, we had advanced to polyalphabetic ciphers
to accomplish this. Imagine Alice and Bob
shared a secret shift word. First, Alice converts
the word into numbers according to the letter
position in the alphabet. Next, this sequence of numbers
is repeated along the message. Then each letter
in the message is encrypted by shifting according
to the number below it. Now she is using multiple
shifts instead of a single shift across the message, as
Caesar had done before. Then the encrypted message
is sent openly to Bob. Bob decrypts the message
by subtracting the shifts according to the secret
word he also has a copy of. Now imagine a code breaker, Eve,
intercepts a series of messages and calculates the
letter frequencies. She will find a flatter
distribution, or a lighter fingerprint. So how could she break this? Remember, code breakers
look for information leak, the same as finding a
partial fingerprint. Any time there is a differential
in letter frequencies, a leak of information occurs. This difference is
caused by repetition in the encrypted message. In this case, Alice's cipher
contains a repeating code word. To break the encryption,
Even would first need to determine the
length of this shift word used, not the word itself. She will need to go through
and check the frequency distribution of
different intervals. When she checks the
frequency distribution of every fifth letter, the
fingerprint will reveal itself. The problem now is to
break five Cesar Ciphers in a repeating sequence. Individually this is a trivial
task, as we have seen before. The added strength
of this cipher is the time taken to determine
the length of the shift word used. The longer the shift word,
the stronger the cipher."
Computer science,Cryptography,Ancient cryptography,The one-time pad,The perfect cipher. Created by Brit Cruise.,"For over 400 years,
the problem remained. How could Alice design a cipher
that hides her fingerprint, thus stopping the
leak of information? The answer is randomness. Imagine Alice rolled
a 26 sided die to generate a long
list of random shifts, and shared this with Bob
instead of a code word. Now, to encrypt
her message, Alice uses the list of
random shifts instead. It is important that
this list of shifts be as long as the message,
as to avoid any repetition. Then she sends it to Bob, who
decrypts the message using the same list of random
shifts she had given him. Now Eve will have a problem,
because the resulting encrypted message will have
two powerful properties. One, the shifts never fall
into a repetitive pattern. And two, the encrypted message
will have a uniform frequency distribution. Because there is no frequency
differential and therefore no leak, it is now
impossible for Eve to break the encryption. This is the strongest
possible method of encryption, and it emerged towards the
end of the 19th century. It is now known as
the one-time pad. In order to visualize the
strength of the one-time pad, we must understand the
combinatorial explosion which takes place. For example, the Caesar
Cipher shifted every letter by the same shift, which was
some number between 1 and 26. So if Alice was to
encrypt her name, it would result in one of
26 possible encryptions. A small number of possibilities,
easy to check them all, known as brute force search. Compare this to the one-time
pad, where each letter would be shifted by a different
number between 1 and 26. Now think about the number
of possible encryptions. It's going to be 26 multiplied
by itself five times, which is almost 12 million. Sometimes it's
hard to visualize, so imagine she wrote her
name on a single page, and on top of it stacked
every possible encryption. How high do you
think this would be? With almost 12 million
possible five-letter sequences, this stack of paper
would be enormous, over one kilometer high. When Alice encrypts her
name using the one-time pad, it is the same as picking
one of these pages at random. From the perspective of
Eve, the code breaker, every five letter
encrypted word she has is equally likely to
be any word in this stack. So this is perfect
secrecy in action."
Computer science,Cryptography,Ancient cryptography,Frequency stability property short film,Can you tell the difference between actions based upon flipping a coin and those based upon blind guessing or simulating randomness? This short video examines the frequency stability property. Created by Brit Cruise.,"[TYPING] Consider the following. Imagine two rooms. [DOOR CLOSING] [DOOR CLOSING] Inside each room is a switch. [CLICK] [CLICK] In one room, there is a man
who flips his switch according to a coin flip. If he lands heads,
the switch is on. If he lands tails,
the switch is off. In the other room, a
woman switches her light based on a blind guess. She tries to simulate
randomness without a coin. Then we start a clock, and they
make their switches in unison. [CLICK] [CLICK] [CLICK] [CLICK] Can you determine
which light bulb is being switched
by a coin flip? [CLICK] [CLICK] [CLICK] [CLICK] The answer is yes, but how? [CLICK] [CLICK] [CLICK] And the trick is to think about
properties of each sequence rather than looking for
any specific patterns. For example, first,
we may try to count the number of 1's and 0's
which occur in each sequence. This is close, but
not enough since they will both seem fairly even. The answer is to count sequences
of numbers, such as runs of three consecutive switches. A true random sequence
will be equally likely to contain every
sequence of any length. This is called the
frequency stability property and is demonstrated
by this uniform graph. The forgery is now obvious. Humans favor certain sequences
when they make guesses, resulting in uneven patterns
such as we see here. One reason this
happens is because we make the mistake of
thinking certain outcomes are less random than others. But realize, there is no
such thing as a lucky number. There is no such thing
as a lucky sequence. If we flip a coin
10 times, it is equally likely to come
up all heads, all tails, or any other sequence
you can think of. [CLICK] [CRICKETS CHIRPING]"
Computer science,Cryptography,Ancient cryptography,The Enigma encryption machine,WW2 Encryption is explored with a focus on the Enigma. Read more here. Created by Brit Cruise.,"- [Voiceover] On August 5th, 1857, a 4,300 kilometer-long cable was laid across the Atlantic Ocean. It provided a link between
Britain and the Americas, further strengthening their
social and economic alliances. Now information could be represented as a pattern of electrical
pulses and sent across the world almost instantaneously. Stock tickers and money transfers - these were commercial applications
invented by Western Union which ushered in a new era
of global communication. - [Radio] Stand by for this announcement. Germany has invaded Poland
and has bombed many times. General mobilization has been ordered in Britain and in France. - [Voiceover] And
consequently, this country is at war with Germany. - [Voiceover] ...which is
the real cause of the war that today threatens
the freedom of mankind. (shouting in Italian) (speaking in Japanese) - [Voiceover] The Japanese have attacked Pearl Harbor, Hawaii by air, President Roosevelt has just announced. (shouting in German) - [Voiceover] During
World War Two, Germany, Italy, and Japan were far
outnumbered by the allies. Their only conceivable path to victory was the ability to launch
widespread surprise attacks. So the goal of encryption
technology was to automate the one-time pad
using an encryption machine. Ideally, this machine would
accept an input letter, apply a random shift, and
output the encrypted letter. However, all machines
follow the same principle. They begin in some initial
configuration known as a state, they accept some input,
they do an operation with the input, and then
they produce an output. The operation from initial
state to final state is always predictable and repeatable. So the goal was to
produce identical machines that output a scrambled
sequence of shifts, which took a long time to repeat. (mechanical ticking) Therefore, Alice and Bob could generate an identical shift sequence as follows: First they need to
share identical machines and agree on an initial position, which is defined as the key setting. Then they align their
machines to the same position, and finally cycle through
the identical operations to achieve identical sequences. Now the state-of-the-art
technology at the time was called a rotor encryption machine. We are all familiar with
the mechanical process of an odometer, which takes a long time to finally repeat its cycle. Now imagine we scramble the numbers on the wheels of the odometer. When it ticks forward, a
new shift could be generated by adding up each number on the rotors. This is the rough idea behind
rotor encryption machines. For example, the message,
""Attack Northwest"" would be encrypted as follows. Notice how a new shift is used at each position in the message. With three rotors, each with 26 numbers, the length of the
sequence before repeating is 26 times 26 times 26. This is equivalent to
having a list of shifts 17,576 numbers long. Understand that each rotor position is equivalent to a
location in this sequence. The initial machine state
is known as the key setting, and the collection of
all possible key settings defines the key space. This key space increases
if the number of ways to initially configure
the machine increases. For example, if the
rotors can be rearranged then the order can be
selected in six ways. Let's visualize the key
space at this point. First we choose from one of
six possible rotor orderings, then we select an initial
position from the rotor sequence. This give us a key space with
over 100,000 key settings. Remember, every machine configuration is a point in this space. When we select a key
setting, we are selecting a starting point in this space, which then determines the
rest of the shift sequence. Give away the key setting and you give away the entire sequence. The security of rotor machines depends on both the size of this key space and the randomness of the key setting. During World War Two,
one of the most important encryption technologies used by the German military was known as the Enigma. It was an eletro-mechanical rotor machine invented by a German engineer at the end of World War One. Each rotor wheel had electrical
contacts on either side with a maze of wirings within. So at each rotor position, there was an electrical
path from every input letter to every output letter. When the rotor advanced,
an entirely new path was defined for each letter. During the war, they continually tried to increase the key space of the Enigma in order to make it stronger. For example, some changes
they made were to add a fourth rotor wheel and
increase the number of possible rotors you could
put in the machine to 60. This had the effect of massively
increasing the key space. Near the end of the war, the Enigma could be set up in over 150 million, million, million ways. Guessing the key setting which
was used for a given message was about as likely as
guessing the outcome of 26 dice rolls. This gave the Germans
confidence that the Allies, even if they had a copy of the Enigma, could never check all
possible key settings. For two parties to
communicate using the Enigma, it required that they first
shared the daily key settings. This allowed them to align their machines to the same position. This protocol changed over
and over during the war, but generally involved
distributing key sheets in advance to all operators. Each day, the operator would
cut off the daily settings and this would tell them
the daily configuration of their machines, such
as what rotors to use and the order of the rotors. This key setting was then
to be destroyed after use. However, one vital step
was left to the operator. They were to select a
random initial position of each rotor before communication began. And a very simple mistake was made by some fatigued operators. We make this exact same mistake every time we set a bike lock combination, because we tend to rotate the cylinders only a few clicks from the initial state, or we reuse a common password. This destroyed the uniform distribution of the initial rotor position, and after repeated observations, it allowed the Allies to reverse engineer the rotor wirings completely. The second major error was a design error, not a procedural one. The Enigma was designed
so that an input letter would never encrypt to itself. So given an encrypted letter, such as L, You can now eliminate
the possibility that L was the original letter. What they thought was a strength was actually a weakness in design. (water dripping) And this led to a code breaking machine, initially designed by the Poles and later improved by the
British-American effort. The Bombe was multiple Enigma
rotors chained together, allowing it to rapidly test
different key settings. It took advantage of the
fact that common words were known to be in the original message, such as weather. And these came to be known as cribs. For a given message in crib, the Bombe could scan through all possible rotor positions and
orders in order to find possible key settings
in a matter of minutes. This machine allowed the Allies to read German commands within
hours of them being issued. It was a fatal blow to
their combat strategy, as the Allies could
anticipate their next move. One fact remains: This initial attempt at automating the one-time pad failed. If the operators had instead rolled dice to decide their initial rotor positions, the starting point in the sequence could have been uniformly distributed. This would have prevented
the reverse engineering of the rotor wirings. And if the Enigma allowed
letters to be encrypted to themselves, the bombe could not have taken advantage of cribs. And this would've required the Allies to check the entire key space, which was impossible even
with the fastest computer. Repetition reduced the key space. Otherwise, the outcome of World War Two could've been drastically different."
Computer science,Cryptography,Ancient cryptography,Perfect secrecy,Claude Shannon's idea of perfect secrecy: no amount of computational power can help improve your ability to break the one-time pad. Created by Brit Cruise.,"(tranquil music) - [Voiceover] Consider the following game. Eve instructs Bob to go into
a room. (door creaks shut) Bob finds the room empty,
except for some locks, an empty box, and a single deck of cards. Eve tells Bob to select a card from the deck and hide it as best he can. The rules are simple. Bob cannot leave the room with anything, cards and keys all stay in the room, and he can put, at most,
one card in the box. Eve agrees that she has
never seen the locks. He wins the game if Eve is
unable to determine his card. So what is his best strategy? Well, Bob selected a
card, six of diamonds, and threw it in the box. (box clicks shut) First he considered the
different types of locks. Maybe he should lock the
card in the box with the key. Though, she could pick locks, so he considers the combination lock. The key is on the back, so if he locks it and scratches it off, it
seems like the best choice. But suddenly he realizes the problem. The remaining cards on the table leak information about his choice, since it's now missing from the deck. The locks are a decoy. (metal jangles) He shouldn't separate
his card from the deck. He returns his card to the deck but can't remember the
position of his card. So he shuffles the deck to randomize it. Shuffling is the best
lock, because it leaves no information about his choice. His card is now equally likely
to be any card in the deck. He can now leave the cards
openly, in confidence. Bob wins the game, because
the best Eve can do is simply guess, as he has left no information about his choice. Most importantly, even if we give Eve unlimited computational power, she can't do any better than a guess. This defines what we
call ""perfect secrecy."" On September first, 1945,
29-year-old Claude Shannon published a classified paper on this idea. Shannon gave the first mathematical proof for how and why the one time
pad is perfectly secret. Shannon thinks about encryption schemes in the following way. Imagine Alice writes a message
to Bob, 20 letters long. (paper ruffling) This is equivalent to picking one specific page from the message space. The message space can be
thought of as a complete collection of all possible
20 letter messages. (paper ruffling) Anything you can think of that's 20 letters long is a page in this stack. Next, Alice applies a
shared key, which is a list of 20 randomly generated
shifts between one and 26. The key space is the complete collection of all possible outcomes,
so generating a key is equivalent to selecting a page
from this stack at random. When she applies the shift
to encrypt the message, she ends up with a cipher text. The cipher text space represents all possible results of an encryption. When she applies the key, it maps to a unique page in this stack. Notice that the size of the message space equals the size of the key space equals the size of the cipher text space. This defines what we
call ""perfect secrecy,"" for if someone has access to
a page of cipher text only, the only thing that they know is that every message is equally likely. So no amount of computational power could ever help improve a blind guess. Now the big problem, you're
wondering, with the time pad, is we have to share these
long keys in advance. To solve this problem, we
need to relax our definition of secrecy by developing a
definition of pseudo-randomness. (white noise)"
Computer science,Cryptography,Ancient cryptography,Pseudorandom number generators,Random vs. Pseudorandom Number Generators. Created by Brit Cruise.,"(fun music) (leaves rustling) - [Voiceover] When we
observe the physical world we find random fluctuations everywhere. We can generate truly random numbers by measuring random
fluctuations, known as noise. When we measure this
noise, known as sampling, we can obtain numbers. - [Voiceover] One, two, three, four-- - [Voiceover] For example, if we measure the electric current
of TV static over time, we will generate a truly random sequence. We can visualize this random sequence by drawing a path that changes direction according to each number,
known as a random walk. Notice the lack of pattern at all scales. At each point in the sequence the next move is always unpredictable. Random processes are said
to be nondeterministic, since they are impossible
to determine in advance. Machines, on the other
hand, are deterministic. Their operation is
predictable and repeatable. In 1946, John von Neumann was involved in running computations for the military; specifically involved in the
design of the hydrogen bomb. Using a computer called the ENIAC, he planned to repeatedly
calculate approximations of the processes involved
in nuclear fission. However, this required quick access to randomly generated numbers that could be repeated, if needed. However, the ENIAC had very
limited internal memory; storing long random
sequences was not possible. So, Neumann developed an algorithm to mechanically simulate
the scrambling aspect of randomness as follows: First, select a truly random
number, called the ""seed"". This number could come from
the measurement of noise, or the current time in milliseconds. Next, this seed is provided as input to a simple calculation. Multiply the seed by itself, and then output the middle of this result. Then you use this output as the next seed, and repeat the process
as many times as needed. This is known as the middle-squares method and is just the first in a long line of pseudorandom number generators. The randomness of the
sequence is dependent on the randomness of the initial seed only. Same seed, same sequence. So, what are the differences between a randomly generated versus pseudorandomly generated sequence? Let's represent each
sequence as a random walk. They seem similar until
we speed things up. The pseudorandom sequence
must eventually repeat. This occurs when the
algorithm reaches a seed it has previously used,
and the cycle repeats. The length, before a
pseudorandom sequence repeats, is called ""the period"". The period is strictly limited by the length of the initial seed. For example, if we use a two-digit seed, then an algorithm can produce, at most, 100 numbers, before reusing a seed and repeating the cycle. A three-digit seed can't
expand past 1,000 numbers before repeating its cycle, and a four-digit seed can't expand past 10,000 numbers before repeating. Though if we use a seed large enough, the sequence can expand into trillions and trillions
of digits before repeating. Though the key difference is important. When you generate numbers pseudorandomly, there are many sequences
which cannot occur. For example, if Alice generates
a truly random sequence of 20 shifts, it's equivalent
to a uniform selection from the stack of all
possible sequences of shifts. This stack contains 26
to the power of 20 pages, which is astronomical in size. If we stood at the bottom
and shined a light upwards, a person at the top
would not see the light for around 200,000,000 years. Compare this to Alice generating a 20 digit pseudorandom sequence, using a four-digit random seed. Now, this is equivalent
to a uniform selection from 10,000 possible initial seeds, meaning she can only generate 10,000 different sequences, which is a vanishingly small fraction of all possible sequences. When we move from random
to pseudorandom shifts, we shrink the key space into a much, much smaller seed-space. So, for a pseudorandom sequence
to be indistinguishable from a randomly generated sequence, it must be impractical for a computer to try all seeds and look for a match. This leads to an important distinction in computer science,
between what is possible, versus what is possible in
a reasonable amount of time. We use the same logic
when we buy a bike lock. We know that anybody can simply try all possible combinations, until they find a match and it opens. But it would take them days to do so. So, for eight hours we
assume it's practically safe. With pseudorandom generators, the security increases as the
length of the seed increases. If the most powerful computer would take hundreds of years to
run through all seeds, then we safely can assume
it's practically secure, instead of perfectly secure. As computers get faster the seed size must increase accordingly. Pseudorandomness frees Alice and Bob from having to share their entire random shift sequence in advance. Instead, they share a
relatively short random seed, and expand it into the same random-looking sequence when needed. But what happens if they can never meet to share this random seed?"
Computer science,Cryptography,Modern cryptography,The fundamental theorem of arithmetic,Independent realization from an ancestor's perspective. Created by Brit Cruise.,"Imagine we are living
in prehistoric times. Now, consider the following. How did we keep track
of time without a clock? All clocks are based on some
repetitive pattern which divides the flow of time
into equal segments. To find these
repetitive patterns, we look towards the heavens. The sun rising and falling
each day is the most obvious. However, to keep track of
longer periods of time, we looked for longer cycles. For this we looked
to the moon, which seemed to gradually grow
and shrink over many days. When we count the number
of days between full moons, we arrive at the number 29. This is the origin of a month. However, if we try to
divide 29 into equal pieces, we run into a problem. It is impossible. The only way to divide
29 into equal pieces is to break it back
down into single units. 29 is a prime number. Think of it as unbreakable. If a number can be broken
down into equal pieces greater than one, we call it
a composite number. Now, if we are curious, we may
wonder how many prime numbers are there, and how
big do they get? Let's start by dividing all
numbers into two categories. We list the primes on the
left, and the composites on the right. At first they seem to
dance back and forth. There is no obvious
pattern here. So let's use a modern technique
to see the big picture. The trick is to
use a Ulam spiral. First we list all
possible numbers in order in a growing spiral. Then we color all the
prime numbers blue. Finally, we zoom out to
see millions of numbers. This is the pattern of primes,
which goes on and on forever. Incredibly, the entire
structure of this pattern is still unsolved today. We are on to something. So let's fast forward to around
300 BC in ancient Greece. A philosopher known as
Euclid of Alexandria understood that
all numbers could be split into these two
distinct categories. He began by realizing that
any number can be divided down over and over until you
reach a group of smallest equal numbers. And by definition,
these smallest numbers are always prime numbers. So he knew that all
numbers are somehow built out of smaller primes. To be clear, imagine the
universe of all numbers, and ignore the primes. Now, pick any composite
number and break it down, and you are always left
with prime numbers. So Euclid knew that
every number could be expressed using a
group of smaller primes. Think of these as
building blocks. No matter what
number you choose, it can always be built with
an addition of smaller primes. This is the root
of his discovery, known as the fundamental theorem
of arithmetic, as follows. Take any number, say 30, and
find all the prime numbers it divides into equally. This we know as factorization. This will give us
the prime factors. In this case, 2, 3, and 5
are the prime factors of 30. Euclid realized
that you could then multiply these prime
factors a specific number of times to build
the original number. In this case, you simply
multiply each factor once to build 30. 2 times 3 times 5 is the
prime factorization of 30. Think of it as a special
key, or combination. There is no other
way to build 30 using some other groups of prime
numbers multiplied together. So every possible number
has one, and only one prime factorization. A good analogy is to
imagine each number as a different lock. The unique key for
each lock would be its prime factorization. No two locks share a key. No two numbers share
a prime factorization."
Computer science,Cryptography,Modern cryptography,Public key cryptography: What is it?,Why do we need public key cryptography? Created by Brit Cruise.,"Brit: After World War 2, 
with most of Europe in ruins, tension grew between the 
Soviet Union and the United States. It was clear that the 
next global superpower required the ability to both
launch and successively defend nuclear attacks from 
intercontinental ballistic missiles. In North America, the most vulnerable
point of attack was over the North Pole. So in 1958, a joint effort between
United States and Canada was established, known as NORAD, or North American Aerospace
Defense Command. An important line of defense was the
semi-automatic ground environment. It was an automated system of
over 100 long-distance radars scattered across North America. They were connected to 
computerized radar stations that transmitted tracking data using
telephone lines or radio waves. All of this radar information was 
fed into a primary warning center buried a mile deep inside 
Cheyenne Mountain in Colorado. This application of machine
to machine communication allowed operators to make
split-second decisions using information transmitted and 
processed automatically by computers. This idea of being online was 
quickly adapted and advanced by universities in the following years as they understood the potential
of computer networking. Man: The thing that makes the computer communication network
special, is that it puts the workers -- that'd be the team members who
are geographically distributed -- in touch not only with one another, but with the information base
with which they work all the time. And this is obviously going to make a
tremendous difference in how we plan, organize, and execute almost everything
of any intellectual consequence. If we get into a mode in which
everything is handled electronically, and your only identification is some little plastic thing
you stick into the machinery, then I can imagine that they 
want to get that settled up with your bank account just right now,
and put it through all the checks, and that would require a network. Brit: Money transfers are just one of 
a growing number of applications which required encryption 
to remain secure; and as the internet grew to 
encompass millions around the world, a new problem emerged. At the time, encryption 
required two parties to first share a secret random 
number, known as a key. So how could two people
who have never met agree on a secret shared key without letting Eve,
who is always listening, also obtain a copy? In 1976, Whitfield Diffie 
& Martin Hellman devised an amazing trick to do this. First, let's explore how this 
trick is done using colors. How could Alice and Bob agree on a
secret color without Eve finding it out? The trick is based on two facts: one, it's easy to mix two colors 
together to make a third color; and two, given a mixed color,
it's hard to reverse it in order to find the 
exact original colors. This is the basis for a lock: easy in one direction, 
hard in the reverse direction. This is known as a one-way function. Now, the solution works as follows: First, they agree publicly on
a starting color, say yellow. Next, Alice and Bob both
randomly select private colors, and mix them into the public yellow
in order to disguise their private colors. Now, Alice keeps her private color
and sends her mixture to Bob, and Bob keeps his private color
and sends his mixture to Alice. Now, the heart of the trick: Alice and Bob add their private colors
to the other person's mixture and arrive at a shared secret color. Notice how Eve is unable to 
determine this exact color, since she needs one of 
their private colors to do so. And that is the trick. Now, to do this with numbers,
we need a numerical procedure which is easy in one direction
and hard in the other."
Computer science,Cryptography,Modern cryptography,The discrete logarithm problem,A mathematical lock using modular arithmetic. Created by Brit Cruise.,"- [Voiceover] We need
a numerical procedure, which is easy in one direction
and hard in the other. This brings us to modular arithmetic, also known as clock arithmetic. For example, to find 46 mod 12, we could take a rope of length 46 units and rap it around a clock of 12 units, which is called the modulus, and where the rope ends is the solution. So we say 46 mod 12 is
congruent to 10, easy. Now, to make this work,
we use a prime modulus, such as 17, then we find
a primitive root of 17, in this case three, which
has this important property that when raised to different exponents, the solution distributes
uniformly around the clock. Three is known as the generator. If we raise three to any exponent x, then the solution is equally likely to be any integer between zero and 17. Now, the reverse procedure is hard. Say, given 12, find the exponent three needs to be raised to. This is called the
discrete logarithm problem. And now we have our one-way function, easy to perform but hard to reverse. Given 12, we would have to resort to trial and error to
find matching exponents. How hard is this? With small numbers it's easy, but if we use a prime modulus which is hundreds of digits long, it becomes impractical to solve. Even if you had access to all computational power on Earth, it could take thousands of years to run through all possibilities. So the strength of a one-way function is based on the time needed to reverse it."
Computer science,Cryptography,Modern cryptography,Diffie-hellman key exchange,Walkthrough of Diffie-Hellman Key Exchange. Created by Brit Cruise.,"- [Voiceover] Now, this is our solution. First, Alice and Bob agree publicly on a prime modulus and a generator, in this case, 17 and three. Then, Alice selects a private,
random number, say 15, and calculates three to
the power 15, mod 17, and sends this result publicly to Bob. Then Bob selects his private,
random number, say 13, and calculates three
to the power 13, mod 17 and sends this result publicly to Alice. And now, the heart of the trick. Alice takes Bob's public result and raises it to the power
of her private number to obtain the shared secret,
which in this case is 10. Bob takes Alice's public result and raises it to the power
of his private number, resulting in the same shared secret. Notice they did the same calculation, though it may not look like it, at first. Consider Alice, the 12
she received from Bob was calculated as three
to the power 13, mod 17. So her calculation was the same as three to the power 13,
to the power 15, mod 17. Now consider Bob, the six
he received from Alice was calculated as three
to the power 15, mod 17. So his calculation was the same as three to the power 15, to the power 13. Notice they did the same calculation with the exponents in a different order. When you flip the exponent,
the result doesn't change. So they both calculated three raised to the power of
their private numbers. Without one of these
private numbers, 15 or 13, Eve will not be able to find the solution. And this is how it's done. While Eve is stuck grinding away at the discrete logorithm problem, and with large enough numbers, we can say it's practically
impossible for her to break the encryption in
a reasonable amount of time. This solves the key exchange problem. It can be used in conjunction
with a pseudorandom generator to encrypt messages between
people who have never met."
Computer science,Cryptography,Modern cryptography,RSA encryption: Step 1,Introduction to why we would need RSA. Created by Brit Cruise.,"Up until the 1970s, cryptography had been
based on symmetric keys. That is, the sender encrypts their message using a specific key, and the receiver decrypts
using an identical key. (lock clinking) As you may recall, encryption is a mapping from some message using a specific key, to a ciphertext message. To decrypt a ciphertext, you use the same key
to reverse the mapping. So for Alice and Bob to
communicate securely, they must first share identical keys. However, establishing a
shared key is often impossible if Alice and Bob can't physically meet or requires extra communications overhead when using the Diffy-Hellman key exchange. Plus, if Alice needs to
communicate with multiple people, perhaps she's a bank, then she's going to have
exchange distinct keys with each person. Now she'll have to
manage all of these keys and send thousands of messages
just to establish them. Could there be a simpler way? In 1970, James Ellis, a British
engineer and mathematician, was working on an idea
for non-secret encryption. It's based on a simple,
yet clever concept: Lock and unlock are inverse operations. Alice could buy a lock, keep the key, and send the open lock to Bob. Bob then locks his message
and sends it back to Alice. No keys are exchanged. This means she could
publish the lock widely and let anyone in the world
use it to send her a message. And she now only needs to
keep track of a single key. Ellis never arrived at
a mathematical solution, though he had an intuitive
sense of how it should work. The idea is based on splitting
a key into two parts, an encryption key and a decryption key. The decryption key performs
the inverse or undo operation which was applied by the encryption key. To see how inverse keys could work, let's do a simplified
exampled with colors. How could Bob send Alice a specific color, without Eve, who is always
listening, intercepting it? The inverse of some color is
called a complimentary color, which when added to it, produces white, undoing the effect of the first color. In this example, we
assume that mixing colors is a one-way function because
it's fast to mix colors and output a third, and
it's much slower to undo. Alice first generates her private key by randomly selecting a color, say red. Next, assume Alice uses
a secret color machine to find the exact compliment of her red and nobody else has access to this. This results in cyan,
which she sends to Bob as her public key. Let's say Bob wants to send
a secret yellow to Alice. He mixes this with her public color and sends the resulting
mixture back to Alice. Now Alice adds her private
color to Bob's mixture. This undoes the effect
of her public color, leaving her with Bob's secret color. Notice Eve has no easy
way to find Bob's yellow, since she needs Alice's
private red to do so. This is how it should work. However, a mathematical
solution was needed to make this work in practice."
Computer science,Cryptography,Modern cryptography,RSA encryption: Step 2,Setting up a trapdoor one-way function. Created by Brit Cruise.,"- [Voiceover] The solution
was found by another British mathematician and
cryptographer, Clifford Cocks. Cocks needed to construct a
special kind of one-way function called a trapdoor one-way function. This is a function that is easy
to compute in one direction, yet difficult to reverse, unless you have special
information, called the trapdoor. For this, he turned to
modular exponentiation, which we introduced as clock arithmetic, in the Diffie–Hellman
key exchange, as follows. Take a number, raise it to some exponent, divide by the modulus
and output the remainder. This can be used to encrypt
a message as follows: Imagine Bob has a message, which is converted into a number, m. He then multiplies his number by itself, e times, where e is a public exponent, then he divides the result
by a random number, N, and outputs the remainder of the division. This results in some number, c. This calculation is easy to perform, however, given only c, e, and N, it is much more difficult to
determine which m was used, because we'd have to resort to some form of trial and error. So, this is our one-way
function that we can apply to m, easy to perform, but difficult to reverse. It is our mathematical lock. Now, what about the key? The key is the trapdoor, some piece of information that makes it easy to reverse the encryption. We need to raise c to some
other exponent, say d, which will undo the initial
operation applied to m and return the original message m. So, both operations
together, is the same as m to the power of e, all
raised to the power of d, which is the same as, m
to the power of e times d, e is the encryption, d is the decryption. Therefore, we need a way for
Alice to construct e and d, which makes it difficult
for anyone else to find d This requires a second one-way function which is used for generating d, and for this, he looked back to Euclid."
Computer science,Cryptography,Modern cryptography,RSA encryption: Step 3,RSA Encryption (step 3). Created by Brit Cruise.,"- [Voiceover] Over 2,000
years ago, Euclid showed every number has exactly
one prime factorization, which we can think of as a secret key. It turns out that prime factorization is a fundamentally hard problem. Let's clarify what we
mean by ""easy"" and ""hard"", by introducing what's
called ""time complexity"". We have all multiplied numbers before, and each of us our own rules for doing so, in order to speed things up. If we program a computer
to multiply numbers, it can do so much faster
than any human can. Here is a graph that
shows the time required for a computer to multiply two numbers. And, of course, the time
required to find the answer increases as the numbers get larger. Notice that the computation time stays well under one second, even with fairly large numbers. Therefore, it is ""easy"" to perform. Now, compare this to prime factorization. If someone told you to find
the prime factorization of 589, you will notice the problem feels harder. No matter what your strategy, it will require some trial and error until you find a number
which evenly divides 589. After some struggle, you will find 19 times 31 is the prime factorization. If you were told to find
the prime factorization of 437, 231, you'd probably give up and get a computer to help you. This works fine for small numbers, though if we try to get a computer to factor larger and larger numbers, there is a runaway effect. The time needed to
perform the calculations increases rapidly, as there
are more steps involved. As the numbers grow, the
computer needs minutes, then hours, and eventually it will require hundreds, or thousands of
years to factor huge numbers. We therefore say it is a ""hard"" problem due to this growth rate of
time needed to solve it. So factorization is what Cocks used to build the trapdoor solution. Step one, imagine Alice randomly generated a prime number over 150 digits long; call this ""p one"". Then, a second randon prime number roughly the same size; call this ""p two"". She then multiplies
these two primes together to get a composite number, N, which is over 300 digits long. This multiplication step
would take less than second; we could even do it in a web browser. Then, she takes the factorization of N, p one times p two, and hides it. Now, if she gave N to anyone else, they would have to have a computer running for years to find the solution. Step two, Cocks needed to find a function which depends on knowing
the factorization of N. For this, he looked back
to work done in 1760 by Swiss mathematician, Leonhard Euler."
Computer science,Cryptography,Modern cryptography,Euler's totient function,Measuring the divisibility of a number. Created by Brit Cruise.,"- [Voiceover] Euler
continued to investigate properties of numbers, specifically the distribution of prime numbers. One important function he defined is called the phi function. It measures the breakability of a number. So, given a number, say N, it outputs how many integers
are less than or equal to N that do not share any
common factor with N. For example, if we want
to find the phi of eight we look at all values from one to eight, then we count how many integers eight does not share a
factor greater than one with. Notice six is not counted, because it shares a factor of two, while one, three, five
and seven are all counted, because they only share a factor of one. Therefore, phi of eight equals four. What's interesting is that calculating the phi function is
hard, except in one case. Look at this graph. It is a plot of values of phi, over integers from one to 1,000. Now, notice any predictable pattern? The straight line of points along the top represent all the prime numbers. Since prime numbers have no
factors greater than one, the phi of any prime number, P, is simply P minus one. To calculate phi of seven, a prime number, we count all integers, except seven, since none of them share
a factor with seven. Phi of seven equals six. So, if you're asked to find
phi of 21,377, a prime number, you would only need to subtract one to get the solution, 21,376. Phi of any prime is easy to compute. This leads to an interesting
result based on the fact that the phi function
is also multiplicative. That is, phi A times B
equals phi A times phi B. If we know some number N is
the product of two primes, P one and P two, then phi of N is just the value of phi for
each prime multiplied together, or P one minus one, times P two minus one."
Computer science,Cryptography,Modern cryptography,RSA encryption: Step 4,RSA worked example. Created by Brit Cruise.,"- [Voiceover] We now have
a trapdoor for solving phi. If you know the factorization for N, then finding phi N is easy. For example, the prime factorization of 77 is seven times 11, so phi
of 77, is six times 10, 60 Step three, how to
connect the phi function to modular exponentiation. For this, he turned to Euler's Theorem, which is a relationship
between the phi function and modular exponentiation, as follows: m to the power of phi n, is congruent to one mod n. This means you can pick any two numbers, such that they do not
share a common factor, let's call them ""m"" and ""n"". Say m equals five and n equals eight. Now, when you raise m to
the power of phi n, or 4, and divide by n, you will
always be left with one. Now, we just need to modify this equation using two simple rules. First, if you raise the number one to any exponent, k, you always get one. In the same way, we can
multiply the exponent phi n by any number k, and the
solution is still one. Second, if you multiply
one by any number, say m, it always equals m. In the same way, we can
multiply the left side by m, to get m on the right hand side. And this can be simplified as m to the power of k,
times phi n, plus one. This is the breakthrough. We now have an equation
for finding e times d, which depends on phi n. Therefore, it's easy to calculate d, only if the factorization of n is known. Meaning d should be Alice's private key. It's the trapdoor which will allow her to undo the effect of e. Let's do a simple example, to see all of this in action. Say Bob has a message he
converted into a number, using a padding scheme. Let's call this ""m"". Then, Alice generates her public
and private key as follows: First, she generates
two random prime numbers of similar size and multiplies
them to get n, 3,127. Then she calculates phi of n easily, since she knows the factorization of n, which turns out to 3,016. Next, she picks some
small public exponent, e, with the condition that
it must be an odd number that does not share a factor with phi n. In this case she picks e equals three. Finally, she finds the value
of her private exponent, d, which in this case is two
times phi of n, plus one, divided by three, or 2,011. Now, she hides everything
except the value of n and e, because n and e make up her public key. Think of it as an open lock. She sends this to Bob to
lock his message with. Bob locks his message by calculating m to the power of e, mod n. Call this ""c"", his encrypted message, which he sends back to Alice. Finally, Alice decrypts his message using her private key, d, accessed through her trapdoor. c to the power of d, mod n, equals Bob's original message, m. Notice that Eve, or anyone else, with c, n, and e, can
only find the exponent d, if they can calculate phi n, which requires that they know
the prime factorization of n. If n is large enough, Alice can be sure that this will take hundreds of years, even with the most powerful
network of computers. This trick was immediately
classified after its publication, however, it was independently redisovered in 1977 by Ron Rivest, Adi
Shamir and Len Adleman, which is why it's now
known as RSA in encryption. RSA is the most widely
used public key algorithm in the world, and the most
copied software in history. Every internet user on earth is using RSA, or some variant of it, whether they realize it or not. Its strength relies on the
hardness of prime factorization. which is a result of deep questions about the distribution of prime numbers. A question which has remained unsolved for thousands of years. (dramatic music)"
Computer science,Cryptography,Modern cryptography,What should we learn next?,Help decide what's next! What do you want to learn? Created by Brit Cruise.,"You've reached the first
checkpoint in the Journey to Cryptography series. And now I want to
talk about what's next, because I'm
working on a new series. However, this one
won't end here. And if anything, we're kind
of at the beginning still. So I'm going to do three
different checkpoint videos. This one is on advanced lessons. However, I also want
to eventually talk about tasks and
challenges and what we can do with more interactive
explorations and computer science lessons as it
applies to cryptography. But for now, let's talk
about advanced lessons. And when I say advanced,
I don't necessarily mean harder lessons. I mean more detailed. And let me give you a
conceptual idea for what I think this series could be,
and future series. I like to think of each series
as the trunk of a tree, where I took you from
prehistoric times to around the 20th
century, which is here, with a few different threads. And these ideas kind
of branch apart. Once you hit the 20th
and 21st century, they start getting
highly specific. And way down here on the leaves
are current research questions, which over here might
be problems related to prime number distribution,
and over here some very specific work being done
on randomized algorithms or hash functions. And, say, up here, we might
have new public key protocols because RSA was just the first. Or we also have encryption
standards such as DES and AES. We would have a whole new
branch on quantum cryptography. So as you can see, there's
so many different things that branch out of this series. And I couldn't possibly
do justice to them all. So I think of this video
as living right here. It's kind of a junction point. Now I could branch
off with the help of the community and
possibly other video creators to fill out this tree gradually
over time, specifically with the help of the community. And I'm really excited about the
question and answer community and the work being done
to improve how people can help people on Khan Academy. So for example, in terms of
where one of these branches can go, I've noticed
clusters of questions kind of leading into a common branch. For example, under the
pseudo-random number generator-- I have two
questions here, one by Sonnie and one by Drakain. Drakain's question
is, ""Why has he suggested that time
in milliseconds is a suitable random seed? This is a huge
no-no in security. The time it is on your
machine is the time is on my machine, give
or take 100 milliseconds, which can be brute
force attacked."" And again, this is a
great question, too, because it speaks to the
need that I didn't present a cryptographically secure
pseudo-random generator. So the middle squares
method is back here in the early 20th century. But up till today, we are
not using the middle squares method. And that's a whole
interesting branch. And it's these sort
of questions which cluster together and
really drive new content. And I want to show you a
really interesting example of how this has
happened already. This is a question Samuel asked
on the One-Time Pad video. He said, ""Wouldn't a computer be
able to test all possibilities very fast?"" And Chumpatrol basically
asked the same question here. I see this happening a
lot, similar questions. All speak to the
need of a new video. So I went and created a video
on perfect secrecy, which really nails down how you
can't beat randomness in the world of encryption. And out of this video, Dawn
made a really great comment. And what they did was
basically summarize my video in two sentences. So this is what I want to try
to do more of in filling out these branches-- take
questions, make new content, and have this kind of feedback
loop, and see what we can do. So now what I would
really love is for you to ask questions
below this video, which arise after watching
the entire series. So not specific details
about certain videos, those can go with the videos. But new questions,
which are kind of opening a new can of worms. And what I think
will be fun to do is your question
will lead to answers by both me and the
rest of the community. So we'll have multiple answers. And what I can do is take
this body of answers, and out of this, draft
up a rough script for more advanced videos
on specific topics that subsets of the
community care about. So hopefully out
of the discussion below, over time we can
grow a bunch of new videos. And I want to be clear. This is an ongoing process. So this won't happen
tomorrow or next week. I hope it can happen months
and even years from now. We can still be building out
new videos off this series, and these videos can be
a collaborative effort between myself and the community
and perhaps other video creators down the road. So let me know what you think
below and let's get started."
Computer science,Cryptography,Primality test,Primality test challenge,How can a machine tell us if a number is prime? Created by Brit Cruise.,"Voiceover: We begin with
a very simple question. Or not a question, a challenge. We need to build a machine
which takes an input and that input is some integer X, and all that machine needs to do is output true or false. That is the first step. Now we will use the computer science tool to actually build this machine together. One of the questions
that we will be asking is two things, two
aspects to this machine. How much time that a clock, how much time does it
take to give the solution and how much space does it need? When I say space, I mean, for in the case of this
mechanical calculator physical space, how many rooms do we need to hold our machine? Or if we're using a computer, how much memory does it need? We will be returning to
this two ideas as we go."
Computer science,Cryptography,Primality test,What is computer memory?,What is the limit of computer memory? Created by Brit Cruise.,"Voiceover: When we perform
calculations with a pen and paper, we often need to
save intermediate results. And we may do this with, say, scrap paper, and in this case, the paper is acting as a form of external memory. And memory no matter the
form, takes up physical space. Computers contain memory,
we can think of it as the scrap paper for the computer. And, say, when you
construct an array to store values in your program,
you require memory. And, at the lowest level,
computers read and store all instructions as a string of numbers. But, how do you store
numbers in a machine? This was a very difficult
problem originally, especially when you need computers to hold their memory after the
access to power is lost. This is known as nonvolatile memory. The easiest difference
for a machine to detect is simply a presence versus
an absence of something. And this is how old
punch cards would work. Along the top, we have some data and the vertical columns
contain a series of punched holes which
represent each character. So, computers really
have 2 fingers, base 2, same as a light switch being
""on"" for 1, and ""off"" for 0. This is the smallest
amount of information, a single difference, which we call a bit. But bits are powerful for storage because the amount of unique states grows exponentially as we add bits together. Remember, one light switch is one bit and it can store 2 states, but 2 light switches can
store 4 unique states. And 8 light switches or 8 bits
can store 256 unique states. And space is measured in
bits, but the physical size of a bit depends on
your method of storage. So how do computer store zero's and one's internally?
(gentle music) Man in Uniform: Modern data
processing systems like these use thousands of magnetic
cores. What are magnetic cores? They are tiny rings of nickel alloy or other magnetic materials. They have replaced vacuum tubes for many important functions
in data processing systems. Voiceover: And it allowed
computers to store bits as clockwise versus counter-clockwise
magnetization direction. Because the each core could be magnetized in 2 different ways, depending which direction the current was applied. Man in Uniform: Because a bit
can be represented by any bi-stable device and a magnetic core is a bi-stable device. Voiceover: Later on, this was done using thin film magnetic disk where we can think of as each bit
as a tiny magnetic cell, which can be charged to
store either a 1 or a 0. So, long story short, the
size of a bit has been rapidly shrinking since
the days of punch cards. A hard drive in a modern computer can be thought of as billions
of tiny magnetic cells. Now, you may wonder, well how small can these little magnetic cells be? And current research at IBM is pushing this to the atomic level
where they have shown 12 iron atoms can work together
as a stable magnetic unit, where they are able to store a 1 or a 0, depending how they are oriented. And this is approaching
a theoretical limit where we would hold a
single bit on a single atom! And interestingly, IBM estimates that we can put around one quadrillion bits of information in a handheld device, the size of an Ipod, with atomic storage. And, let's call this a super drive, it doesn't even exists yet,
as a hypothetical example. A small handheld super
drive using atomic storage would hold one thousand terabits, which is one thousand trillion switches or more commonly known as 125 terabytes in the palm of your hand, or to use an example everyone can understand, 125 terabytes is the same
as having a 1250 kilometer long book shelf in the palm of your hand. And this is what the future
of memory looks like, or we ever be able to store a bit on something smaller than an atom?"
Computer science,Cryptography,Primality test,Algorithmic efficiency,How can we improve the speed of a (deterministic) primality test? Created by Brit Cruise.,"Voiceover: I have a report now that they are sending a new rover to Mars. We are responsible for doing one thing which is programing the algorithm inside the rover which
checks if numbers are prime. Let's say our rover is
communicating using RSA. It needs an algorithm inside
that can do a primality test. When you design a rover or
anything to go in to space you have to be very
efficient in every way. The components used have to be very light. The amount of power every
subsystem uses has to be minimal. You have to be saving energy and mass at every point in the design process. We have our work cut out for us. We have to be able to deal
with numbers up to this size. It has to do it very fast. If we give it a very small
input, let's say just 90, it should be able to
calculate that almost as fast as this entire number. As the input grows, we
don't want to see any of this noticeable slow down. I want to analyze the user questions or the ideas users have
which were really good from a mathematical standpoint. We are checking if N
is prime or composite. Given some number N, think of
this space of all possible Ns. If N is 100, this space is two to 100. What our algorithm is doing
is searching this space. Think of algorithm searching a space. At each point it is asking- Think of it as a step, a primitive step. It is asking a question and
it's actually a composite test, the question. Say this is a number
A, we would say in the trial division method ""is N divided by A?"" We just try this, we drop A
here and we try N divides A and we see if the remainder
is zero, which means A is a divisor of N, we say
""Ah, we know 100 percent-"" We raise the flag and know 100
percent sure it's composite. Otherwise, at each step,
we aren't quite sure. It might be prime but we're not sure. We continue searching
until we hit the end. Remember our wall in this case was at the square root of N. Worst case situation
occurs when N is prime, we search all the way
to the square root of N and then we can say ""Ah, it is prime ""and we are 100 percent sure."" In the case where N is even the multiple of two primes, seven times seven equals 49 if we throw 49 into our
algorithm, the worst case occurs. We go all the way to the square root of N. The first set of questions, for example TheFourthDimension asks
""Once we rule out two ""as not divisible, then all
multiples of two could be ""ruled out, the same for
three, four, five, et cetera."" That's a really great point. Our old algorithm was
stepping along one at a time. We could be using patterns we
know about composite numbers, such as we know for sure that if a number is divisible by two then it's composite. If it is greater than
two, so two is a prime. Then we can say four is composite. I missed five here, sorry about that. Four, six, eight, 10, and
instead we can step like this. Three, five, seven, nine. One category of questions
all try to reduce this space. If we eliminate all the even numbers, now the check space,
instead of being up to the square root of N is the
square root of N divided by two. We can find other patterns
in composite numbers to try to make this even smaller. The other type of
question concerns the case where we find a composite witness. That is, we find an A
that allows us to say ""Oh, we know N is composite."" Lola said ""Wouldn't leaving the loop ""as soon as primeCheck
equals false cut down ""on some of the time?"" Yes, that is totally correct
and is something we want to do. As soon as we are searching
along using some step defined by whatever pattern we are using, we find a composite witness. That means it passes our
test and we say 100 percent confidence we should halt early. We stop and say ""Oh, we're done. We won't continue searching."" This halting early is
great except it doesn't help us in the worst case,
which is if N is prime then the early halting wont help us. Now, we can visualize
how these improvements allow us to reduce the
space thus preventing as many checks happening
inside the computer which, depending on our computer, will reduce the amount of time it takes. Now I can show you the
visualization I set up below which allows us to compare
two algorithms based on how many steps occur
during their execution. On the left is algorithm
A, which is trial division which checks from two
to the square root on N. On the right is algorithm
B, which is let's say our improved algorithm. In this case, I have applied the check if it's divisible by two so we
only do half as many steps. I also terminate early
in this algorithm B. It's not perfect, I just
applied a few user modifications so we can see what happens. Now, I am going to play
with this to show you it. Here we can see as I
scroll, we see algorithm A. We have the output, whether
it is composite or prime. At the bottom you'll
see the number of steps. The first thing to notice
is on the right hand side every other number takes only one step. We know why that is. If it is an even number
such as this, it will quit. Our old algorithm took 314 steps. Our new algorithm only took one step because it checks if
it is divisible by two. That seems like a really
nice optimization. However, as we build our
input, you'll notice the steps increase and the bar grows and turns red once we approach the region
where we are going to crash. This red line up here is step limit. If your bar hits there, we fail, which means our rover would break. In this case, the browser
will actually crash. I'll try to get close to it. I am close to it now and
it's running very slow. I can feel that my browser
is just about to crash and give me the circle of death. Notice the improved
algorithm took only two steps in that case, but remember the worst case. I am going to- I have a few large prime
numbers saved here for example. We have to be able to handle any case. We don't know what we are
throwing at our algorithm. If I throw a large prime
at it, look what happens. Algorithm B, as we know, is
taking half as many steps in the worst case but it is
still taking many steps here because it is the worst case, right. We are getting close to crashing here, and this is not a very long prime. We are still way under 15 digits. When I put this 12 digit
prime into our algorithm let's see what happens. It's lagging, it's going to crash. Look what happened, both
algorithms went way overboard. It didn't work. Our improvement algorithm
is not good enough yet. But, now we have an understanding of what we are trying to improve which is number of
steps in the worst case. We also have this cool
tool which allows us to visualize how fast it is growing, how fast the number of steps grows as our input grows. Below, I'll explain how I set this up so you can set up your algorithm and compare it with the base case and see how much better you can do."
Computer science,Cryptography,Primality test,Sieve of Eratosthenes,Sieve of Eratosthenes allows us to generate a list of primes. Created by Brit Cruise.,"Voiceover: I'm now going
to introduce an ancient method for generating
a list of primes up to some limit N, called the
Sieve of Erathosthenes. Now Erathosthenes was born in 276 BC. So this method was over 2200 years old. But it's very simple and elegant and you can teach it to any child. Now let's say for example
we want to calculate all the primes up to 100, this would work in the same way if we wanted to calculate up to 10,000 or a billion. Proceeds as follows, assume all numbers are unmarked, grey is unmarked. We start at the beginning
and if we find a number that is unmarked we know it's prime. So we hit two and we say two is primed because it's unmarked. And then the second phase is now we can eliminate all multiples of two because we know their composite. So bam, we jump along and we eliminate all multiples of two, red means composite. And now we repeat. We step along from two to three. Three is unmarked so
we mark three as prime. And now we can eliminate
all multiples of three. And a really simple optimization is, notice six is already crossed off, we actually cross off
the multiples starting at the square of that number. So three times three is nine. We start at nine and mark all multiples of three as composite. And then again we go back,
we jump along to four. Well four is marked,
we know it's composite. We jump along to five, we
find an unmarked number, five is prime. Now five times five is 25, we go to 25. We mark off 25, 30, 35, 40, 45, and so on. Those are composites. We proceed forward until we hit seven, we know seven is prime
because it's unmarked. Seven times seven is 49, we mark 49 and all multiples of seven
above it as composite. Now we move along until
we hit 11, 11 is prime. Notice now, 11 times
11 is greater than 100, so we can actually stop at this point. We could have stopped at 10 even, because now all remaining
unmarked numbers, if you'll notice, are prime. And in one swoop we can
mark them all as prime. And that's the whole
algorithm, it's so simple. And just to generalize how we do this, so we could write up a
program to perform this sieve, is if we want to find all the primes up to some number N, we
first create a main loop. So we have four all numbers A, from two to the square root of N. So notice here, we stopped when we hit 10, I showed it as 11, we
actually stop because we have found all primes. So from two to the square root of N, we proceed as follows: If A is unmarked, then we know A is prime and when we find a prime number we mark all multiples of A off it's composite and that's it. So, you find a number prime,
mark of the multiples, go back to the beginning,
increment A by one. So we're at two then we go to three then we go to four, five and so on, and when we're done, we have all primes. Notice here that this is also a loop. So we have a main loop
for when we find a prime. This marking off of
multiples is also a loop. So it's important to notice here that we have a nested loop, we have a loop inside a loop. Here is an example of
this algorithm in action, I wrote in JavaScript below. If I put in 100, here are
all the primes under 100. And if I put in 200, here
are all the primes under 200. And if I put in 850, here
are all the primes under 850. And below I have this
program with a recording explaining how I set it up."
Computer science,Cryptography,Primality test,Primality test with sieve,An attempt at an optimal trial division primality test using the Sieve of Eratosthenes. Created by Brit Cruise.,"Voiceover: Now, to recap We are checking if sum number N is prime by doing a trial division. Here is the square root of N and here is three. Starting at three, we are hopping along by two up until the square root of N. At each point in the way, checking if that point divides N. Now so far, people have
been trying to reduce the number of steps we take by perhaps starting later
and taking larger steps. I just want to pause here and let's think about
what is the ideal case for a trial division algorithm? What is the best we could possibly do if we got very creative in our stepping? Remember, any number N has
some tri-factorization. Let's say the square root of N is here. We actually only need to
step on prime numbers. That would be the best we could do. We know if we step only on primes, we will eventually find a factor. Tri-factor if it's a composite. The question now is how
efficient is this method? It seems like we have
a perfect solution now. If we wrote a new algorithm
which first called the sieve. Let's say the new algorithm
is calculating if N is prime. If you call the sieve and generate a nice long
list of primes for us. Then, we have our trial division, which would use this list of primes. It would hop along and hit only primes up until the square root
of N, wherever that is. What's wrong with this? We can visualize the time complexity or the number of steps taken. Remember I did so by- I quoted up this algorithm
and I put a step counter inside each loop so we have- let's just say step plus plus
means step plus one here. Inside this other loop,
there is also a step counter. Step plus plus. These are all constant operations
checking if and marking. We just had a step
counter inside each loop. Now here is a comparison. On the far left is our
old trial division method. In the middle is our
algorithm calling the sieve to generate all primes up to N. On the right is this proposal
where we just call the sieve to generate primes up
to the square root of N and then call trial division
just on those primes. Let's see what happens with a small input. As we can see initially,
the sieve takes many steps. Even the modified version on the right is actually slower than trial division. As the input grows, the number of steps in the sieves grows even faster. Let's just forget the middle and compare trial division versus the sieve
up to the square root of N plus trial division. Here we can see the old
trial division method is much more efficient. The number of steps in our sieve to the square root of N plus trial division is growing much faster. It is actually not an improvement. Below is the program I
used to do this comparison. There is a recording
explaining how I set it up. Now you may be wondering ""Well, what if we calculated
the primes in advance?"" The first step would be to
build an array of primes and store it on a hard drive. Then, our algorithm would
just do trial division and it would know how
to hop on primes only because it would be reading
from this proposed prime list. Perhaps our prime list stores
all primes up to 20 digits or even 100 digits. Why can't we do this? The problem is limitations in memory. When we innumerate lists of numbers, which we will explore next. Just for example, let's say
we were doing this by hand. We calculate five was prime, we write five on a piece of paper, and we store it in a filing cabinet. Then we get seven, we store
that in the filing cabinet. Nine, or 11, sorry,
into the filing cabinet. Then we have a filing cabinet
full of prime numbers. This is our- think of it as a prime array. How big would this filing cabinet be if, say, we wanted all
primes up to 20 digits or all primes up to 100 digits long? Could we even store this
array on a hard drive? To understand why this
actually is not possible we have to dive a little deeper into how large does this
actually grow, this prime array, and what is the size
limitation of modern-day and even future computer hardware?"
Computer science,Cryptography,Primality test,The prime number theorem,How can we estimate the number of primes up to x? Created by Brit Cruise.,"Voiceover: Imagine we listed all
integers in a growing spiral, and colored the prime numbers blue, and left the composite numbers black. One interesting question we may ask is, ""How many primes are there compared to composites?"" First, let's zoom out
to see the big picture. Notice the prime color
is dense in the center, and slowly drops off in the distance but never seems to end. One way I like to think
about this is as follows: Imagine there is a tree at the center which is infinitely high. The leaves which drop from this tree represent prime numbers, which are scattered unpredictably below, dense near the base of the tree, and as we walk away from this tree, we find fewer leaves, though we always find them. This is exactly what happens when we look at larger
and larger integers. We always find more primes, though the number of primes
we find gradually drops, the further we look. So let's return to our question. How many primes are there
less than some integer x? If we make a table, we see the number of primes
is always increasing. Though as we search further, we find fewer and fewer. Let's graph the number of primes found on the vertical axis, and the search size x on the horizontal. As we zoom out to include
billions of numbers, notice the curve never flat lines. It's always rising, albeit gradually. First, let's think about
the density of primes less than some integer x. We can find the density by dividing the number of primes
found by the search size. For the first 100 integers,
we find 25 primes, therefore 25% are prime. Of the first 1000 integers,
we find 1229 primes, 12.29% are prime. Of the first 1 million
integers, 7.84% are prime. And the first 100 million
integers contain 5.76% prime. As we search further, this
density continues to drop, though the speed at which
it drops slows down. Here is a graph of the search size on the horizontal axis and the prime density on the vertical. Notice that as we zoom out, the primes are a vanishing
proportion of all integers. Amazingly, we find this formula in nature. We see it in galaxies, storms, flowers, and even inside our bodies as the design of least resistance, known as the logarithmic spiral. Notice that as the spiral rotates, it gets further and further
away from the center. Incredibly, the rotation
rate of a logarithmic spiral is related to the density
of primes as follows: We have the number of
rotations, call this phi. and the distance from
the center, call this r. If we graph phi against r, and zoom out, we see they are related according to the natural logarithm. This means the natural
logarithm of the distance is related to the number of rotations. The graph of the natural
logarithm is commonly written using the variable names y and x as y equals the natural logarithm of x. Notice the graph tapers
off in the same way the density of primes gradually decreases. The final step is to invert this by changing the y axis to 1 divided by the natural logarithm of x. And when we zoom out, we find the exact same curve generated when we plot the density of primes. Let's confirm this by
overlapping the two plots. In green, is a graph
of the line y equals 1 over the natural logarithm of x. And in red is the plot of prime number density up to x. As we zoom out, they approach each other. The further we zoom out, the more accurate the
green estimate becomes. This is known as the asymptotic law of
distribution of prime numbers. We now have a formula
to accurately tell us the density of primes without counting. The density of primes up to some integer x is approximately 1 divided by the natural logarithm of x or lawn x. So let's say you need to
know the density of primes between 1 and 100 trillion. Simple. 1 divided by lawn of 100
trillion equals 3.1%. Compare this to the actual result from counting all primes which is 3.2%. This is off by 0.1%. And as we check larger and larger numbers, the difference approaches zero. Realize now that we can use this formula for prime density to estimate the number of primes up to x. The number of primes is the area under the density curve for
which we can simplify by assuming density is constant. So number of primes
equals size times density or x divided by lawn x. This is the prime number theorem. Here is a graph of y equals
x divided by lawn x in blue, and in yellow, is a plot of
an actual count of primes. Notice as we zoom out, these lines eventually overlap
as we look to infinity. And that is it. We have a formula which
tells us approximately how many primes there are up to any value, no counting needed. For example, let's say we need to know the number of primes
less than 100 trillion. 100 trillion divided by the natural log of 100
trillion equals 3.1 trillion. Compare this to the actual count, which is 3.2 trillion. This is over 99.99% accurate even at this relatively small scale. So to recap: Given a search size up to some integer x, the prime density is
about 1 divided by lawn x And the number of primes is
about x divided by lawn x. This is the prime number theorem."
Computer science,Cryptography,Primality test,Time space tradeoff,what is our memory limit? How can save time at the expense of space? Created by Brit Cruise.,"Voiceover: I have a new update. I contacted the engineering
department at NASA and found out the new rover is using the same memory platform
used on curiosity. And the curiosity rover was equipped with two computers,
but only one was active at a time and it had the following specs. Two gigabytes of flash memory, 256 megabytes of random access memory, and 256 kilobytes of read only memory, which held core system routines. We want to be able to store our entire program in RAM, however
because we have to share this space with other
programs, we are allocated 5% of RAM, which is
the maximum we can use. This is about 12.8 megabytes total. I bring this up because I
want to introduce the idea of time space trade off,
or space time trade off, a commonly used term in computer science. I was looking at a program done by IV46 and they had a million prime array so that there algorithm could step along on primes only, as far as possible, when doing a trial
division primality test. It begs the question, why
just not store all the primes we need, up to some limit in an array instead of calculating them on the fly? We mentioned in a previous video that this would be optimal for a
trial division algorithm. Although you may see
his algorithm does not use many steps, it
began to run very slowly and eventually crashed before
hitting the step limit. So it wasn't able to
quickly solve the problem for the sizes I defined earlier. And in this case, they
were trading off time in the form of repeated divisibility tests at the expense of space, which is memory to hold the array. Now, why didn't this work? Well, let's do a rough calculation using what we've learned to
find out if this method is possible using our memory limit. Remember, we must be able to deal with numbers up to just
over 9 quadrillion. Our trial division
algorithms only need to check for factors up to the
square root of a number, and if it hits that point
with no factors found, it can say 100% whether or
not the number is prime. Now, how many primes up to the square root of this limit, where the square root of 9 quadrillion is 94.9 million? How many primes under 95 million? Well, luckily we have
learned a mathematical solution to approximate this answer using the prime number theorem. So how many primes are there under x? Well, it's x divided by
the natural logarithm of x. And if x is just over 94.9 million, we find the number of primes is approximately 5.1 million. Now because we are storing these primes, we need to know the size
of the largest prime, or in this case, the 5.1
millionth prime approximately, which we know will be some number less than 94.9 million. Now, I double checked
the table, and the actual value of this prime, the
largest prime we would need to store under the
square root of our limit, is 89,078,611. Now how much memory does this single large prime number require? Well, to find out,
let's convert the number into binary notation,
which is how the computer will store the number using
tiny switches in memory. We learned about this in
the computer memory video. In bits, the largest
prime looks like this, which is 24 bits or 3 bytes needed to store this single number. So let's say we want to
store each number in memory and since we know the largest number requires 24 bits, we can
just imagine a long list of 24 bit blocks storing
each prime number. So how many bits are needed
for this entire list? Well the memory needed
is the number of values, or the number of primes,
times the space per value. So we have around 5.1 million values times 24 bits per value,
which is just over 124 million bits, or if
we convert it into bytes, it's about 14.7 million bytes. Call this almost 15 megabytes. So it is not possible to store even a list of these numbers in
memory using our limit. This is just a toy example. It's actually an underestimation of what you'd really need. For example, an array needs space for a pointer to each
item, and each pointer on a 32 bit machine is 4 bytes. So the actual amount of memory needed is much more than 15 megabytes. That being said, we know
that storing all primes up to the square root of
our relatively small limit is not even possible
with our memory limit. We can't do it this way. Okay, well, what about when prices drop by a factor of a
thousand, or ten thousand. Modern day cryptographic
systems use 512 bit, or even larger numbers, making search and enumeration impossible. Now for example, if someone
asks you to make a list of all prime numbers up to primes which are 200 digits in
length, you shouldn't even consider it because the
hard drive needed to store all these primes would be heavier than the mass of the observable universe. I'll leave the calculations for you to try next time you're at a restaurant with crayons and paper all over the table. But remember, there are around 10 to the 80 atoms in
the observable universe. That's an 80 digit number. Realize now, there is a fundamental limit for how much space or
memory we have access to. Nevermind how much time it would take, but there is always this push and pull between using space or
time to solve our problems. So to solve this problem
of testing for primality quickly using a small amount of space, and a small amount of
time, we are going to have to approach it in an entirely new way."
Computer science,Cryptography,Primality test,Summary (what's next?),"Why is factorization hard, yet generating primes easy? Where do we go from here? Created by Brit Cruise.","Voiceover: Congratulations. We've reached a branching
point in our lesson. Now a few different ideas
have been introduced, so it's important to orient
ourselves here before moving forward in various directions. Now, what motivated this lesson? Well, we learned about RSA encryption, and RSA depended on two things. One, that prime
factorization is difficult. So if I multiply two big
primes together, P1 and P2 and I give you N, I can trust
or feel secure in knowing that you'll take a long
time to find those primes, and maybe more than your lifetime. Also two, RSA requires
that those large primes I generated was easy, meaning I could just quickly generate a large prime. So let's return to the first problem. Difficulty of prime factorization. Well what is it about prime
factorization or just prime numbers themselves which
make problems hard? And to find out we begin
with a core problem. Given X, is X prime or composite,
which is a primality test? Now we ended up building some
solutions to this problem. And in doing so, we realize that this problem was computationally expensive. That is, there is no instant
solution to this problem. As our input number
grew, the amount of time or the amount of steps involved for an algorithm to find the solution also grew. And, how much it grew,
we actually understand better now because we can predict this search space using the
prime number theorem. Though, the real issue can
be thought of as a graph, where on the vertical axis
we have the number of steps our algorithm takes, so you
can just think of it as time. And on the X-axis is the input size and as input size increased, so did time. And the problem we had is that shape of this curve is unacceptable. Because in our case, once
N hit even 20 digits, we can no longer solve the
problem in the worst case. And if we threw in input
hundreds of digits long at our algorithm we can all
agree it would not work. In our case it would crash. So it's practically impossible
to check if large input is prime using our current strategies. Now let's return to the
first point, factorization. Realize based on our current understanding in this lesson, factorization has to be harder than a primality test. That is there are more steps
involved in finding the prime factorization of some number, versus just telling me if a number is prime. Since, remember, factorization
requires us to find all the prime factors for some input N, whereas a primality test only
requires we find one divisor And a nice reminder of this
is that some users have actually turned these
primality tests into prime factorization algorithms, simply by repeating after it
finds its first divisor. So the primality test is
just kind of a sub-routine inside the main factorization algorithm. So if we return to this
graph, a factorization algorithm would be something like this. As input grows, our
factorization algorithm would be above this primality test line. And realize that in any
situation we always have a computational limit, that is the number of primitive steps we can
calculate which is based on our computing power in any given situation and the amount of time we have. And you could think of
this as a horizontal line, or a threshold on this graph. Anything above this line is out of reach, not feasible to solve. And in this lesson we were
limited by the rover's on-board computer which was fairly slow,
which is why we couldn't run primality tests on numbers
with even 20 digits. However, even if we had,
say, 1,000 computers running for a year, this would
simply just push this horizontal line up to
some other threshold. And this would allow us
to run tests on larger numbers, but as you can see,
we would always hit some limit where the input is large enough that we can no longer solve the problems again. Now, this leads to many
interesting question paths. However, I'll identify the
two I'm going to explore next. First of all, so far I have not been very precise about these growth curves. Though, it would be
helpful if, imagine for any algorithm you give me, no
matter what it's trying to solve, and no matter what
machine it's even running on, we could draw some
corresponding growth curve on this graph, simply by looking at the description of the algorithm. If we could do this, we
could identify categories of certain growth
shapes, which tell us how difficult a problem would be to solve. And in this way, we could
understand an algorithm before we even run it, very
important to think about. And you could hand me your
algorithm written on a piece of paper and I could look
at it and I'll say, ""I know ""this algorithm is not solvable
with the input size needed."" And this leads us to a
lesson on time complexity, an incredibly important
conceptual tool we will need. And if you've ever heard this
runs in polynomial time or exponential time, these are terms which come out of time complexity. Next, many of you have
been wondering, ""well, how ""are we generating these
random primes in practice,"" the second point I made about RSA. Well let's just walk through it quickly. To generate a large random
prime number hundreds of digits long, we need to
follow these instructions. Generate a random number,
test if it's prime, if it's prime, we're done. If not, try again until we hit a prime. Now in this three-step
procedure, what's most important is the second
step, test if it's prime. If we can't do that step, this won't work. So how is this working today? Well, it's based on a subtle
alteration to our problem definition, and more importantly,
the use of randomness. And this leads us to another
lesson on random algorithms. And now finally, if there are any other lingering question paths you have, please post them below and we can plan lessons. For example, there are
some deeper mathematics we have yet to explore in
order to speed up our existing trial division primality test. And what else are you thinking of? Please share below."
Computer science,Cryptography,Randomized algorithms,Randomized algorithms (intro),How could random numbers speed up a decision algorithm? Created by Brit Cruise.,"Voiceover: I have an update. NASA has said that
there will be a hardware random number generator on the Rover that we have access to. After that, they made one more comment, they reminded me that we
just need our algorithm to work in practice. For something to work in practice, it means that there's always
some possibility of error, but perhaps the possibility
is so small that we ignore it in practice, and if this sound crazy, just realize that in the physical world nothing is every certain, there is always chances for error. For example, chip packaging
contains small amounts of radioactive contaminants, and when these decay, they
release alpha particles which can actually flip bits in memory, and perhaps change a number unexpectedly. Even more interesting,
cosmic rays can also cause soft errors, we can never remove the chance of error completely. I asked NASA exactly what error probability is acceptable. They said, ""We just need to make sure that ""the probabilty of
error, for a given trial, ""is less than the odds of ""hitting the lottery twice in a row."" The odds of hitting the lottery, say 649 twice in a row, is six times ten to the negative fourteen, so let's just be safe and round it down and say our error probability is ten to the minus fifteen. Safe enough; we will not
expect to see an error, and it could run hundreds
or thousands of times. Now my question is would
access to randomness help us speed up a decision algorithm such as this primality test? This is a deep question,
so let's step back and look at the big picture. Given some collection of integers from one to some limit N say, let's think of it as our universe of integers. We can always divide a
collection into two sets. A decision problem can actually be thought of as a
partition into two sets. For example, provided
some N is N less than 100, it will output yes for all
integers less than 100. Here is one collection,
and no for all others, which is another collection. Okay, so let's now focus on recognizing primes with the decision. Ideally, what we would like
is some simply computed criteria that all primes satisfy and no composites satisfy. Now if we knew some simple pattern which describes the
location of all primes, and only primes, then given some number N we could simply check if
N follows that pattern. The problem is that so far no exaustive and simply computed pattern has been found for all primes and no composites, or all composites and no primes. But we do know fast tests for most composite numbers. For example, a simply computed criteria would be a test for evenness, and all even numbers are divisible by two. It's fast because we can
tell if something's even by just looking at the last digit, and even as N grows, the problem doesn't get any harder, we just
look at that last digit also known as the low order bit. Now realize that we can
use this evenness test as a low quality composite test. In that we could have some algorithm accept our integer N, and all our algorithm does is check if it's even. If it is even, and greater than two, then we know with 100 percent certainty it is composite because we have proof. Think of two as our composite witness. However if not, then
we aren't exactly sure. If it's odd it could be prime
since all primes are odd, or it could be one of the many composites which are odds,
just nine or fifteen. This massive region of odd composites makes for an unacceptable test. Now to be clear, let's draw this. Provided some N, N can be either prime or composite. If N is prime, our algorithm will say prime 100 percent of the time since no primes are even
that are greater than two. It will never say composite
when a prime is provided. However, if N is composite, our algorithm will say composite about fifty percent of the time, and prime fifty percent of the time. This means that if our
algorithm outputs composite, it means it found proof
of composite witness. However, for our algorithm outputs prime, we know there is an unacceptably large chance of error. Until now, our strategy
has dealt with this large, unacceptably large error, by iteration and let's draw
the flow of our machine. Given some N, our machine does a series of divisibility tests
starting at A is two. It asks does A divide N. If it doesn't divide N, then we can eliminate all of this region. Then it asks the next question, does N divide three? If not, then we eliminate
that whole section. Does N divide five, seven, and so on. Notice these are disjoint sets which gradually fill up all possible composites. Now if we ever answer yes along the way, then we have proof that N is composite. A, whatever it is at that
point, is our witness. We halt N output composite
from our algorithm. Otherwise, we continue trying until we exhaust all possible composites. Until we hit the square root of N since we know, remember
ever composite number N must have a factor less than or equal to the square root of N. This really leads to the final question in our algorithm. If no witnesses are found, and A is greater than the square root of N, then we suddenly have proof and we halt an output prime. Realize we have two exit
paths through our algorithm. Both paths represent proof of certainty that N is either prime or composite. When N is prime, we try
all possible divisors and we basically rule them all out, and that is our proof that N is prime. The problem with this strategy is that our test value A at minimum requires us to cycle through every prime starting from two to the square root of N. As N grows, the number
of primes grow with it. It results in too many iterations in the worst case such as when we provide a prime to our algorithm. Looking at the big picture now, realize it's providing
proof when N is prime. Which we now know we don't exactly need. No one said we needed to prove it. We just needed to be 99.9999 fifteen nine's percent certain. Hmm, so we actually need to think about the composite test that's
being used in our algorithm. Remember, our fastest trial division primality tests thus far have tried to use prime pattern such as 6K, or all primes are of the
form 6K plus or minus one, to help walk along the primes only and eliminate many of the
composites to save time. Remember, a test like this can be turned into a composite test. That is, given some integer N is of the form 6K plus or minus one, then we can say it's probably prime, but there are many composites still which follow this pattern. It doesn't include primes only, just all primes and some composites, and we can think of these
extra composites as a leak and this leak is our source of error. Now if we invert it and ask is N not of the form 6K plus or minus one, then we can say with 100 percent certainty it is composite, so the
leak is our source of error on the prime side, but in
this case it's unacceptable it's not a non-negligible error. There's a much larger probabilty. We need to define a new composite testing procedure which is
able to shrink this space and make the chance of error negligible. Which means we'll need to review how we can actually shrink
errors with iterations. I think we should now post our ideas below regarding what kind of tests
might we want to perform and also more importantly how could a random number generator really help us?"
Computer science,Cryptography,Randomized algorithms,Conditional probability explained visually,n/a,"•Current transcript segment: 0:02- [Instructor] Consider
the following story.•0:05Bob is in a room and he has two coins.•0:07One fair coin and one double sided coin.•0:13He picks one at random, flips it,•0:19and shouts the result.•0:21- [Bob] Heads.•0:23- [Instructor] Now what is the probability•0:24that he flipped the fair coin?•0:27To answer this question, we need•0:29only rewind and grow a tree.•0:32The first event, he
picks one of two coins,•0:35so our tree grows two branches,•0:38leading to equally likely
outcomes, fair or unfair.•0:42The next event, he flips the coin.•0:45We grow again, if he had the fair coin,•0:47we know this flip can result
in two equally likely outcomes,•0:50heads and tails, while the unfair coin•0:53results in two outcomes, both heads.•0:56Our tree is finished, and
we see it has four leaves,•0:59representing four equally likely outcomes.•1:02The final step, new evidence, he says.•1:06- [Bob] Heads.•1:07- [Instructor] Whenever we gain evidence,•1:09we must trim our tree.•1:11We cut any branch leading to tails•1:13because we know tails did not occur,•1:15and that is it, so the probability that•1:18he chose the fair coin
is the one fair outcome•1:22leading to heads divided by
the three possible outcomes•1:25leading to heads, or one third.•1:30What happens if he
flips again and reports?•1:32- [Bob] Heads.•1:34- [Instructor] Remember, after
each event, our tree grows.•1:37The fair coin leaves result in
two equally likely outcomes,•1:41heads and tails, the unfair coin leaves•1:44result in two equally likely
outcomes, heads and heads.•1:49After we hear the second.•1:51- [Bob] Heads.•1:53- [Instructor] We cut any
branches leading to tails.•1:56Therefore the probability the coin is fair•1:59after two heads in a row, is the one•2:01fair outcome leading to heads divided•2:03by all possible outcome
leading to heads, or one fifth.•2:11Notice our confidence in
the fair coin is dropping•2:14as more heads occur, though realize•2:16that we'll never reach zero.•2:19No matter how many flips occur,•2:20we can never be 100%
certain the coin is unfair.•2:26In fact, all conditional
probability questions•2:29can be solved by growing trees.•2:32Let's do one more to be sure.•2:35Bob has three coins, two are fair,•2:43one is biased, which is
weighted to land heads•2:46two thirds of the time
and tails one third.•2:50He chooses a coin at random and flips it.•2:57- [Bob] Heads.•2:58- [Instructor] Now what is the probability•3:00he chose the biased coin?•3:04Let's rewind and build a tree.•3:07The first event, choosing the coin,•3:10can lead to three equally likely outcomes,•3:13fair coin, fair coin, and unfair coin.•3:16The next event, the coin is flipped.•3:21Each fair coin leads to two equally•3:23likely leaves, heads and tails.•3:28The biased coin leads to
three equally likely leaves,•3:32two representing heads,
and one representing tails.•3:37Now the trick is to always
make sure our tree is balanced,•3:40meaning an equal amount of leaves•3:42growing out of each branch.•3:44To do this, we simply scale up the number•3:47of branches to the least common multiple.•3:50For two and three, this is six.•4:01And finally, we label our leaves.•4:03The fair coin now splits into six•4:05equally likely leaves,
three heads and three tails.•4:09For the biased coin, we
now have two tail leaves•4:11and four head leaves, and that is it.•4:16When Bob shouts the result.•4:18- [Bob] Heads.•4:19- [Instructor] This new evidence allows us•4:21to trim all branches leading to tails•4:24since tails did not
occur, so the probability•4:27that he chose the biased
coin given heads occurred,•4:33well four leaves can
come from the biased coin•4:35divided by all possible leaves.•4:39Four divided by 10, or 40%.•4:43When it doubt, it's always possible•4:45to answer conditional
probability questions•4:48by Bayes Theorem, it
tells us the probability•4:51of event A given some new evidence B,•4:55though if you forgot it, no worries.•4:57You need only how to grow
stories with trimmed trees."
Computer science,Cryptography,Randomized algorithms,Random primality test (warm up),Introduction to random primality tests & how they will work (warm up). Created by Brit Cruise.,"Voiceover: First, let's build up the conceptual mechanics
for these new types of random algorithms
which accept some input N and if N is prime, our
algorithm will output prime with 100% certainty. It will never label it as composite. However, if N is composite, there will be some tiny chance of error E
that it will label it prime. Otherwise, there is a
one minus this tiny error probability that it will correctly
identify it as composite. We will start simple. Out of some universe of integers up to some limit, we grab a number and call this integer N. We input N into our machine. Previously, in our trial division methods, we basically iterated through all values from one to the square root of N and tested if that number divides N. Ideally, we only wanted to
check primes to save time. If yes, A divides N, we know
that N is a composite number because we found a composite witness. If not, we aren't sure. So, we go back and we
increment A and we test again. Once we exhaust all possible tests, we can then say yes, N is
prime, if we found no divisors. Now, let's be lazy. What if we just pick a few random integers and do a few divisibility tests which you can think of
as random questions. We know that some number N, if it is composite, it must have some divisors scattered around. At minimum, it has a single divisor. Some composite numbers have many divisors. Anyway, we pick a random integer A between one and the square root of N. That's it. Then we just check if A divides N. As before, if A divides N we know for sure that N is composite, we found a witness. If not, we haven't learned too much except that it could be prime. To be safe, we could generate a few more random As and keep testing. Perhaps after 100 or 1,000 iterations, we could stop and say
""It's probably prime"" with some certainty. Say, for example, 99.9 percent. This is similar to the example game on conditional probability. In the simplest version,
we were trying to guess if a coin was fair or if
it was a two-headed coin. In this case, tails is
like finding a divisor. It's a witness of a fair coin. Heads is the case where
we might want the person to flip again and iterate. In this case, after around 5 heads, we are more than 90 percent sure so we could stop and say ""We
think the coin is two-headed."" Here is a program I have set up which compares our old
trial division methods with this new random division test. I am specifically using the current trial division speed leader,
which is a program by Dino. I posted the link in the
header of the program. To begin, notice the
variable number of trials. This is the number of random guesses. We will start at something
small, such as three. Notice, even with small input, if the input is prime, the
random division algorithm will always output prime. When the input is composite, we see the random division can make mistakes and identify incorrectly as prime. However, we can fix this by
increasing the number of trials then the probability
of an error goes down. We see now that the
outputs more or less match. As I test larger input,
the error grows again. I need to increase the number
of random tests accordingly. When I do, the outputs match very nicely. They seem identical. With huge input size, I need
thousands of random tests for this to be accurate. We haven't actually improved the number of steps needed. Our trial division method seems better. This is because the error
rate of the division test is so high, but we are close. We have the right idea. We need to use another test. We need an equation which
is fast to calculate, that can be used to prove
whether a number is composite. It must accept not only
the input integer N, but also a random integer
A and do a random test in the same sort of way."
Computer science,Cryptography,Randomized algorithms,Fermat's little theorem,Introduction to a key result in elementary number theory using a visualization with beads. Created by Brit Cruise.,"Voiceover: Bob discovered
something very interesting while making multicolored earrings out of beads for his store. Now, his customers like variety, so he decides to make every
possible style for each size. Starting with size three, he begins by figuring out all possible styles. Each earring begins as a string of beads, and then the ends are
attached to form a ring. So first, how many
possible strings are there? With two colors and three beads, there are three choices,
each from two colors. So two times two times two equals eight possible unique strings. And then he subtracts the strings which have only one color,
or monocolored strings, since he's only building
multicolored earrings. Then he glues them all
together to form rings. He was assuming he would end
up with six different earrings, but something happened. He could no longer tell the
difference between most of them. It turns out he only has two styles, because each style is now part of a group with two identical partners. Notice you can always match
them up based on rotations. So the size of these groups must be based on how many rotations it takes
to return to the original. Or how many rotations to complete a cycle. So this means that the original set of all multicolored strings divides evenly into groups of size three. Now, would this be true for other sizes? That would be convenient,
since he always wants the same amount of each style. So he tries this with four beads. First he builds all possible strings. With four beads he can
choose from two colors for each bead, so two times two times two times two equals sixteen. Then he removes the two
monocolored necklaces and attaches all of the
others to form rings. Now, will they form equal sized groups? Apparently not. What happened? Notice how the initial set of
strings divides into styles. If strings are of the same style, it means you can form one into the other simply by grabbing beads from one end and sticking them onto the other end. And there is one style
which only has two members, and this is because it's built out of a repeating unit of length two. So only two rotations are
required to complete a cycle. Therefore this group only contains two. He cannot split them into
an equal number of styles. What about size five? Will they break into equal
number of each style? Wait, suddenly he realizes he doesn't even need to build them in order to find out. It must work, since five cannot be made up of a repeating pattern, because five cannot be broken up into equal parts. It's a prime number. So no matter what kind
of multicolored string you start with, it will
always take five rotations, or bead swaps, to return to itself. The cycle length of every
string must be five. Well let's check. First we'll build all possible strings and remove the two monocolored strings. Then we separate the strings into groups which belong to the same style, and build a single earring for each style. Notice that each earring
rotates exactly five times to complete a cycle. Therefore, if we glued all
the strings into rings, they must split into equal
sized groups of five. But then he goes one step further. Currently he is only using
two colors, but he realizes this must hold with any number of colors. Because any multicolored
earring with a prime number of beads, P, must have
a cycle length of P, since primes cannot be broken
into equal sized units. But if a composite
number of beads are used, such as six, we will
always have certain strings with shorter cycle lengths,
since it's actually built out of a repeating
unit, and therefore will form smaller groups. And amazingly he just stumbled
onto Fermat's Little Theorem. Given A colors and strings
of length P, which are prime, the number of possible
strings is A times A times A, P times, or A to the power of P. And when he removed the
monocolored strings, he subtracts exactly A strings, since there are one for each color. This leaves him with A to the
power of P minus A strings. And when he glues these strings together, they will fall into groups of size P, since each earring must
have a cycle length of P. Therefore, P divides A to
the power of P minus A. And that's it. We can express this statement
in modular arithmetic too. Think of it, if you
divide A to the power of P by P, you will be left
with a remainder of A. So we can write this
as A to the power of P is congruent to A mod P. And here we have stumbled onto one of the fundamentals
results in number theory merely by playing with beads."
Computer science,Cryptography,Randomized algorithms,Fermat primality test,A quick outline of how & why it works. Created by Brit Cruise.,"- [Instructor] Our goal is to define a series of instructions which can prove whether some input integer is
composite or else identify it as prime with some very
high degree of accuracy. Which we can define, and it must be efficient to do so. Meaning it should be fast
to calculate on any machine and even if the input size grows, which is our input integer N, it should still be fast. And so far we've learned
that at the lowest level this requires some known
pattern that all primes follow and very few composites follow. However, in the previous video
we did a visual demonstration of Fermat's little theorem and it provides us with
a very interesting rule. Given some prime number P
and some other integer A. Which is just less than P. We know now that P divides
A to the power of P minus A. We write this as A to the
power of P equals A mod P and that's the way you'll normally see it. Now because A and P share no common factor since P's a prime, we can use a cancellation law, and you'll sometimes see this written as A to the power of P
minus one is one mod P, and remember we can only do this because the greatest common divisor
of A and P equals one, and here I've just set up a demo so we can at first just
see this equation in action and get comfortable with it. Notice now if I input a prime for P, the output is always one
no matte what A I choose. If we input a composite number for P, we see that it usually isn't one, and anytime this equation output something that isn't one, we have a composite witness. This is now proof that the
P we chose cannot be prime, and that's the essence of this test, and before going any deeper, let's just step back and
construct the frame work for this test using this
pattern I just showed you. So our test starts. We are provided with some integer. Let's call it P, as input. Next we generate a random integer A. Which is less than P, and now we can as, is the
greatest common divisor of A and P one? If not, if the greatest
common divisor of A and P is greater than one, then
they share a common factor and we've proven that P is composite because a factor exists
and we can halt and exit and our algorithm will output composite. However, if yes, and we
can ask the key question, does A to the power of P
minus one mod P equal one? If not, we have a witness
that P is composite. We can halt and say we're
done, P's composite. Otherwise, if yes, if
our equation outputs one, then it should be prime, right? I coded up this series of instructions, and on the left hand side
we have Fermat's test, and on the right I just have
an existing trial division test and that's there because we
know that test is always correct and just at first glance
it seems like it's working. However, I found a problem. I hit the number 511,
and now the Fermat's test is saying it's prime, and
the trial division test is telling me that it's composite. 511 seems prime from the tests
perspective but it's not. Now let's just return back to our equation and see what happened. Well this is an example of
what we call a pseudoprime. It's a composite number
but there are certain A's we can choose that will output a one. That's incorrect again. So these A's which result
in a composite number outputting a one, we can call fools, because they're fooling us into
thinking the number's prime, but notice that if we
choose different A's, we seem to find many composite
witnesses instead of fools. So we could maybe just
step back and let's apply the same logic we used
in the divisibility test where we simply repeat
the experiment a few times and generate a new random A each time and hopefully we won't
pick a fool each time. Now it's been proven
that the number of fools must divide the total size
of the group we select from. Which means at most, half of the choices or half of the elements in
this pool could be fools. So since A is chosen randomly, the chance of finding a composite witness, which is what we want,
is at lest one half. After T iterations, the
probability that no witness will be found with a
composite number is at most one divided by two to the power of T. So after 20 trials the probability of mistakenly outputting a prime is just over one in a million. So that's the case where we just keep getting really unlucky
and generating random A's and every time we choose I fool. If you can let that sink in, that's really powerful to understand, and here now we can see our test in action with the increase number of trials. It seems to be working perfectly, and notice that in the worst case, which we know is when
we provide our algorithm with a prime, it's gonna do
the maximum amount of work. The Fermat test is much more
efficient than trial division. Especially because the number of steps doesn't scale with the input
and that's a key distinction. We set the number of trials and that's it. We never have to worry about our algorithm running millions and
millions of iterations as we did before. So I mean this is
quintessentially applied math. We are taking a pattern someone discovered and we're saving an immense
amount of computational cycles. However, there is one tiny
flaw for error in this system. Can you find it?"
Computer science,Information theory,Ancient information theory,What is information theory?,A broad introduction to this field of study. Created by Brit Cruise.,"Imagine Alice has an idea
and she wants to share it. There are so many ways to share an idea. She could draw a picture, make an engraving, write a song, (piano music) send a telegraph or an email. But how are these things different? And more importantly, why are they the same? This story is about a fundamental particle of all forms of communication. It begins with a special skill
you likely take for granted. Language. All language allows you to take a thought or mental object and break it down into a
series of conceptual chunks. These chunks are externalized using a series of signals or symbols. Humans express themselves using a variation in sound and physical action, as do chirping birds and dancing bees. And man-made machines exchanging a dancing stream
of electrical vibrations. Even our bodies are built
according to instructions stored inside microscopic
books known as DNA. All are different forms of one thing. Information. In simplest terms, information is what allows
one mind to influence another. It's based on the idea of
communication as selection. Information, no matter the form, can be measured using a fundamental unit, in the same way we can measure
the mass of different objects using a standard measure
such as kilograms or pounds. This allows us to precisely
measure and compare the weight of say rocks, water, or wheat using a scale. Information too can be
measured and compared using a measurement called entropy. Think of it as an information scale. We intuitively know that a single page from some unknown book has less information than the entire book. We can describe exactly how much using a unit called the bit, a measure of surprise. So no matter how Alice wants to communicate a specific message, hieroglyphics, music, computer code, each would contain the
same number of bits, though in different densities. And a bit is linked to a very simple idea. The answer to a yes or no question. Think of it as the language of coins. So how is information actually measured? Does information have a speed limit? A maximum density? Information theory holds the exciting answer to these questions. It's an idea over 3,000
years in the making. But before we can understand this, we must step back and explore perhaps the most powerful
invention in human history. The alphabet. And for this, we return to the cave."
Computer science,Information theory,Ancient information theory,Origins of written language, Created by Brit Cruise.,"Voiceover: Imagine Alice traveled back over 50,000 years to find
her distant ancestor, Bob. Now up until this time, human culture was
relatively unsophisticated, utilizing the same primitive stone tools which went unchanged
for thousands of years. But somewhere around 50,000 years ago something interesting happened. And nobody knows for sure why. There was a sudden explosion of diverse cultural artifacts, including instruments for making music, new tools, and other forms of creative expression. (chanting and clapping) Voiceover: Humans developed the ability to externalize their inner thoughts. They began to communicate using language. So Alice begins her search
by looking for water. She knows that human
and animal populations tend to migrate towards and along rivers which are the life blood of ecosystems. Eventually she comes across an interesting marking, Bob's hand print. This marking contains
very little information. Simply that he was here
and could possibly return. Alice knows Bob is equally intelligent. He can communicate orally. Although his culture has not yet developed the ability to read or write in their native language. At the time, the universal
written language was art. So she finds natural materials around her to paint him a picture in case he returns. She renders an animal she is tracking, hoping this will offer a clue of the direction she is
traveling in the future. Our ancestors use natural
materials to create pictorial representations
of their reality. Here is an actual cave painting from around 30,000 years ago found preserved deep inside Chauvet cave in France. Similar renderings are found in the caves of Spain as well. A common theme among
these ancient paintings are animal forms, as
well as the human hand. Perhaps a signature, a story, or a ritual calling. Voiceover: When Bob
returns to the waterfall he finds her painting and proceeds towards the river where
he thinks she might be. When he arrives he does not find her, though he finds a sign
that she was here before. He decides to paint her a picture explaining where he is going next, which is half way up the river towards the setting sun. He has little time to paint a picture as night is approaching. Therefore, he needs a fast way to visualize his message. He thinks about it for a moment and realizes his message only contains three distinct mental objects, middle, river, west. So he decides to use simplified pictures to represent them. For river, he draws a symbol which resembles its natural form, known as a pictogram, which is a drawing that resembles the physical object it represents. Pictograms are an important step in the evolution of writing. Here is a ceremonial
slate palette found in Egypt dated before 3,000 B.C. The surrounding scene shows the stuggle between civilized humans and the wild and ferocious animals. However, it's difficult to draw pictures of abstract concepts such as calm, old, dangerous, or
in Bob's case, middle. For this, he draws a line
with a box over the middle. It represents half way. This is knows as an ideogram, or conceptual picture of an abstract idea. Here is an example of this same symbol on an ancient Chinese bronze inscription. For the idea of west
he decides on a picture of the setting sun. Now he does something interesting. He combines these individual symbols in terms of their meaning
to create a message, meaning plus meaning equals new meaning. He leaves this in hope
of Alice finding it. Voiceover: Some of the earliest artifacts of this symbolic merging are found in ancient Mesopotamia, now modern Iraq, home of the Sumerians. This is the birth place of many of the world's earliest civilizations. Here we find clay accounting tablets which are some of the oldest written documents ever found, some dating before 3,000 B.C. The rectangular tablets record the payments in cattle,
shipments of cattle to shepherds for fattening, and gifts of cattle as an offering. Notice that instead of drawing a picture of 10 sheep, they draw a symbol representing 10 using small notches and another symbol
representing sheep or donkey, meaning simply, 10 sheep. We call this proto-writing. Finally, Alice returns
to the base of the river and finds Bob's message. She interprets the meaning correctly, half way west down the river. So she marches down river towards the setting sun, and eventually they finally meet. Voiceover: Over time, Bob learns to speak Alice's language, allowing them to use
the same oral language to communicate shared concepts and ideas. This gives them an idea, the root of a more
powerful written language. It starts with something very simple, writing her name. She disassociates the sound from the picture. For her name, Alice, Alice, Alice. She combines the
mathematical symbol for all and the picture of ice. All ice. Alice. Notice her name has nothing to do with the individual symbols. Sound plus sound equals new meaning. This is know as the Rebus Principle. Voiceover: A great example of this was found in Egypt along the Nile River. Dated to around 3,100 B.C., it contains some of the earliest hieroglyphic inscriptions ever found. The Narmer Palette depicts the Egyptian pharaoh, Narmer. On the back we see him to the left of a kneeling prisoner who is about to be struck down by Narmer, who we see standing tall, wearing a crown. What we are looking for
is on the other side. Between the two bovine heads at the top we see an inscription of his name. It's written as a fish and a chisel, which translates to nar mer. Narmer. Two sounds separated from the pictures together giving new meaning, a key development in the
history of written language. But before they could advance towards what we know of as an alphabet, something had to happen. They needed to save time."
Computer science,Information theory,Ancient information theory,History of the alphabet,The origin of letters. Created by Brit Cruise.,"(piano music) Brit: Informally, we
can think of information as some message, stored or
transmitted, using some medium. When you paint you are representing your message using a continuous pattern with a seemingly endless number
of possible forms. You are free to express yourself. When humans began
developing writing systems, we naturally had to divide our world into a finite number of atomic units which we express using symbols. Any written language can
be thought of in this way. Messages are formed by arranging symbols in specific patterns. Let's return to 3,000 BC and explore two ancient writing systems. First, in ancient Egypt,
we had Hieroglyphics, a priestly form of
communication reserved for governmental, fiscal, magical, and religious purposes. It was practiced by a select few writers known as scribes, and
writing was generally unintelligible to the common people. The symbols themselves broadly fall into two categories, word
signs, which are symbols that represent a single
meaningful concept... Woman showing mouth: Back. Apple. Brit: ...and sound signs. These symbols represent chunks of sound. Dark haired woman: Be. Boy in red shirt: Ze. Girl in black shirt: Ton. Boy in green shirt: Ca. Brit: Now, the total
number of different symbols in common use was over 1,500, and if you divide all
of these symbols into word signs versus sound signs, we find a much smaller
portion of sound signs. There were around 140
sound signs, and of these, only 33 represented distinct consonants, a tiny fraction of all
of the symbols in use. At the time, the medium
used to store the symbols was primarily rock, and this was ideal for durable inscriptions, allowing messages to travel into the future. Mobility was not a main concern when communicating messages in this way. However, a new physical
medium for storing symbols was emerging at the time. Along the Nile, silt
deposits left from flooding made the surrounding
land extremely fertile, and one of the many crops they grew was Papyrus. It could be sliced into strips, and these strips were then soaked, (bell tones) Brit: and weaved together
and finally pressed, allowing the natural
sugars to act as glue. (bell tones) Brit: After several
days, it dried and formed an almost weightless tablet. (bell tones) Brit: This medium was
ideal for sending messages across greater spaces,
rather than the more durable inscriptions focused on time. This shift toward cheap portable mediums for storing symbols
coincided with the spread of writing into the hands of more people for new purposes. Gradually, as people began to write more on Papyrus, the symbols evolved to suit more rapid writing. This lead to a cursive
script, known as Hieratic. For example, here is the world's oldest surviving surgical document. It's written in Hieratic script, dated to around 1600 BC. These symbols were based on Hieroglyphics, however the pictures were simplified to match the swiftness of
writing in ancient shorthand. Also, the number of common symbols in use began to shrink down to around 700. By escaping from the
heavy medium of stone, thought gained lightness. A marked increase in writing by hand was accompanied by the secularization of writing, thought, and activity. This lead to a new writing
system called Demotic around 650 BC, which was
devised specifically to facilitate the ease of rapid writing. For example, this text is known as a marriage contract, and
is one of the earliest known examples of Demotic script. It's interesting to
notice that there was a dramatic reduction again
in the total number of symbols with this new system, roughly 10 percent of the total number of symbols used before. This was due to a shift towards the use of phonetic symbols, or sound signs... Dark haired woman: Be. Boy in red shirt: Ze. Girl in black shirt: Ton. Boy in green shirt: Ca. Brit: over word symbols, or meaning signs. And the new simplicity meant that children could be taught to write at a young age. We see this same pattern
in other cultures. Let's return back to 3,000
BC and visit Mesopotamia, where Cuneiform was the writing system originally used for fiscal
purposes, as it was a powerful method of tracking debt and surplus commodities before the invention of coins. For example, here is a document recording someone's stock of animal
hides, and this type of writing evolved to suit other needs. For example, this tablet
contains a recipe for bread and beer, and here's another tablet which contains a legal document. Originally, the writing system was used by the Sumerians, and there were over 2,000 different symbols in use, which could also be divided into word signs and sound signs. Akkadian gradually replaced Sumerian as the spoken language, and here is the earliest known
dictionary from 2,300 BC. It contains word lists
in Sumerian and Akkadian, and this was discovered in modern Syria. When it was adapted by the Akkadians and fitted to their
language, they reduced the number of symbols to around 600, and they did this again by moving towards sound signs. Again, we see both
Hieroglyphics and Cuneiform using several hundred
sound symbols in their more evolved forms, and
as writing systems escaped their formal usage and spread to more and more people,
the soil was ripe for the invention of a brand new writing system for the people. One of the great discoveries
in the history of writing is dated to around 1700 BC. The Sinai inscriptions were found in the Sinai peninsula, and they
were about 20 feet apart. This was important because
each picture denotes a consonant sound, and
no word signs are used. When sounded out correctly, the letters would produce words in ancient Semitic. Although not fully
deciphered, this message appears to be of the form, ""name, rank and prayer"". The two words deciphered
are ""Chief"" and ""God"". This innocent example was part of a writing revolution,
creating meaning by merging sound signs only. Woman showing mouth: A. Ack. Back. Ba. Pl. Apple. Brit: By 1,000 BC, we arrive at the Phoenician Alphabet,
which emerges along the Mediterranean used by the Phoenicians who are a maritime trading culture. The Phoenician writing system was based on the principle that one sign represents one consonant, and it was used to write a northern Semitic language, containing only 22 symbols total. The symbols chosen to
represent these sounds were often borrowed from
Hieroglyphic pictures, so that the letter's name began with the letter's sound. For example, mem, which stood for water, became what we know of as the letter M. Aleph, which stood for
ox, became what we know of as the letter A, but the
secret power of this alphabet, unknown to it's inventors,
was that it did not need Semitic speech in order to work. Dark haired woman: D. Boy in green shirt: Ah, eh, i, ou, oo. Brit: With modest
adjustments, these miraculous letters would be fitted
to diverse tongues of Europe, India, and southeast Asia, Boy in red shirt: Za. Brit: carrying literacy around the globe. Boy in red shirt: Ma. Da. Brit: This was the source of the Greek and later Roman alphabet
forms we know today. The idea of an alphabet
is a powerful method for transmitting and storing information. Realize, it doesn't really
matter what the symbols are or how you choose them,
or even what language it's in, information is just a selection from a collection of possible symbols. And, over time, we have
always looked for faster, more efficient ways of
transporting information across greater and greater spaces, and when we try doing
this using new mediums, which travel faster than
any human or animal, an engineering problem presents itself. (microphone feedback) Voiceover: Hello? (microphone feedback) Voiceover: Hello? (microphone feedback)"
Computer science,Information theory,Ancient information theory,The Rosetta Stone,"Rosetta Stone, 196 B.C.E., granite, 114.4 cm x 72.3 x 27.9 cm or 45 x 28.5 x 11 inches, Ptolemaic Period (British Museum, London). Speakers: Dr. Beth Harris and Dr. Steven Zucker. Created by Beth Harris and Steven Zucker.","[MUSIC PLAYING] SPEAKER 1: We're in
the British Museum, and we're looking at one of
the most important objects in the collection,
the Rosetta Stone. SPEAKER 2: It's in a
glass case, surrounded by people who are
taking pictures of it. SPEAKER 1: People love it. SPEAKER 2: They do. And there's gifts in
the gift shop about it. SPEAKER 1: You can get your
own little Rosetta Stone. SPEAKER 2: Exactly! SPEAKER 1: You can get
Rosetta Stone posters. SPEAKER 2: On a mug. SPEAKER 1: I think you can
get a doormat Rosetta Stone. SPEAKER 2: Yeah. SPEAKER 1: But the stone
itself is historically incredibly important. It allowed us for the first
time to be able to understand, to be able to read, to be able
to translate hieroglyphics. SPEAKER 2: Hieroglyphics
was the written language of the ancient Egyptians. And until the mid 19th
century, we really didn't know what it said. SPEAKER 1: The language
itself is pictorial. And actually that led to
one of the real confusions, because they think that
early archaeologists believed and linguists believed
that the pictures they could see--
you can make out birds and snakes in various
different kinds of forms-- actually referred in some way to
a specific thing in the world. SPEAKER 2: Right. So if you saw a bird, it
somehow referred to a bird. SPEAKER 1: And in fact,
that's not the case. SPEAKER 2: Right. SPEAKER 1: This is a far
more sophisticated language. SPEAKER 2: And the
Rosetta Stone was really what helped them to understand
that Egyptian hieroglyphics are not pictorial. They're not pictographs. They're actually phonetic. So all those things that
look like pictures actually represent sounds. And that's how they were
able to finally figure out and translate ancient
Egyptian hieroglyphics. SPEAKER 1: And the reason
we were able to do that is because this stone said
the same statement three times in three different languages. So the three languages
are ancient Greek, which is down at the bottom. Now, that was the language
of the administration. That was the language
of government. And the reason for that is
because Alexander the Great had conquered Egypt and had
set up this sort of Greek rule in this Hellenistic era,
and that maintained itself in ancient Egypt. SPEAKER 2: Let's remember,
we're talking about 200 BC here. SPEAKER 1: Which
is actually getting close to the end of the life
of hieroglyphics as well. It would last for
another few hundred years before it died out completely. So this is really the tail
end of this 3,000-year-long language. SPEAKER 2: So the
middle section is Demotic, which actually means
the language of the people. And it was this common
language used by the Egyptians. SPEAKER 1: And the top, of
course, was the sacred writing. This was hieroglyphs. SPEAKER 2: Right. SPEAKER 1: And that
was the language that we really couldn't read. SPEAKER 2: Until we
had the Rosetta Stone, and we could see within the
writings of the Rosetta Stone cartouches, which held
the names of the rulers. Cartouches are a
kind of oblong shape that contains the
name of the ruler. SPEAKER 1: In this case,
that would be Ptolemy V. SPEAKER 2: And by
recognizing that ruler's name in these three
different languages, we found a way to begin
to unlock hieroglyphics. SPEAKER 1: Now, that
would take decades. It was an incredibly
difficult task. SPEAKER 2: And we
haven't even talked yet about how this was found. Napoleon has his army in Egypt,
and Napoleon's brought with him some what I guess
what we would call sort of archaeologist types. And one of those people
who accompanied Napoleon found or came across
the Rosetta Stone. SPEAKER 1: It was
being used as a part of the foundation
of a fort, in fact. SPEAKER 2: And of course,
it would have originally been erected in a temple or
near an ancient Egyptian temple. SPEAKER 1: And I suppose it's
important to say that this is the bottom portion of a much
larger stele, or sort of stone tablet, that would
have been quite tall. SPEAKER 2: So Napoleon
took it back-- SPEAKER 1: Except hold on
a second, because we're not in the Louvre. We're in London in
a British Museum. So how does that work? SPEAKER 2: Well, the
British defeated Napoleon and brought back the stone. And a year or two later,
I think 1801 or 1802, it was brought to
the British Museum, and it's been here ever since. SPEAKER 1: Well, it's clearly
still extremely popular. [MUSIC PLAYING]"
Computer science,Information theory,Ancient information theory,Source encoding,Introduction to coding theory! Created by Brit Cruise.,"we begin with a problem Alice and Bob leave in tree forts which are far apart
with no line of sight between them and they need to communicate so they decide to run a wire
between the two houses they pull a wire tight and attach it tin can to each end allowing them to send their voices
faintly along the wire however there is a problem noise whenever there is a high wind it becomes impossible to hear
the signal over the noise so they need a way to increase
the energy level of the signal to separate it from the noise this gives bob an idea they can simply pluck the wire which is much easier to detect
over the noise but this leads to a new problem how do they encode their
messages as plucks? well since they want to play
board games across a distance they tackle the most common messages first the outcome of two dice rolls in this case the messages they are sending can be thought of as a selection
from a finite number of symbols in this case the 11 possible numbers which we call a discrete source at first they decide to use
the simplest method they send the result as
the number of plucks so to send a 3 they send three plucks 9 is nine plucks and 12 is twelve plucks however they soon realize that this
takes much longer than it needs to from practice they find that their
maximum plucks speed is two plucks per second any faster and they will get confused so two plucks per second can be
thought of as the rate or capacity for sending information
in this way and it turns out that the most
common roll is a 7 so it takes 3.5 seconds
to send the number seven Alice then realizes
they can do much better if they change their coding strategy she realizes that the odds of each number
being sent follow a simple pattern there is one way to roll a 2,
two ways to roll a 3 three ways to roll a 4,
four ways to roll a 5 five ways to roll a 6 and six ways to
roll a 7, the most common and five ways to roll an 8 four ways for a 9 and so on back to one way for a twelve and this is the graph showing the
number of ways each result can occur and the pattern is obvious so now let's change the graph to number
of plucks versus each symbol she proceeds by mapping the most
common number, seven to the shortest signal one pluck she then proceeds to the next
most probable number and if there is a tie
she picks one at random in this case she selects
six to be two plucks and then eight to be three plucks and then back to five to be four plucks and nine as five plucks and back and forth until we reach 12 which is assigned to 11 plucks now the most common number seven can be sent in less than a second a huge improvement this symbol change allows them to send
more information in the same amount of time on average in fact this coding strategy
is optimal for this simple example in that it impossible for you to come up
with a shorter method of sending two dice rolls
using identical plucks however after playing with the
wire for some time Bob hit on a new idea"
Computer science,Information theory,Ancient information theory,Visual telegraphs (case study),The history of visual telegraphs. Created by Brit Cruise.,"- [Narrator] The signal fire
is no doubt one of the oldest technologies for transmitting information. Perhaps dating back to the
first controlled use of fire. It allows one person to
influence another's belief state across a distance. Because, with the ability to
notice either the presence or absence of something, we
are able to switch between one of two belief states. One difference, two states. And if we look back in
history, we find that this was of great importance to military powers, which all rely on
effective communications. And a great place to begin
is with the Greek myth of Cadmus, a Phoenician prince
who introduced the phonetic letters to Greece. The Greek alphabet borrowed
from the Phoenician letters, along with light and cheap papyrus, affected the transfer of power from the priestly
to the military class. And Greek military history
provides clear evidence of the first advancements
in communications stemming from the use of signal torches. Polybius was a Greek
historian born in 200 BC. He wrote the histories,
which is a treasure trove of detail related to the
communication technologies of the time. He writes, ""The power of
acting at the right time ""contributes very much to
the success of enterprises. ""And fire signals are the
most efficient of all devices ""which aid us to do this."" However, the limitation of a
signal fire was clear to him. He writes, ""It was possible
for those who had agreed ""on this to convey information that, say, ""a fleet had arrived, but
when it came to some citizens ""having been guilty of
treachery, or a massacre having ""taken place in town, things
that often happen but cannot ""all be foreseen, all such
matters defied communication ""by fire signal."" A fire signal is great
when the space of possible messages is small. Such as enemy has arrived or not arrived. However, when the message
space, which is the total number of possible messages,
grows there was a need to communicate many differences. And in the histories, Polybius
describes a technology developed by Aeneas Tacticus,
one of the earliest Greek writers on the art of war
from the fourth century, BC. And his technology was
described as follows. ""Those who are about to
communicate urgent news to ""each other by fire signal
should procure two vessels ""of exactly the same width and depth. ""And through the middle should
pass a rod graduated into ""equal sections, each
clearly marked off from the ""next, denoted with a Greek letter."" Each letter would correspond
to a single message in a look-up table which contained
the most common events that occur in war. To communicate they
would proceed as follows. ""First the sender would
raise his torch to signal ""he had a message. ""Then receiver would then
raise his torch signalling ""he was ready to receive it."" Then the sender would lower
his torch and they would both begin to drain their
vessels from a board hole of equal size at the bottom. Now, when the event is
reached, the sender raises his torch to signal that they
should both stop the flow of water. This results in equal water
levels, denoting a single shared message. This ingenious method
used differences in time to signal messages. However it's expressive
capability was limited, mainly due to it's speed. Polybius then writes of
a newer method originally devised by Democritus,
which he claims was, ""Perfected by myself and
quite definite and capable ""of dispatching with
accuracy every kind of urgent ""message."" His method, now known
as the Polybius square, works as follows. Two people separated by a
distance each have 10 torches separated into two groups of five. To begin, the sender raises
a torch and waits for the receiver to respond. Then the sender lights a
certain number from each group of torches and raises them. The receiver then counts
the number of torches lit in the first group. This number defines the row
position in an alphabetic grid they share. And the second group of
torches signifies the column position in this grid. The intersection of the row
and column number defines the letter sent. Realize this method can be
thought of as the exchange of two symbols. Each group of five torches is a symbol, which was limited to five differences, from one to five torches. Together these two symbols
multiply to give five times five equals 25 differences. Not five plus five. This multiplication
demonstrates an important combinatorial understanding in our story. It was explained clearly
in a sixth century BC Indian medical text
attributed to Sushruta, an ancient Indian sage, as follows. ""Given six different spices
how many possible different ""tastes can you make?"" Well, the process of making
a mixture can be broken down into six questions. Do you add A, yes or no? Do you add B? C? D? E? And F? Realize this multiplies
into a tree of possible answer sequences. Two, times two, times two, times two, times two, times two equals 64. 64 different sequences of
answers are therefore possible. Realize that given N yes or no questions, there are two to the
power of N possible answer sequences. Now in 1605 Francis Bacon
clearly explained how this idea could allow one to send
all letters of the alphabet using only a single difference. With his bilateral cipher,
Bacon wrote famously, ""The transposition of two
letters by five placings ""will be sufficient for 32 differences. ""For by this art a way
is opened whereby man may ""express and signify the
intentions of his mind ""at any distance of place
with objects which are ""capable of a two fold difference only."" This simple idea of using
a single difference to communicate the alphabet
really took flight in the 17th century due to the
invention of the telescope by Lippershey in 1608 and Galileo in 1609. Because quickly the magnification
power of the human eye jumped from three to eight
to 33 times and beyond. So the observation of a single
difference could be made at a much greater distance. Robert Hooke, an English
polymath interested in improving the capability of
human vision using lenses, ignited progress when he told
the Royal Society in 1684 that suddenly quote,
""With a little practice, ""the same character may
be seen at Paris within a ""minute after it hath
been exposed at London."" This was followed by a
flood of inventions to pass differences more effectively
across greater distances. One technology from 1795
perfectly demonstrates the use of a single difference to
communicate all things. Lord George Murray's shutter
telegraph was Britain's reaction to the Bonaparte's
threat to England. It was composed of six
rotating shutters which could be oriented as either open or closed. Here each shutter can be thought
of as a single difference. With six shutters we have six
questions, open or closed? Providing us with two to the power of six, or 64 differences. Enough for all letters, digits, and more. Now realize that each
observation of the shutter telegraph can also be thought
of as the observation of one of 64 different paths
through a decision tree. And with a telescope it was
now possible to send letters at an incredible distance between beacons. However, an observation in
1820 lead to a revolutionary technology, which forever
changed how far these differences could travel
between signalling beacons. This ushered in new ideas
which launched us into the information age."
Computer science,Information theory,Ancient information theory,Electrostatic telegraphs (case study),Long before the internet people thought about sending information along wires using static electricity. Created by Brit Cruise.,"Around 600 BC Thales of Miletus widely regarded as the first Greek
philosopher. As he was the first to give a purely natural
explanation of the phenomena he observed. A key
observations he made was that certain stones such as amber when rubbed against fur would exhibit a strange property. The amber seem to emit an
invisible force which would attract small fibers. And he assumed that this rendered amber magnetic another force he observed when playing with lodestone which are naturally-occurring magnets.
Many after him observed that the contact or friction with fur seem to
create an imbalance. Something was pulled from the fur and transferred onto other objects. Now, not only did this result in a small
attractive or repulsive force but also in the potential for shocks to
occur. Once the discharge occurred the force
disappeared. So the shock with some form of discharge which reversed the imbalance created by the friction. Throughout history we're also fascinated
with lightning bolts. Nature's most passionate displays of
power and aggression. Most cultures assume this was a divine force outside the reach of human hands and was therefore reserved for the gods. Up until the 17th century, our
descriptions of it varied from an invisible, intangible, imponderable agent or even threads of syrup which along gate and contract. And it was Benjamin Franklin, who in 1752 set out to prove that there is a connection between lightning and these tiny shocks due to friction. In a famously dangerous experiment done alone with his son, he let a kite
into a thunderstorm and near the bottom where the thread was wet, he tied an iron key and after some time he brought his knuckle up to the key experienced the series of small shocks identical to the ones created by contact with fur. This showed that indeed, lightning was simply the same thing is these household shocks but on a massive scale. And at this time people have begun to divide materials into two categories: one were objects which would allow or
accept discharge such as gold or copper which we call
electrical conductors. Interestingly these materials are also
generally good at conducting heat. And number two were objects which would not allow this discharge such as rubber or electrical insulators. These materials also seem to insulate
the transfer of heat and we also began trying to measure this force that Thales had encountered. One way to do this was to suspend the piece of spongy plant called the pith ball from a thread and when we rubbed an insulator against
fur and brought it near the pith ball it would pull on it causing a deflection. If we had more objects we noticed deflection increased due to a greater pulling force. We also noticed that the shape of insulators made a difference. Large thin insulators seem to exhibit a
much stronger force. (soft bell ring) And amazingly, it was found that
conductors such as copper wire would transmit this pulling effect over a distance. This was demonstrated
by running a long wire between the pith ball in the charged
insulator. When the object was brought near the wire it pulled through the wire and deflected the pith ball instantly. When we later touched the
wire with our finger discharge occurs and the pulling stops and the ball is released. Immediately people began speculating that this could be the future optical telegraph. In 1774
French inventor George Louis Le Sage was one of the first one to record actually set up this idea. He sent messages through an array of 26 wires each wire representing a letter of the
alphabet. When a discharge occurred at one end the pith ball would move at the other. The trouble with this telegraph was that it only extended between the two rooms of his house. The power the deflection was small and difficult to work with. Though at the time people were
investigating techniques for generating larger charge differences in order to amplified a force involved.
One improvement popularized by Alessandro Volta one year later was an easy wave generating discharges on demand. It was based on the idea that a charged insulator could induce or transfer the charge onto a nearby conducting plate. One needed to merely bring the metal plate close to the insulator which would pull on the charge
distribution in the metal plate resulting in an imbalance or electrical
tension in the metal plate. Then one could bring their finger to the
plate in it discharge would occur then the plate is pulled away using
insulating handle and an excess charge would remain trapped in the plate to play could then be discharged at will
simply by touching it to a conductors such as a finger and amazingly this process can be
repeated many times without recharging the insulating plate. We could then generate many small
discharges at will. And by now Benjamin Franklin was focused
on finding out how to trap or store up these discharges. At this time he still assumed that electricity with some sort of invisible fluid Since we knew it could travel through water so we assume that water inside in insulator could hold
electricity. What we now call the Leyden jar was a glass jar with water inside and a metal probe
running at the top. Franklin also wrapped the outside in a
conductive metal. When he brought a charge conductor
towards the top probe a discharge would occur and stay trapped in the jar. More importantly was that the jar
could be charged multiple times. Each spark would amplify the charge
separation for electrical tension inside the
jar. A good analogy is to think of the jar as a balloon and each discharge as a short jolt water. And after hundreds of iterations the tension become massive. And to release the charge he simply touch the outside conductor to the probe. A large discharge occurred. Franklin improved the design over time eventually realizing that the charge was
not stored in the water but glass. The water was merely a
conductor path from the probe to the jar. Today we would call the Leyden jar a capacitor or charge storing device. And when he
chained many jars together he found he could increase the capacity even more and
release deadly volt of electricity. And over the years people focused on more effective ways a building up charge using friction machines which could then be
stored in capacitors and relief the spectacular displays of
man-made lightning. And over the next 50 years people tried to design systems for sending
sparks across greater distances using longer
wires and more powerful discharges. However sending electrostatic discharges as a communication method seemed clumsy archaic and was no improvement over the existing optical telegraph of the day. They were widely ignored by government and industry. Though the tides were rising. An electric revolution was just around
the corner."
Computer science,Information theory,Ancient information theory,The battery and electromagnetism,The key technologies in our story. Created by Brit Cruise.,"Consider the following experiment You have two pieces of metal: copper and zinc which you connect to conducting wires and you then submerge the metals in an electrolyte in this case vinegar You will observe that bubbles will form around the zinc but not on the copper. The metal seemed dissimilar in this way and if you then connect the two wires holding the metals, something changes. Tiny bubbles begin to form around the copper terminal. It seems as though something is being pulled from the zinc through the wire allowing a reaction to occur on the copper side and it turns out this is a flow of electrical charge as electrons are pulled away from the zinc towards the copper through the conductive path in the wire. Think of this blow as the result of a charge imbalance or electrical pressure between the two metals as compared to the instantaneous discharge observed with static electricity experiments. Towards the end of the 18th century Alessandro Volta had been investigating this effect. More importantly he found that chaining these cells together would amplify this flow of charge. And by 1800 he simplified things even further removing the jar which provided more electrolyte than was actually needed. He writes, ""- A few dozen small round disks of copper, [pieces of coin for example], and equal number of plates of zinc. - I prepare circular pieces of spongy matter capable of retaining water - I continue coupling a plate of copper with one zinc and always in the same order and interpose between each of these couples a moistened disk. This continues until I have a column as high as possible without danger of it falling."" This is known famously as the voltaic pile, the first battery in history to provide a continuous flow of electrical charge, or current. More cells resulted in an increased electrical pressure at the two ends and electrical pressure was an early term for what we now call voltage after Volta. Now if the two leads of a voltaic pile were brought into direct contact, a series of shocks could be observed. Now at first the utility of electric current as a communication method was not immediately obvious, aside from faint sparks and bubbles. One idea was to use the presence of bubbles to signal letters and the Bubble Telegraph used this method though it involved 26 different circuits, one for each letter and it was based on the fact that the battery providing the current can be placed at a distance away from the jars containing the leads creating the bubbles. An inventive although clumsy system which was never adopted. But very soon everything changed after a famous demonstration in 1819. It was found that if we simply pass a wire near a compass and connected to a battery as soon as the wire made contact with the battery the needle jumped without any physical contact. The only explanation was that the current carrying wire was creating a temporary magnetic field. This was followed by a series of tasks to figure out the direction of this field first we assumed it was pointing along the wire with the current or perhaps emanating outwards from the wire as heat would travel. But eventually it was deduced that it must be traveling around the wire in perpendicular circles, so a loop of wire would create a magnetic field which points through the center of the loop and around the outside. This lead to the galvanometer which was designed to detect and measure electrical current and it was just simply a coil of wire with a compass suspended in the center. Now when electric current was applied to the coil, a magnetic field would push through the middle of the coil and around the outside so the needle would always point perpendicular to the direction of the force which was balanced on either side of the needle, and the stronger the current the stronger the deflection of the needle. And by 1824 William Sturgeon demonstrated a way to increase the strength of this field even more, simply by wrapping a coil of wire around a piece of iron such as a nail the magnetic force could be amplified because iron seemed to be a better medium for supporting the formation of magnetic fields. We call this ""permeability"" and by wrapping the wire many times the strength of the field could be amplified thousands of times and this is known as an ""electromagnet"". So suddenly it was possible to create magnetic fields which could move needles with precision and force using electric current applied at a distance using a long loop of wire and a strong battery. At the time our understanding of information was in its infancy. People were thinking about information and a message as the number of letters in a message so the goal was intuitive: who could come up with the fastest way to transmit letters and whoever had the fastest system would therefore reduce the cost per message for the sender using this system. And a gold mine was waiting for whoever got there first."
Computer science,Information theory,Ancient information theory,Morse code and the information age,Electric Telegraphs and developments leading to Morse Code. Created by Brit Cruise.,"- [Narrator] In 1832,
mathematician Carl Gauss and physics professor
Wilhelm Weber designed a system which allowed them to communicate at a distance while they
worked on their experiments, connecting the observatory
with the physical laboratory. They solved a really important problem which was more of a puzzle, how to send all letters of
the alphabet using one circuit or a line. And their system used a
galvanometer since it was known that electric current passing
through a coil creates a magnetic field pointing
through the center of the loop, which could deflect a needle. But instead of merely moving
a needle at a distance, their system used a switch which
could reverse the direction of current instantly. This would cause the magnetic
field around the coil to reverse and the needle
would deflect either to the right or left depending
on the direction of current, thus giving them two different
signaling events or symbols, right, or left deflection. Most importantly, he
assigned shorter symbols for the most common letters, such as A was a single right deflection. And E was a single left deflection. And he used the longer codes
for less common letters, such as K, which was
three right deflections. And at the time the speed of transmission was around nine letters per minute. All the needle telegraphs
which followed suffered from a similar limitation. And it was an engineering problem. The signaling rate was slow. Now the signaling rate was the number of deflections per minute, which could be accurately
transmitted and received. And if you squish
signaling events together, the receiver would get
confused due to jitter, resulting in errors, similar to how sustain notes
on a piano will bleed together and become less recognizable
if you play rapidly. And over time, the signaling rate was
incrementally improved. One improvement was to add
a small permanent magnet to the outside of the coil. This helped pull the needle
back to neutral position after each deflection. And these designs led to a wide range of needle telegraphs which
were deployed across Europe. The Electric Telegraph Company was the first public telegraph company. It was formed in 1846
after its owners purchased the key needle telegraph
patents at the time. But the speed of these
various needle telegraphs never surpassed around
60 letters per minute. As each needle couldn't signal much faster than one deflection per second. And initially the company
build customers based on single messages, which
could hold up to 20 words, which is about the length of a tweet. And by 1848, the cost of
sending a single message from London to Edinburgh was 16 shillings. And this was around one week salary for say a shop owner at the time. So this technology was
initially out of the hands of common people. In the United States,
the commercialization of the telegraph was led by a portrait painter named Samuel Morse, who had followed development of the needle telegraphs in Europe. Morse's important because he focused on speeding up the rate at
which letters could travel. He did away with needles. And in 1938, he initially
submitted a patent based on the idea that electric
current could either flow or be interrupted, and
interruptions could be organized to create meaning. Though his designs on how to produce these interruptions were
complicated involving a convoluted system of gears, levers, and electromagnets. However, his system was greatly simplified after his collaborations with Albert Vail. This led to an iconic
piece of user interface, the simple spring loaded lever, or key, which can be controlled
with the tap of a finger. And on the receiving end
was a spring loaded lever that could be pulled and released
by a strong electromagnet. To create a difference akin
to the left, right deflection, he varied the length of a key
press, or the pulse width, the closure of a switch
for a very short time was called a dot. And the dot can be thought
of as the basic unit of time in Morse code, and the closure of the
switch for three units of time represented a dash. (beeping) - Spacing, exactly right. Very small tight spaces
between the dits and das in a character. Di-da-dit. Di-da-di-dit. - [Narrator] And this was
the source of difference in their coding strategy. Starting with an initial dot
or dash left or right branch, which then leads to another
dot or dash and so on. And this scheme assigned
shorter symbol sequences to more probable letters based
on the letter frequencies, which could be tabulated from books. So nodes high up in the
tree, such as a single dot, represented E, a single
dash represented T. And as we move down the tree,
we place less common letters. And after a letter, this system
inserts a three unit pause. - [Instructor] Spacing between
the characters in a word or group is uniform too, but longer. (beeping) - [Narrator] It's important to realize that the meaning of these
messages was intertwined with the timing of them. - Are you wondering if proper spacing is really so important, or is it no more than an extra refinement? A nice thing to do like neat handwriting. If you think so you're
wrong and I'll show you why. (beeping) Dit for dit, and da for da, they match. Only the spacing makes the difference between one word and the other. - [Narrator] So to send the word Paris, we would first need to think
of it as P space, A space, R space, I space, S. The signaling rate of the system was directly related to
the tempo of the signal and music analogies were
used inside training videos. - What he was sending what is
the standard test word, Paris. And there you are. Each peak is a dit or a
da, each valley, a space. This is excellent sending. Uniform and rhythmic. This is an example of poor
hand sending, same word, Paris, but look at the difference. Irregular dits and das,
half hazard spacing, no uniformity, no rhythm. - [Narrator] Amazingly,
it was the simplicity of this keying system, which
made it much faster than any of the buttons and cranks employed by the needle telegraphs in Europe. The letter rate jumped
to 135 letters per minute or more with trained operators. And on May 24th, 1844, the first successful
transmission was the message, what hath God wrought. And the next day it was reported
by the New York Tribune. That quote, ""the miracle
of annihilation of space ""is at length performed."" Consider that at the time 90% of messages were still transported by horseback. Immediately, this technology
was becoming critical to the success of military
newspapers, financial traders, crime fighting, any business that relied on information now relied on
the telegraph and Morse code. By 1900, the prices had dropped
to 30 cents per message, as traffic surged to over 63.2 million
messages sent that year. As people began using this system, they naturally thought
of ways to save money. This led to popular code books, that mapped words to common sentences. For example, blade would
actually mean please name and reserve for myself and family the following accommodations. The telegraph companies frowned upon this as they were happily charging
people to be verbose, more letters equals more profit. It was now clear that
information was an elastic term and a specific meaning was needed. And obvious question remained unanswered, if you are selling information,
no matter the system, how should you quantify
it to be fair to everyone? Number of letters as a measure of information would no longer suffice."
Computer science,Information theory,Modern information theory,Symbol rate,Introduction to Symbol Rate (Baud). Created by Brit Cruise.,"Voiceover: How is that we
should measure information in a way that applies to
any communication system you can think of, human, animal or alien.
(dolphin squeaks) Well, let's return to
the late 19th century, where at the time we were
focused as we are today on speed. (single handed piano music) And one goal to improve
speed was to design a machine which allowed operators to input letters, which we can think of as
primary symbols and have the machine automate
(Morse Code signals) the lower-level signaling events, such as pulses of electricity, we can call secondary symbols. And machines can be driven
by some clock source allowing it to generate a
precise and rapid pulse stream, which presumably would run much
faster than any human hand. And one great example of this was the Baudot Multiplex System. And the design was put
into service in 1874. And it built off the same conceptual ideas we've seen in the shutter telegraph. It consisted of 5 keys which could be played in any combination. Think of it as a chord.
(single hand piano music) Each combination would
represent a unique message with five notes each either
on or off, you can play two to the power of five
or 32 different chords. The code assigned the 32
different chords to each letter of the alphabet with
the leftovers used for carriage returns, new line and spaces. So the operator would literally
play letters and their machine would automatically output a pulse stream representing the letters. Voiceover: Like this, for letter ""T."" Voiceover: Or like this for letter ""R"". Voiceover: Or like this for letter B. So we have an output signal
containing various combinations of DC Impulses, a signal
that accurately represents the message typed on the teletypewriter. (telegram output dinging) The iambic counter, the
mechanical nerves of the system, change words to holes on
tape, and the holes on tape to electrical impulses
speeding over the wires. (soft thoughtful music) Voiceover: Notice at the
lowest level, this system is exchanging either the presence
or absence of electrical current in a sequence
divided using a clock. So, how fast can our internal clocks run? The limiting speed was not the clock. Then and today, the
speed of transmission was physically limited by the minimum spaces between these impulses or the pulse rate. And this problem plagued
engineers who were testing underground submarine cables using the existing Morse Code system. And it's similar to an
echo or a sustained note. If one sends dots too fast
over a long undersea circuit, they will run together
at the receiving end. Because the symbol we receive
at the far end of the circuit will be a slightly longer smoothed out rise and fall, not an exact replica. And sending pulses too fast, results in inter-symbol interference. This occurs, for example,
when the longer flow of a current bleeds into the next time division and perhaps reverses a zero to a one. So even if we are automating
the detection of these current levels, there is a
fundamental limit to how far we can squeeze two pulses together. And this is the same problem
Alice and Bob ran into with their string communication system, (snow rustling underfoot)
(heavy breathing) which we called the maximum pluck speed. If they plucked any faster
than two plucks per second, (plucked string reverberates) they noticed they started to bleed
together and they got confused. (Slow string music) So this is called the symbol rate. Remember, a symbol can be broadly defined as the current state of
some observable signal, which persists for a fixed period of time. Whether you are using fire, 
(crackling) sound, 
(single string plucked) electrical current,
anything, a signaling event is simply a change from
one state to another. So the symbol rate is the
number of signaling events which can be squeezed
together in one second. (Morse Code signals)"
Computer science,Information theory,Modern information theory,Introduction to channel capacity,Introduction to Channel Capacity & Message Space. Created by Brit Cruise.,"Voiceover: It also became clear that there was one other way to increase the capacity of a communication system. We can increase the number of different signaling events. For example, with Alice and Bob's string communication system, they soon found that
varying the type of plucks allowed them to send
their messages faster. For example, hard,
medium versus soft plucks or high-pitch versus low-pitch plucks by tightening the cable different amounts. This was an idea implemented
by Thomas Edison, which he applied to the Morse code system, and it was based on the idea that you could use weak
and strong batteries to produce signals of different strengths. He also used two directions, as Gauss and Weber did, forward versus reverse current and two intensities. So he had plus three volts, plus one volt, minus one volt, and minus three volt. Four different current values which could be exchanged. It enabled Western Union to save money by greatly increasing
the number of messages the company could send without building new lines. This is known as the Quadruplex telegraph and it continued to be used into the 20th century. But again, as we expanded the number of different signaling events, we ran into another problem. For example, why not send a thousand or a million different
voltage levels per pulse? Well as you may expect, fine grained differences
lead to difficulties on the receiving end. And with electrical systems, the resolution of these differences is always limited by electrical noise. If we attach a probe
to any electrical line, and zoom in closely enough, we will always find
minute undesired currents. This is an unavoidable
result of natural processes such as heat or geomagnetic storms and even latent effects of the Big Bang. So the differences
between signaling events must be great enough that noise cannot randomly bump a signaling event from
one type to another. Clearly now we can step back and begin to define the capacity of a communication system using these two very simple ideas. First, how many symbol
transfers per second? Which we called symbol rate. And today it's known simply as baud, for Émile Baudot. And we can define this as n where it's n symbol transfers per second. And number two, how many differences per symbol? Which we can think of as the symbol space. How many symbols can we
select from at each point? And we can call this s. And as we've seen before, these parameters can be thought of as a decision tree of possibilities because each symbol can be thought of as a decision where the number of branches depend on the number of differences. And after n symbols, we have a tree with s to the power of n leaves. And since each path through this tree can represent a message, we can think of the number of leaves as the size of the message space. This is easy to visualize. The message space is simply the width of the base of one of these trees. And it defines the total number of possible messages one could send given a sequence of n symbols. For example, let's say Alice sends Bob a message which consists of two plucks and they are using a
hard versus soft pluck as their communication system. This means she has the ability to define one of four
possible messages to Bob. And if instead they were using a system of hard versus medium versus soft plucks, then with two plucks, she had the ability to define one of, three to the power of two equals, nine messages. And with three plucks, this jumps to one of 27 messages. Now if, instead, Alice and Bob were exchanging
written notes in class, which contain only two
letters on a piece of paper, then a single note would contain one of 26 to the power of two, or 676 possible messages. It's important to realize now that we no longer care about the meaning applied to
these chains of differences, merely how many different
messages are possible. The resulting sequences could represent numbers, names, feelings, music, or perhaps even some alien alphabet we could never understand. When we look at a
communication system now, we can begin to think about it's capacity as how many different things you could say and we could then use the message space to define exactly how many differences are possible in any situation. And this simple yet elegant idea forms the basis for how information will be later defined. And this is the final step that brings us to modern information theory. It emerges in the early 20th century."
Computer science,Information theory,Modern information theory,Measuring information,How can we quantify/measure an information source? Created by Brit Cruise.,"Voiceover: Consider the
following, Alice and Bob have figured out how to transmit messages between their treehouses. At first, they used flames at night and shutters during the day. Then they used a wire, which
they plucked in different ways. Eventually, they electrified
this wire to send electrical pulses and were now at work on an experimental wireless method. The problem is, in order
to pay for their equipment, they needed money. So, they decided to offer their
service for a fee to others. And on the first day, Alice
had three new customers who wanted to transmit messages to their friends over at Bob's treehouse. The first customer wanted to
send a list of 10 coin flips, the second customer wanted
to send a six-letter word, and the third customer
wanted to send a poker hand. The question now is, how
much should she charge? Well, the price of a
message should depend on how long it takes Alice to transmit it. But how could she measure the length of different types of
messages using a common unit? To find out, let's play a game. Imagine you were Bob now, and you know Alice wants
to send you these messages, but all you can do is get the answer to yes or no questions you've arranged. Alice will answer by sending a sequence of zeros or ones, using some method of variation. Recall that all their
methods of transmission involved the exchange of differences. So, a one could be
represented by an open flame or an open shutter or an electrical pulse. No matter how they are manifested, we can simply call them binary digits, because a binary digit can have only one of two values, zero or one. So, let's say zero represents
a no and one represents a yes. Your challenge now is to always ask the minimum number of questions in order to determine the exact message. First, let's consider the coin flips. For each symbol, the sender, Alice, can be thought of as selecting one of two different
symbols, heads or tails. Now, how many questions do you need to ask to determine which she selected? One question such as, is
it heads, will suffice. For 10 flips, what is the
minimum number of questions? Well, 10 flips times one question per flip equals 10 questions or 10 binary digits to transmit this message. Next, let's consider the letters. For each symbol, the sender, Alice, can be thought of as selecting
one of 26 different symbols. Let's start with the simplest
message, which is one letter. How many questions are needed? Is it A? Is it B? Is it C? Is it D? And so on, but that is not the
minimum number of questions. The best you could do is ask questions which eliminate half of the possibilities. For example, the middle of the
alphabet is between M and N. So, we could first ask, is it less than N? If we receive a one, yes, we cut out half of the possibilities,
which leaves 13 left, and since we can't split a letter in half, we divide the possible symbols into sets of six and seven and
ask, is it less than G? We receive a one, which is yes, and now we are left with
six possible letters, and we can split them in half
and ask, is it less than D? We receive a zero, which is no, leaving us with three possible letters, and now we can pick a
side and ask, is it D? We receive a zero, which is no, and finally we are left
with two possibilities. We ask, is it E? We receive a no, and after five questions, we have correctly
identified the symbol, F. Realize that we will never need to ask more than five questions,
so the number of questions will be at least four and at
most five, and in general, two to the power of number of questions equals the number of possible messages, which we previously defined
as the message space. So, how can we calculate the exact average or expected number of questions, given a message space of 26? We ask the reverse question. Two to the power of something equals 26, and to answer these types of questions, we naturally use a logarithmic
function, base two, because log base two of 26 is the exponent two needs to be raised to, to give us 26, which is approximately 4.7. So, on average,
approximately 4.7 questions will be needed per letter at minimum, and since she wants to transmit
a word with six letters, Bob can expect to ask, at
minimum, 28.2 questions, which means Alice will need to send, at most, 29 binary digits. Finally, let's apply this formula to a new message, the poker hand. Well, for each symbol, the sender, Alice, can be thought of as selecting one of 52 different symbols, and in this case, the number of questions is the same as the number of times we
need to split the deck and ask Alice which pile it is in, until we are left with one
card, which we will find is usually six splits or
questions and sometimes five. But we can save time and
just use our equation. Log base two of 52 is approximately 5.7, since two to the power of
5.7 is approximately 52. So, the minimum number of questions on average is 5.7 per card. A poker hand contains five cards. So, to transmit a poker hand requires 28.5 questions on average. We are done. We now have our unit. It's based on the minimum
number of questions to define the message or the
height of the decision tree, and since Alice transmits this
information as binary digits, we can shorten this and
call our unit the bit, instead of binary digit. So, we have 10 coin
flips requires 10 bits, the six-letter word requires 28.2 bits, and the poker hand requires 28.5 bits. Alice then decides to
charge one penny per bit and begins collecting her fees. Now, this idea emerged in the 1920's. It was one of the more abstract problems that communication engineers
were thinking about. Ralph Hartley was a prolific
electronics researcher who built on the ideas of Harry Nyquist, both of whom worked at Bell
Labs after World War I, and in 1928, Hartley published
an important paper titled, The Transmission of Information, and in it he defines the word information using the symbol H, as H equals
N times the logarithm of S, where H is our information,
N is the number of symbols, whether they're notes,
letters, numbers, etc., and S is the number of
different symbols available at each selection, and
this can also be written as H equals the logarithm
of S to the power of N, and Hartley writes,
""What we have done then is to take as our practical
measure of information the logarithm of the number
of possible symbol sequences."" So, information is the
logarithm of the message space; however, realize that
throughout this lesson we have been assuming that the
symbol selection is random, convenient simplification;
however, we know that in reality most communication, such as
speech, isn't always random. It's a subtle mix of
predictability and surprise. We do not roll dice when we write letters, and it is this predictability
which can result in significant savings in
the length of transmission, because when we can
predict things in advance, we shouldn't need to ask
as many yes or no questions to define it, but how
could we formally model this subtle difference? This question brings us to
the key insight in our story. Can you think of what it might be?"
Computer science,Information theory,Modern information theory,Origin of Markov chains,Introduction to Markov chains. Created by Brit Cruise.,"Voiceover: When observing
the natural world, many of us notice a somewhat
beautiful dichotomy. No two things are ever exactly alike, but they all seem to follow
some underlying form. Plato believed that the true forms of the universe were hidden from us. Through observation of the natural world, we could merely acquire
approximate knowledge of them. They were hidden blueprints. The pure forms were only
accessible through abstract reasoning of philosophy and mathematics. For example, the circle he describes as that which has the distance from its circumference to
its center everywhere equal. Yet we will never find
a material manifestation of a perfect circle or a
perfectly straight line. Though interestingly, Plato speculated that after an uncountable number of years, the universe will reach an ideal state, returning to its perfect form. This Platonic focus on abstract pure forms remained popular for centuries. It wasn't until the 16th century when people tried to embrace the messy variation in the real world and apply mathematics to
tease out underlying patterns. Bernoulli refined the idea of expectation. He was focused on a method
of accurately estimating the unknown probability
of some event based on the number of times the event
occurs in independent trials. He uses a simple example. Suppose that without your knowledge, 3,000 light pebbles and 2,000 dark pebbles are hidden in an urn,
and that to determine the ratio of white versus
black by experiment, you draw one pebble after another, with replacement, and note how many times a white pebble is drawn versus black. He went on to prove
that the expected value of white versus black observations will converge on the actual ratio as the number of trials increases, known as the weak law of large numbers. He concluded by saying, ""If observations ""of all events be continued
for the entire infinity, ""it will be noticed that
everything in the world ""is governed by precise ratios ""and a constant law of change."" This idea was quickly extended as it was noticed that not only did things converge on
an expected average, but the probability of
variation away from averages also follow a familiar, underlying shape, or distribution. A great example of this is
Francis Galton's bean machine. Imagine each collision as
a single independent event, such as a coin flip. After 10 collisions or events, the bean falls into a bucket representing the ratio of left versus right deflection, or heads versus tails. This overall curvature, known
as the binomial distribution, appears to be an ideal form as it kept appearing everywhere any time you looked at the variation of a large number of random trials. It seems the average fate of these events is somehow predetermined, known today as the central limit theorem. This was a dangerous
philosophical idea to some. Pavel Nekrasov, originally
a theologian by training, later took up mathematics and was a strong proponent of the religious
doctrine of free will. He didn't like the idea of us having this predetermined statistical fate. He made a famous claim that independence is a necessary condition for
the law of large numbers, since independence just
describes these toy examples using beans or dice, where the outcome of previous events doesn't
change the probability of the current or future events. However, as we all can relate, most things in the physical world are clearly dependent on prior outcomes, such as the chance of fire or sun or even our life expectancy. When the probability
of some event depends, or is conditional, on previous events, we say they are dependent events, or dependent variables. This claim angered another
Russian mathematician, Andrey Markov, who
maintained a very public animosity towards Nekrasov. He goes on to say in a letter
that ""this circumstance ""prompts me to explain
in a series of articles ""that the law of large numbers can apply ""to dependent variables,"" using a construction which he brags Nekrasov cannot even dream about. Markov extends Bernoulli's results to dependent variables using
an ingenious construction. Imagine a coin flip
which isn't independent, but dependent on the previous outcome, so it has short-term memory of one event. This can be visualized
using a hypothetical machine which contains two cups, which we call states. In one state we have a 50-50 mix of light versus dark beads, while in the other state we
have more dark versus light. One cup we can call state zero. It represents a dark
having previously occurred, and the other state, we can call one, it represents a light bead
having previously occurred. To run our machine, we simply
start in a random state and make a selection. Then we move to either state zero or one, depending on that event. Based on the outcome of that selection, we output either a zero if it's dark, or a one if it's light. With this two-state machine, we can identify four possible transitions. If we are in state zero
and a black occurs, we loop back to the same
state and select again. If a light bead is selected, we jump over to state one, which can
also loop back on itself, or jump back to state
zero if a dark is chosen. The probability of a light
versus dark selection is clearly not independent here, since it depends on the previous outcome. But Markov proved that
as long as every state in the machine is reachable, when you run these machines in a sequence, they reach equilibrium. That is, no matter where you start, once you begin the sequence, the number of times you visit each state converges to some specific
ratio, or a probability. This simple example
disproved Nekrasov's claim that only independent
events could converge on predictable distributions. But the concept of modeling sequences of random events using states and transitions between states became known as a Markov chain. One of the first and
most famous applications of Markov chains was
published by Claude Shannon."
Computer science,Information theory,Modern information theory,A mathematical theory of communication,"Claude Shannon demonstrated how to generate ""english looking"" text using Markov chains. Created by Brit Cruise.","Voiceover: Shannon had
just finished developing his theories related to
cryptography and therefore was well aware that human
communication was a mix of randomness and
statistical dependencies. Letters in our messages were obviously dependent on previous
letters to some extent. In 1949, he published
a groundbreaking paper, ""A Mathematical Theory of Communication"". In it, he uses Markov models as the basis for how we can think about communication. He starts with a toy example. Imagine you encounter a bunch of text written in an alphabet of A, B, and C. Perhaps you know nothing
about this language, though you notice As
seem to clump together, while Bs and Cs do not. He then shows that you
could design a machine to generate similar-looking text, using a Markov chain. He starts off with a
zeroth-order approximation, which means we just independently select each symbol A, B, or C at
random, and form a sequence However, notice that this sequence doesn't look like the original. He shows then you could do a bit better with a first-order approximation, where the letters are
chosen independently, but according to the
probability of each letter in the original sequence. This is slightly better
as As are now more likely, but it still doesn't
capture much structure. The next step is key. A second-order approximation
takes into account each pair of letters which can occur. In this case, we need three states. The first state represents
all pairs which begin with A, the second all pairs that begin with B, and the third state all
pairs that begin with C. Notice now that the A
cup has many AA pairs, which makes sense, since
the conditional probability of an A after an A is higher
in our original message. We can generate a sequence using this second-order
model easily as follows. We start anywhere and pick a tile, and we write down our
output the first letter, and move to the cup defined
by the second letter. Then we pick a new tile, and repeat this process indefinitely Notice that this sequence
is starting to look very similar to the original message, because this model is capturing the conditional dependencies
between letters. If we wanted to do even better, we could move to a
third-order approximation, which takes into account groups of three letters, or ""trigrams"". In this case, we would need nine states. But next, Shannon applies
this exact same logic to actual English text, using statistics that were known for letters,
pairs, and trigrams, etc. He shows the same
progression from zeroth-order random letters to
first-order, second-order and third-order sequences. He then goes on and tries
the same thing using words instead of letters, and he writes ""the resemblance to ordinary English text ""increases quite
noticeably at each depth."" Indeed, these machines were producing meaningless text, though they contained approximately the same
statistical structure you'd see in actual English. Shannon then proceeds to define a quantitative measure of information, as he realizes that the
amount of information in some message must be tied up in the design of the
machine which could be used to generate similar-looking sequences. Which brings us to his concept of entropy."
Computer science,Information theory,Modern information theory,Information entropy,Finally we arrive at our quantitative measure of entropy. Created by Brit Cruise.,"Voiceover: Imagine two machines. They both output messages from an alphabet of A, B, C, or D. Machine One generates
each symbol randomly, they all occur 25% of the time, while Machine Two generates symbols according to the following probabilities. Which machine is producing
more information? Claude Shannon cleverly
rephrased the question. If you had to predict the next symbol from each machine, what
is the minimum number of yes or no questions
you would expect to ask? Let's look at Machine One. The most efficient way
is to pose a question which divides the possibilities in half. For example, our first question, we could ask if it is any two symbols, such as ""is it A or B?"", since there is a 50% chance of A or B and a 50% chance of C or D. After getting the answer, we can eliminate half
of the possibilities, and we will be left with two
symbols, both equally likely. So we simply pick one, such as ""is it A?"", and after this second question, we will have correctly
identified the symbol. We can say the uncertainty of Machine One is two questions per symbol. What about Machine Two? As with Machine One, we could ask two questions to determine the next symbol. However this time, the
probability of each symbol is different, so we can ask
our questions differently. Here A has a 50% chance of occurring, and all other letters add to 50%. We could start by asking ""is it A?"", if it is A we are done, only one question in this case. Otherwise, we are left with two equal outcomes, D or, B and C We could ask, ""is it D?"". If yes, we are done with two questions. Otherwise, we have to ask a third question to identify which of the
last two symbols it is. On average, how many questions do you expect to ask, to determine a symbol from Machine Two? This can be explained
nicely with an analogy. Let's assume instead we want to build Machine One and Machine Two, and we can generate symbols by bouncing a disc off a peg in one of two equally likely directions. Based on which way it falls, we can generate a symbol. With Machine One, we need
to add a second level, or a second bounce, so
that we have two bounces, which lead to four
equally likely outcomes. Based on where the disc lands, we output A, B, C, or D. Now Machine Two. In this case, the first
bounce leads to either an A, which occurs 50% of the time, or else we lead to a second bounce, which then can either output a D, which occurs 25% of the time, or else it leads to a third bounce, which then leads to either
B or C, 12.5% of the time. Now we just take a weighted
average as follows. The expected number of bounces is the probability of
symbol A times one bounce, plus the probability of
B times three bounces, plus the probability of
C times three bounces, plus the probability
of D times two bounces. This works out to 1.75 bounces. Notice the connection between yes or no questions and fair bounces. The expected number of questions is equal to the expected
number of bounces. So Machine One requires two
bounces to generate a symbol, while guessing an unknown
symbol requires two questions. Machine two requires 1.75 bounces. We need to ask 1.75 questions on average, meaning if we need to
guess a hundred symbols from both machines, we can expect to ask 200 questions for Machine One, and 175 questions for Machine Two. This means that Machine Two
is producing less information because there is less
uncertainty, or surprise, about it's output, and that's it. Claude Shannon calls this measure of average uncertainty ""entropy"", and he uses the letter H to represent it. The unit of entropy Shannon chooses, is based on the uncertainty
of a fair coin flip, and he calls this ""the bit"", which is equivalent to a fair bounce. We can arrive at the same result using our bounce analogy. Entropy or H is the
summation for each symbol, of the probability of that symbol times the number of bounces. The difference is, how do we express number of bounces in a more general way? As we've seen, number of bounces depends how far down the tree we are. We can simplify this by saying that the number of bounces equals the logarithm base two of the number of outcomes at that level. The number of outcomes at a level, is also based on the probability, where the number of outcomes at a level equals one divided by the
probability of that outcome. Number of bounces actually equals the logarithm base two of one over the
probability of that symbol, which gives us our final equation. Entropy or H, is the
summation for each symbol of the probability of that symbol times the logarithm base two of one over the
probability of that symbol. Shannon writes this slightly different, which just inverts the
expression inside the logarithm which causes us to add a negative, though both formulas give the same result. Let's summarize. Entropy is maximum when all outcomes are equally likely. Any time you move away from equally likely outcomes, or
introduce predictability, the entropy must go down. The fundamental idea is that, if the entropy of an
information source drops, that means we can ask fewer questions to guess the outcome. Thanks to Shannon, the bit, which is the unit of entropy, is adopted as our quantitative
measure of information, or measure of surprise."
Computer science,Information theory,Modern information theory,Compression codes,What is the limit of compression? Created by Brit Cruise.,"Voiceover: When we represent
information, such as an image, such as an image, digitally, it means we must slice
it up into tiny chunks. This allows us to send an image as a sequence of color symbols, and these colors can be represented as unique numbers, using some code. Consider the following challenge. Alice and Bob can transmit
and receive messages binary. (Morse code) They charge their
customers 1 penny per bit to use their system, and
a regular customer arrives who wants to send a message, and their messages are 1,000 symbols long. The meaning of the messages is completely unknown. Normally, this is sent
with a standard 2-bit code, which results in charging for 2,000 bits. However, Alice and Bob
already did some analysis on this customer before,
and determined that the probability of each symbol
in the message is different. Can they use these known probabilities to compress the transmission
and increase their profits? What's the optimal coding strategy? David Huffman famously provided the optimal strategy,
which he published in 1952, and based on building a binary
tree from the bottom up. To begin, we can list
all symbols at the bottom which we can call nodes. Then we find the two least probable nodes, in this case B and C, and merge them into one, and add the probabilities together. Then we repeat with the
next two least likely nodes, and continue merging until you have a single node at the top. Finally, we label the edges in this tree with 0 or 1 in any order. Now the code for each
letter is just the path from the top of the tree
to the given letter. So for A, it's just one edge, or 1. This is now known as a Huffman coding, and for examples of the following type you cannot beat it. Go ahead and try. For example, if you shorten the code for D to just 0, then a message
011 could perhaps mean DAA, or maybe just B. So for this to work, you
would need to introduce letter spaces, which
cancel out any savings during transmission. Now, how far does this
compress the message compared to the original 2,000 bits? Well, we just need to calculate the number of bits per letter on average. So we multiply the length of each code times the probability of occurrence, and add them together, which results in an average length of 1.75 bits per symbol on average. That means with this Huffman coding we can expect to compress the messages from 2,000 bits to 1,750 bits. And Claude Shannon was the first to claim that the limit of
compression will always be the entropy of the message source. As the entropy, or uncertainty, of our source decreases due to
known statistical structure, the ability to compress increases. (Morse code) While, if the entropy increases
due to unpredictability, our ability to compress decreases. (Morse code) if we want to compress beyond entropy, we must necessarily throw away information in our messages."
Computer science,Information theory,Modern information theory,Error correction,How can we communicate in the presence of noise? Created by Brit Cruise.,"Voiceover: Alice and Bob have
figured out an amazing trick. They are exchanging
messages by plucking a wire either hard or soft, to
transmit a zero vs. a one However due to gusts of
wind, false zeros or ones can occur during transmission,
resulting in errors. Though they've figured out a way to communicate error-free, even in the presence of noise. How could they do this? In the 1940s, Richard Hamming faced a similar problem, while working at Bell Laboratories. Richard: At the Bell
Telephone Laboratories, we do about 10% of the
experiments on a computer, and about 90% in the laboratory. I expect that in time, we
will do 90% on the computer, and 10% in the lab. Speed, cost, and effort favor the computer over the laboratory approach. At the time, the computers
used stored information on punch cards, representing one vs. zero with hole vs. no hole. This system was error
prone, because it was common for cards to get bent or
mis-punched in the first place. So holes could be missed, or no holes could be
accidentally punctured, causing flipped bits. These errors would cause
the entire system to halt, until the error location could be found and corrected manually. Hamming took it upon
himself to devise a method which could automatically
detect and correct single bit errors, without
interrupting calculations. His solution was rooted in the intuitive idea of repetition, something we all do when
faced with interference, or the chance that part of
our message will be corrupted. His error-correcting codes were built on the simple concept of a parity bit. A parity bit is a single bit which is added to the end of a message, and indicates whether the number of ones in the message is even or odd. If a single error occurs, the receiver could then detect it, because the parity bit
will no longer match. However to detect and
correct single errors, Hamming needed to add more parity bits to identify the error location. This leads to his seven-four code, which adds three parity bits to each block of four data bits as follows. First we start with the three parity bits, which can be represented by a circle. These circles intersect
to produce four regions. The four data bits are
placed inside these regions in a specific order. To calculate the parity bits, we look at each circle one at a time, each containing three data bits. We determine the parity bit as before. Add up the data bits, and
if we get zero or two, the parity bit is zero for even, and if we get one or three, the parity bit is one, for odd. We do this for all circles, and end up with three parity bits to match the four data bits. These are then placed in a standard sequence as follows. Realize now, this system
can automatically correct single errors with a simple rule. If a single error occurs, two or more of the parity
bits will be incorrect, and wherever they intersect is the location of the error. This intersecting data bit is
then flipped automatically, so that all parity bits are valid again. This is Alice and Bob's trick. The additional parity bits are known as redundant bits, because they don't carry
any new information. All error-correction codes work this way. They all increase the size of the source messages slightly, at the expense of automatically
correcting errors. We also use error correction
codes for storage, for example on a physical CD, the information is encoded
using special codes, to correct for chunks of errors caused by scratches or dust, which corrupt longer
sequences of zeros and ones stored on the surface. This is why you can scratch a CD and often it will still play perfectly. Claude Shannon used
this idea of redundancy to redefine the capacity
of a communication channel, because as the noise on
your channel increases, we must increase the amount of redundancy to communicate error-free. This must then decrease
the effective amount of information you can send per unit time."
Computer science,Information theory,Modern information theory,The search for extraterrestrial intelligence,Can information theory help us talk to aliens? Created by Brit Cruise.,"Philip: What I would like to know is the answer to a very simple question. Are we alone as conscious beings in this entire buzzing
400 billion star galaxy, one of 10 to the tenth other galaxies? It seems pretty implausible. Voiceover: The modern
search for extraterrestrial intelligence, or SETI, began in 1959 when two Cornell physicists, Giuseppi Cocconi and Philip Morrison, published an article
in Nature that outlined the possibility of using
radio and microwaves to communicate between the stars. In order for this to
work, researchers assume that any intelligent
civilization will have discovered the ability to transmit radio waves. This assumption is based, in part, on the fact that it took human beings only 80 years to figure out how to do this following Alessandro Volta's discovery of batteries and electric current. The premise is quite simple. We can create radio waves by sending short pulses of electric
current through wires. These waves can then travel
beyond our atmosphere and out through space
with little interference. Once these radio, or
electromagnetic, waves are sent out, they can be received using antennas and turned back
into electrical pulses. In 1960, Frank Drake
conducted the first search for radio signals from
other solar systems. Much like turning a radio dial, Drake was trying to scan the sky in order to tune in to faint radio signals that might be coming from other worlds. Though this first attempt did not result in any noteworthy findings, researchers have been
scanning the stars ever since. Carl: So, there is some chance that in the next few decades we will get a signal from some spectacularly distant,
spectacularly exotic civilization, and everything on earth will, as a consequence, change. That is possible. Kent: The interesting
thing about the SETI search is that although we
claim that we're looking for extraterrestrial intelligence, we can't actually define what an intelligent signal is. A starting point is to
say we look for a signal which nature will not produce by any mechanism that we understand. Voiceover: An important question emerges. How can we ever know if such a signal is coming from an intelligent source? At the first SETI meeting
in 1961, John Lilly proposed that researchers
study dolphin languages to help them learn more about what extraterrestrial signals might be like. Much of this early work
culminated in the research conducted by Laurance R.
Doyle and Brenda McCowan. Doyle and McCowan's work
is based on the assumption that if there is some common trait in both human and nonhuman communication systems, then extraterrestrial
communication systems should also share this trait. They analyzed a long
sequence of vocalizations from both adult and baby
humans and dolphins. In the case of dolphins, this was a set of whistles and clicks. Human babies learn to
speak through a process of vocal imitation,
slowly amassing a larger and larger set of sound signals. (baby babble) However, during what is
known as the babbling phase, the sounds produced are
more or less random, or unstructured. To see this, Doyle and McCowan plotted the different sound signals
against their frequency, or how often they occur, then they ordered the symbols in the graph according to frequency,
with the most common symbols on the left and the
least common on the right. With human babies, the
slope is nearly level as all sound signals produced occur fairly evenly or randomly. However, as children learn the language of their parents, they narrow their sound repertoire to fit the model
to which they are exposed. As a result, structure is
imposed on our speech patterns. Consequently, the slope of this graph converges towards a 45 degree angle, or a -1 slope on a log-log chart. This is known as Zipf's Law. What's interesting is that this same slope appears in different human languages, and seems to be a
pattern all humans share. Even more surprising is that this pattern also emerged when Doyle and McCowan analyzed nonhuman communication. They found that the
whistle sounds produced by baby dolphins seemed to
be distributed in a pattern similar to human babies
during the babbling phase. At first, the dolphin whistles are more or less unstructured. By the time they reach adulthood, the graph converges on
a slope of about -1, which is the same as humans. (dolphin cries) But this sort of analysis looks only at individual signals, or words, and doesn't say anything about the deeper linguistic structure of either human or dolphin communication systems. Let's clarify what we mean by deeper structure with an example. If I select a random word from a book and ask you to guess what it is, you will have no clue what it might be and will have to simply guess. If, instead, I give you
a random word from a book and ask you to predict
the word that follows it, you will still have to guess, however, you'll notice it's likely
easier to guess this word. If I give you a sequence
of two words from a book and ask you to predict a third word, it becomes more predictable still. If you are given a
sequence of three words, this trend continues. The ability to guess is even easier. It seems that as a result of
the structure of language, the freedom of choice decreases as we look at longer and longer strings of words. Intuitively, this is why we can finish each other's sentences. Now, to quantify this, Doyle and McCowan borrowed Claude Shannon's
measure of entropy, which, as you recall, is
a measure of surprise. Entropy can be thought of as the number of yes or no questions, or bits, required to guess the next word. As predictability increases, the information entropy decreases. Doyle and McCowan calculated the entropy for different depths, or orders, so single words is first order, groups of two words is second order, groups of three words is
third order, and so on. Then they plotted the value of information entropy against this depth. For adult humans, as we may expect, they found that the information entropy decreases as the depth increases. This is a result of the rule structure in our communication systems. Amazingly, Doyle and
McCowan did the same thing with dolphin languages,
and found the same pattern. Dolphin communication systems display decreasing information entropy as we look at longer sequences of sound signals. This means that in dolphin
communication systems, there is a rule structure which emerges, and arguably, this also allows dolphins to finish each other's sentences, too. (dolphin cries) Contrast this to just a random sequence of symbols, which has a flat line on this information entropy
graph since there is no conditional dependence between symbols. Because this pattern emerges in both human and nonhuman communication systems, Doyle and McCowan have suggested that this decreasing of entropy is essential for the transmission of what we might call knowledge. As Doyle puts it, if we
get a narrow band signal, a -1 slope on the Zipf plot, and higher order Shannon
entropies, we've nailed it. All of this rests on a simple premise, that aliens, too, can finish
each other's sentences. Dark-haired man: How can I help
you to communicate with us? Alien: How I am able to speak. By assimilation of former photosynthesis. I have been able to incorporate certain of Dr. Wyman's functional processes. Dark-haired man: Was Dr.
Wyman's death necessary? Alien: Through his
sacrifice, I can communicate. Voiceover: Without even understanding the language or culture of the other human or nonhuman species,
Claude Shannon's entropy is a unit of measure that can allow us to detect the presence
of these structural rules regardless of meaning. Claude Shannon's model of information was born out of a desire to save time over the telegraph wires. This led to the global
unit of information, the bit, a single
difference, now the backbone of our information economy. The increasingly digital and network technologies that drive our modern world point to the power and persistence of Claude Shannon's ideas. The bit is here to stay, and the study of information theory will continue to play a key role in our technological
and social innovations on earth and perhaps beyond. Carl: I think even if
there's a plausible argument for a few we ought to keep looking. I'd even go further than that. If there's a plausible argument that there isn't anybody out there, bearing in mind that we can be wrong, we ought to keep looking, because the question is of
the most supreme importance. It calibrates our place in the universe. It tells us who we are. So it is worthwhile trying to find other civilizations, I
would say, no matter what."
Pixar in a Box,Orientation,Start here,Overview of Pixar in a box,n/a,"•Current transcript segment: 0:00- Welcome to Pixar In A Box•0:02a collaboration between
Pixar Animation Studios•0:04- and the Khan Academy.•0:06- I'm Fran, I work here on
the technical side of things.•0:08- And I'm Alex, I work here•0:09on the art and story side of things.•0:11- (Fran) Pixar In A Box will introduce you•0:13to some of the fundamental
skills we use to make our movies.•0:15- (Alex) There's examples
of real life film challenges•0:17that show how an artist's idea can create•0:19a tidal wave of technical creativity.•0:20And how technical advances can inspire•0:22artists to think of new
ideas to bring to the screen.•0:25You'll meet artists, scientists,•0:27animators, coders, sculptors,•0:30all kinds of different people.•0:31- And the thing is, most of them use•0:33skills you may already
be learning in school.•0:35But here in the Box, you can see how•0:37we use those skills to make cool stuff.•0:40Before you dive into these lessons,•0:41you should see how it all
fits together inside Pixar,•0:43the real Pixar.•0:44Come on, check it out.•0:45(light, flittering music)•0:50- At Pixar on any given day•0:52we're working on various
stages of many films.•0:56- But it all begins with an idea.•0:59For example, ""Toy Story"" started with the•1:02notion that when kids leave the room
their toys come to life.•1:07And, honestly, I was convinced that my toys did that.•1:11(scampering instrumental music)•1:17- Our films start in story,•1:19along with the director and the writer•1:21we figure out what happens
using simple drawings.•1:23- (Fran) It's kind of like a comic book.•1:25- (Alex) Exactly, and while we're drawing,•1:27production designers and their team start•1:29designing the world and the characters.•1:31(smooth, cheerful orchestral music)•1:38While they're painting
and drawing and scultping•1:40our storyboards go to editorial,•1:42where they string together all•1:43the drawings that we've created.•1:45- We time them out, add music,
dialogue and sound effects.•1:48(clicking)•1:49- He's the only one who
knew what the heck was going•1:50aaaaaaahhhhhhh!•1:52- And as these shots go through
each stage in production,•1:54we'll update the scene
over and over again.•1:57And this is where the
science and the math come in.•1:59- Who knew what the heck was going•2:00aaaaaaahhhhhhh!•2:03(mischevious music)•2:05- What's next?•2:07Pipeline, we're ready to start
making the film you'll see•2:10in the theater and this
happens in a particular order.•2:12It's time for our technical
artist to figure out•2:14how we're going to create
the movie in the computer.•2:16- I've been here for nine
years and I still have no idea•2:19how you guys turn our drawings
into the finished film.•2:22- To be honest, something
stumps us on every movie.•2:25- Hey Galyn.•2:26- Hey.•2:26- You've been here since Toy Story,•2:28what's been hard on each film?•2:29- Well on Toy Story everything.•2:31Here let me show you.•2:33On Toy Story we were inventing•2:35the entire process from scratch.•2:38Monsters Incorporated, fur and clothing.•2:41On Cars, reflective metal surfaces.•2:44On every new film there's
a new technical challenge.•2:47On Inside Out we had to
deal with a character•2:49made of glowing particles and it took lots•2:51of people to figure out
just that one thing.•2:54- (Alex) Whoa, what is she made of?•2:56- Her shape will be made of
points and particles of light.•3:00She was tough, this is the 17th version.•3:05- And the characters have to move,•3:06so someone has to add
controls to the model.•3:08- Like a puppet, right?•3:10- Yes, except instead of strings,•3:12our animators will use a computer program•3:14to move the characters in a digital world.•3:15(bemused music)•3:17Next in the pipeline, sets.•3:19(playful music)•3:20- (Alex) So for Cars 2 you
built the entire city of London?•3:23- We needed a huge chunk of the city•3:25because Mayor and
McQueen speed through it.•3:27So we figured out to grow buildings•3:29with enough variation
for them to look real.•3:33- (Fran) And we move through that set•3:34with our virtual cameras.•3:37Next up, animation.•3:38- I do know what the animators do.•3:40They bring the characters to life.•3:42- (Fran) You see how she's moving but•3:44her clothes and hair are missing?•3:45Adding and moving those
elements is going to be•3:47someone else's job
further down the pipeline.•3:50And by somebody else, I mean me•3:52and about 20 other
simulation technical artists.•3:55Where are you getting all these shirts?•3:57We have to build everything you see,•3:59including the textures and surfaces•4:01which help make the world
and characters believable.•4:04Next stop, lighting.•4:06- Ironically it's really dark
in the lighting department.•4:09(playful music)•4:10So when you start, there are no lights?•4:12- No any source of light is something•4:14we have to add into the scene.•4:16In this shot alone there are 230 lights.•4:20- (Fran) Last stop, the Renderfarm.•4:22- A film is really a
series of images or frames.•4:25There's 24 of them every second.•4:27(light, moving music)•4:28- (Fran) This is where we make the frames.•4:30Everything comes together here,•4:31all the art, math and science.•4:35A single frame can take more
than 24 hours to render,•4:38and that's just one frame,•4:39and that's assuming we
don't run into any snags.•4:41- Whoa! (thuds)•4:44(soaring orchestral music)•4:50- Wow, it's incredible seeing final shots.•4:53And now that I know how
they're made, even cooler.•4:56- So that's the tour, our next step is to•4:57jump back into the Box
and choose a lesson.•4:59What do you want to try?•5:01- Well this one on building
robots using combinatorics,•5:03that looks pretty cool.•5:05- What about the one on sets and staging?•5:07- Yeah or the one on
animating The Incredibles.•5:09- (Fran) Awesome, I
always wanted to animate.•5:11(silly trumpet music)"
Pixar in a Box,The art of storytelling,1. We are all storytellers,Introduction to storytelling,Welcome to storytelling! ,"- Hey Pete. - Oh hey Val. - How's it goin'? - You know what, I'm
havin' a really bad day. - What happened? - See what Val's saying when
she says, ""What happened,"" is, tell me a story. And that's actually what this season of Pixar in a Box is all about. To make a movie here at Pixar takes years, but it all starts with a story. Humans have been telling stories since we could speak, probably before. We tell stories around the campfire, we write plays, we write
novels, short stories. We make movies, we take
photographs, tweet to each other, the list goes on. The power of story is
that it has an ability to connect with people
on an emotional level. One of the things you hear all the time, this advice, is write what you know. Now, as a kid I was like, I don't want to write about suburban
Minnesota, that's boring. I wanna write about explosions and monsters and car chases. Well, what that actually means is, yeah go ahead and write about monsters and explosions and car
chases, but put something into it that talks about your
own life, how you feel. Do you feel scared? Do you feel alone? Something from your own life will make that story come alive and not just be a boring car chase. - (mumbles) - When I started directing
Monsters, Incorporated, the way I would pitch it is, it's about a monster who
scares kids for a living. That's his job. He clocks in, he clocks
out, he eats donuts and talks about union dues, and we thought that was a pretty funny idea. And sure enough, when I would tell it to people, they would smile. But when we told the story as a film, people started getting bored and restless and they're like, ""I don't understand ""what this movie's about."" Well, what I finally figured out was that it's actually not about
a monster who scares kids, it's about a man becoming a father. (laughing) That was what was happening to me. So, why write about what you know? Well, it's because, probably what happened to you made you feel some particular way. And what you're trying to
do really when you tell a story, is to get the audience
to have that same feeling. One of the big revelations
for me telling stories, is how much work they are, really. I always thought, you would just tell the story once, and it would be perfect. And geniuses like Walt Disney or Miyazaki, this brilliance comes
out of their head once, and there it is. Well the truth is, our
stories don't always come out exactly perfectly the first time, or the second time, or the third time, or the fourth time, up to the 30th time. And so you keep going again and again. And only after retelling the story many, many times, does it really sparkle. This season of Pixar in a Box is about how we at Pixar tell our stories, in hopes that it will
inspire you to tell yours. - But, seriously, what happened? - Oh, oh, so the first thing. I get to my desk, right? It's eight o'clock in the morning..."
Pixar in a Box,The art of storytelling,1. We are all storytellers,Your unique perspective,This video is all about your superpower. ,"- Hi, I'm Valerie Lapointe and
I'm a story artist at Pixar. I'm going to be your host for our first lesson on storytelling,
designed to introduce you to how we tell stories at Pixar. Throughout the next six lessons you'll have a chance to
create your own stories and you'll go from a rough idea to having real storyboards
like we use at Pixar. Each lesson features Pixar story artists sharing their insights about
the story development process. - My name is Domee Shi
and I'm a story artist. - Hi, my name is Sanjay Patel. I'm an animator and storyboard artist. - I'm Kristen Lester. I'm as storyboard artist. - Hello, my name is Mark Andrews and I'm a director at Pixar Animation Studios. The goal of this video is to remind you that you already are a storyteller. It's something we do naturally, and start doing as children. To kick this lesson off, let's hear how some of Pixar's storytellers first started telling their own stories. - Out on the playground where you're making up stories or
playing in the backyard where we're making up whole worlds. From then on I started
drawing my own comic books and I would fake being sick
to stay home from school so I could draw my comic books
and come up with my stories. - What I did is I would take a drawing of Betty and Veronica that
was in the comic books and I would trace it,
and then I would draw fashion on them, and I did this thing called Betty and Veronica Fashions. Somewhere in my mother's
basement there are thousands and thousands and thousands of these drawings of Betty and Veronica. - These poster assignments that my art teacher would give me in high school, and even in junior high school as well, they were always around a theme of American history, and so the idea of this kinda homework of doing American history in a visual form was the kinda the first avenue into telling stories in just one picture. - When I was really young I would draw pictures and I
would show them to people and they would react,
and I'd really like that. Like I'd love getting
reactions out of people with the things that drew
and the stories that I tell, and I wanted to get more
reactions out of people so I drew more and more and more. - I have to say, like
growing up I felt like I had no ideas, like I was just the most unoriginal, like, I
always felt like artists have to have like these
kinda waterfalls of ideas, endless amount of ideas,
and I had like zero I felt. - So I get most of my stories
and my ideas from my life. I think about a lot of
stuff that's happened to me, like when was the last time I was happy? When was the last time I felt really sad? When was the last time I
cried or got really angry? - Most of my stories originate from my own personal experiences, and I think there's a touchstone there
that is very important to the storyteller to find
because it makes us honest. I'm not just gathering kind of ideas and chucking them together
and there's a story. No story comes ready made. - One way is that I think long and hard about my experiences in life and moments in my life where I've had what I kind of consider to be an epiphany. I have gained some sort of insight or learned something that I think is really important to
share with the world. I think those are the kind of stories that are really fun because they only can come from you
and your experience. Nobody else can have the same insights as you because they haven't
lived the same life as you. - No two people will
experience life the same, so no two people will
tell a story the same way. Think of this as a superpower we all have, your unique perspective. Only you see the world this way. Now I want you to think
about a memory you have. It can be your most embarrassing memory, a frightening memory, or a
time you were very surprised. Whatever it is, it's a
memory you remember vividly. In this first exercise
you'll have a chance to express this memory in various ways."
Pixar in a Box,The art of storytelling,1. We are all storytellers,Your favorite stories,Why do some stories pull you in? ,"(clanking) - There are many ways to tell a story. And in simplest terms, a story is a sequence
of events, or narrative, which unfolds through time. It begins, (soft music) something happens, (dramatic music) (screams) and it ends. (soft music) But, some stories, no
matter how they're told, have a special quality. You've probably felt this. Some stories grab you emotionally, engage your mind and pull you in. Now, let's hear from our artists what stories pulled them in. - These little stop motion
specials on at Christmas. And I remember seeing Rudolph
the Red-Nosed Reindeer for the first time, and I knew
the song, that's one thing. But then to see it illustrated and play out in the city, the Island of Lost Toys,
how all these things were not what people expected
or not of the norm, and I remember being very, very effective, affected by the injustice, and that really touched me as a kid. - In the case of Little
Mermaid, I remember it was the first animated
movie I had ever seen that took me somewhere else,
and I remember just like being so transfixed with the idea
of going under the ocean and swimming, and living a
whole kind of other life. - A movie I saw called The Killing Fields. It was a war movie, and
there's this whole section of this movie where the protagonist has to escape from bad guys, and it goes silent for like 30 minutes. It felt like 20, 30 minutes. And it's just so arresting
to see this character trying to survive that I was just riveted. And when he finally finds
his friend at the end like, I just remember, yeah, like breaking down. It was, felt incredibly emotional. - The Lion King. And I remember I was five
years old and watching Mufasa fall to his death, and I was so traumatized that
I had to leave the theater. It hadn't hit me before,
but when I saw Simba nudging Mufasa's body, and
he wasn't moving, and he, Simba was telling him to
wake up, but his dad like wasn't waking up, and he just lay there. And that like stayed with
me for a really long time. It traumatized me a little
bit, but I think like I grew a little bit
after watching it, too. - Imagine you're a castaway on an island. You can pick three of your favorite movies to bring with you. What would they be? (chimes) In the next exercise,
you'll have a chance to think about what you would bring, and why these particular stories made such an impression on you. You'll reference these three
stories in the exercises throughout the next six lessons. So, take the time to find your favorites."
Pixar in a Box,The art of storytelling,1. We are all storytellers,What if...,All our films begin with an idea which inspires us. ,"(metal clattering) - Although our movies
involve hundreds of people and take years to make, they all begin with a simple idea about some world and character. - What if there's life
out there in the universe? - What if a rat wanted
to cook haute cuisine? - What if our toys that, you know, are all around us actually were sentient and can come alive? - These what if questions
invite the imagination into a story we want to explore. Let's hear how our story
artists use what ifs. - So what if questions kind of really drive that imagination. - The best what ifs are questions that sort of, they feel like a key that unlocks a door. - It really shuts down the
logic part of your brain, and it lets you engage the
dream part of your brain, and somehow it opens up
the doors to imagination, or at least for me it does, and what if sort of seems
to ask this question to let yourself wonder. So when it came to writing and directing Sanjay's Super Team, the thing that I came to first was what I wanted to say. What if we could finally see what my father was seeing in his mind with his spirituality and his faith? What if we could show that with vivid, three dimensional, Pixar technology to this little boy who worships cartoons. That was the big what if that I challenged the art department with. - At Pixar, these what
ifs are not only fun, but they're a simple way
to communicate a story idea and kick off our entire creative process, so it's important to be
able to communicate stories in this concise way. In the next exercise, you'll reframe your three favorite films in terms of what if statements."
Pixar in a Box,The art of storytelling,1. We are all storytellers,World & character,A story is born when world and character meet. ,"- A What If statement
is ultimately connected to a world and a character. When we say world, what we really mean is the environment, or set of rules, in which our story will take place. It could be literal, like a coral reef, or figurative, like the
mind of a young girl. Character, of course, refers to the subjects or individuals we follow on the journey of the story. What if there was one
last robot left on Earth? Let's hear about some of
the worlds and characters that inspired our Pixar story artists. Star Wars has this great What If question, which is what if there
was a band of rebels that were trying to be the
guardians of the human spirit and let's say there was this
great war that was going on between this non-feeling technology trying to wipe out this
kind of subtle human feeling and it just has this great
powerful What If question that really drew me in to that world. - The great thing about
the world of Toy Story is that it's this really
beautiful metaphor for growing up. And it's so genius because it's so, from the outside it looks so simple, but from the inside it's so complicated and so beautiful. So I think that's a really good example of a world sort of leading the story and a world containing
a metaphor within it that we can all sort of
grasp and hold on to. - One of my favorite
movies is Raising Arizona by the Coen brothers. Well, the world takes a backseat to the character of this protagonist who wants to sort of steal a baby, so him and his wife
could have this family. That character is so
incredibly alive to me that he could just stand
there on the screen and it would still be really compelling. - Personally, I always think
character should come first and then the world comes after. For example, a blind
person forgetting his pants and going to work will have
a completely different story than a seeing-eyed person
forgetting his pants and going to work. Two characters will have
completely different stories but all of the objects and the setting and everything else is
completely the same. So, for me, character is king. - Everybody works a little differently. So, for me, I like to come
at it from world first and then find the character
to go into this world, or who that character is going to be. I needed to set the stage for a bunch of other
characters to go through and then that was the equation for stories to come out. - Sometimes the world comes first and sometimes the character comes first. Either way, the story's
born when both things, world and character, meet. Let's get warmed up in this next exercise, thinking about characters and worlds in the stories you love."
Pixar in a Box,The art of storytelling,1. We are all storytellers,Advice from storytellers,Some advice from our storytellers. ,"- Remember, the goal of
this lesson is to get you thinking of yourself as a storyteller. As you'll discover, telling
stories can be challenging, so let's get a bit of advice and encouragement from our artists. - My high school art teacher
pointed out the drawings of Michelangelo to me, and
she pointed out specifically that you see all these
marks that he's left here, these were the errors,
these were the things where he was searching for the right mark and then he found the right
line to draw the hand, but he didn't have to erase them, that was part of the search. And it's okay, it's actually
part of the process. And so that's when, in fact, she was like, ""Get rid of your erasers,
in fact, use your eraser ""to draw, not to get rid of something ""because if you're
messing up, then at least ""you're sure that you're
actually making progress ""to something that can be
better than where you started."" - It's okay that your idea isn't perfect right out of the gate and
it's just about identifying, is there something there emotionally that is drawing you to it and if there is, then there's something
there and you can just keep working on it and changing
it, but always remembering what was that initial feeling
that drew you to that idea. - Ideas really, usually, when
you first come up with them, they're kind of more like notions. That's kinda in the what
if, what if hmm hmm hmm hmm? And then the way you get
to a solid actionable idea is that you just keep working on it and every time you do a version of it, every time you do a pass on
it, you get closer to the idea. - It's a lot of hard work
and it takes trial and error to get that story right,
because one thing that may affect you and you have an
idea, is not necessarily going to speak to somebody
else and that's where figuring out the best way to
get them out of their head and intellectualizing what's
being told them to feeling it and getting in touch with
their emotions so that they're invested in what's
happening to the character. - The good news is that if you love it, if you like telling stories,
if you like communicating, if you like drawing pictures,
you won't wanna stop, that's the great part,
and even if it feels like you're not making progress,
you'll see a stack of drawings or you'll see a bunch of pieces of paper that have your words on them and I mean, that's really impressive
because you're making progress, so you gotta keep practicing,
it's as simple as that, there's no easy way, and
in fact it's really fun if you really enjoy it. - Hopefully now you have a sense of a few what ifs you want to explore and some worlds and
characters to go with them. And in the next lesson, we'll
dig deeper into developing characters and how we
approach that at Pixar."
Pixar in a Box,The art of storytelling,2. Character,Introduction to character,Welcome to our lesson on character development.  ,"- Hey Aphton! - Hey Louise! - Whatcha doing? - I'm working on this character lesson. And honestly, I'm struggling a bit. How do you make an audience
care about a character? - That's a really hard one. You ever heard of The Elevator Test? - No, what's that? - So, when you're struggling
with your character. And you're trying to figure
out who they really are, it helps a lot to put
them in an elevator and, (elevators crashes) What was that? - Okay, it's okay. Louise, how about you tell me about the elevator thing. - Okay, yeah, so when you're trying to figure out your characters. It helps to trap them in an elevator and see how they'd react in a crisis. Get me out of here! Hey, are you out there? The elevator's stuck. Really, really stuck. - Let's try this one. Okay, lights, we have lights. Okay, what's next? Okay, we're late for meetings. Someone will notice that we're gone. Breathe in. Must be a trapdoor somewhere. Breathe out. (cries) - [Louise] It's not working! - Okay. Louise, are you okay? - I'm fine! (light instrumental music) - [Robotic Woman] Hello, have
you completed the exercise? - Ah, yeah, get us out of this elevator. - [Robotic Woman] This is elevator. Did my exercise help you
think about your characters and how they might behave when they're in difficult situations? - You've got to be kidding me? Let us out of here! - Well, hang on Louise. I think it actually worked. I got good insight into what people actually do in a crisis. How about you? - Oh, well I. - [Robotic Woman] Clearly
the exercise worked. And you discovered something different about each character. And as a bonus, you've discovered that entertaining characters
are often deeply flawed. Don't worry, those flaws can also be the key, to why
audiences care about them. Your characters will be the people, rats, fish, cars, or robots, that we follow through the whole story. The lessons they learn,
the challenges they face, and the feelings they feel, will be shared by the audience. And when you are struggling
to create a character that the audience cares about, there are many other
exercises you can try. - Right on, elevator. That's what this lesson is all about. Playing with character. - [Robotic Woman] And
remember, I'm always here to help you take your
storytelling to the next level. - Bye elevator. - Bye elevator. - [Robotic Woman] I sure
hope my next passenger is a tidier character."
Pixar in a Box,The art of storytelling,2. Character,Internal vs. external features,Whats on the inside vs. outside of a character? ,"- Hi, I'm Christian Roman and
I'm a story artist at Pixar. (bell dings) I'm your host for this second
lesson on storytelling, which is on character development and I have a few friends joining me. - I'm Austin Madison, I am a story artist. - My name is Aphton Corbin,
and I'm a storyboard artist. - My name is Louise Smythe,
and I am a storyboard artist. - My name Ronnie del
Carmen, I am a story person, director, designer, and
all around troublemaker around here at Pixar. - The goal of this lesson is to explore our character development
process by which we go from simple character
concepts such as a robot or a fish or a girl to complex characters people can actually care about. Take Wall-E, he's not just
a robot, he's a lonely, curious robot who fears,
thinks, and ultimately loves. Or Nemo, he's not just a
fish, he's a young fish who craves independence from his father, but endangers himself
in trying to achieve it. Or Merida, she's a young
princess who wishes to pursue her own hopes and dreams
rather than conform to her parents' expectations. We can call these
characters fully developed. This means we've gotten
to know them so well that we can imagine them
in almost any situation. Creating a fully developed
character isn't easy. You're basically creating
a new life from scratch, but it's really special
when you get there. So, how do we begin character
development at Pixar? - We can talk about
characters in two ways. They have their external
features, which is their design, their clothes, what they look like. Then much more interesting
is the internal features. Are they insecure, are they
brave, are they jealous? - I will pretend like
I'm having a conversation and getting to know a
friend and think okay, well what do they like to do? What are their beliefs,
what do they enjoy? What do they not enjoy? - I think actually I work
more externally first now that I think about it. You know, what they're wearing,
how they style their hair, and that kind of informs internally what's going on. - One of my favorite Pixar
characters is Syndrome. You look on the outside and
he actually kind of looks like a superhero. He's got the superhero
costume on, he's got a cape. He's got this dazzling hair. But inside he's totally a
villain and he wants to actually do away with all the supers. So you kind of have that
great little contrast there with that character that
makes him feel really rich and really real. - Characters have to come from authentic human emotions and experiences. - And it doesn't necessarily have to mean make every character you, it could also be draw
from people you know, things from real life. - Listen to that little voice
saying. ""Oh, that's just like ""what my mom used to do."" Or, ""Oh that's just like this
friend I had in high school."" Or, ""My little brother was like that ""when we were growing up."" - Because it's much easier to
go from your family members or a friend when you're trying
to search for a character. The specificity that people
bring that you can't make up on your own is something
that I look forward to and I enjoy when I'm trying
to pinpoint down a character. - I was working on Up. I was the story supervisor. Now I'm a little invested
in Carl's journey because back then my father was not well. He also had a full head of white hair. When he gets to the tepui, Carl actually has to be alone in his house essentially looking back at the life that he had lead with Ellie. He does this silently. At that point when I was
storyboarding that sequence my father was already in the hospital and he was unable to speak. And when I actually talked
to my father he can only communicate to me through
his eyes, and with smiles and facial movements. That actually helped me accurately
storyboard those moments when Carl silently thinks
about his life with Ellie. And without dialog we
understand the emotions that he's going through. Without my experience
with my father I wouldn't have been able to actually
tackle that moment in the movie and storyboards credibly. And I told him that Dad,
I'm drawing you as Carl. - Understanding a character,
both inside and out will help you figure out
what the character really desires, which is what drives
them through their journey. In this first exercise
you'll have a chance to think about the difference between internal and external character traits. Remember, the more you
know about your character, the more real that character will feel."
Pixar in a Box,The art of storytelling,2. Character,Wants vs. needs,Wants drive us to act. Needs drive us to succeed in life. ,"- In the last video we
talked about the difference between internal and external features. Let's ignore external, or
physical features for a moment and zoom in on the mind of a character. (chimes) One powerful way to think about this is to ask yourself a question. What does this character want? - It's important to understand
what a character wants because it informs your story. If you don't really know
what they start out wanting it's hard to take them somewhere on a journey; and that's
what stories are all about. - When you pick a movie, any
one of your favorite movies, you're gonna actually
probably kind of like skip to the part where the character says, ""I want to do this."" ""I want to be champion."" ""I want to be king."" ""I want to be the greatest
chef in the world."" Characters get to have that goal and they will work every day, every second of the day in their story to make that happen. - [Narrator] Wants drive
a character to act. A character might want something and do everything to get it. Needs are the things
we need to do, or learn in order to grow, or succeed in life. For example, a character might learn that they need to share what they desire in order to be fulfilled, or happy. The distinction between
what a character wants and what they need is important when you're
building a character. - We all have those things we want. Oh man, I'd love that new car. Or, I'd really like, oh
man, I'd love a VR machine, that'd be so cool. But what I need is
probably to feed my family. And what I need is probably
to have good relationships and things like that. - Oftentimes I think needs
are something that we don't like admitting. It's eating your vegetables. You want to just go for
those sweets, the things that that make life easier,
but we have to sometimes do those things that we don't want to do. And in the end, it makes
for full course meal if we're going with this food analogy. And I think in a character
it's important to have those needs, and
even have those needs sometimes conflict with the wants because it makes our characters stronger and makes them have to go through trials that turn them into more
a well-rounded character. - So Woody in Toy Story, for example, he wants to be Andy's favorite
toy, and stay that way. And he needs to learn to share. To share his friendship, and to not have to always be the best. Sometimes a character might want something in the beginning, and then their need completely comes out of a realization they might have along the way. - In the case of Sully,
he wants to rise up in the organization. You know, he's just like
everyone wants to be you want to be promoted to be the top in your profession. Internally though, we throw
a monkey wrench in his plans in the form of Boo. Something that he doesn't
want to take care of. But because this little
girl actually depends on him he's at odds with what his main goal is. If he gets exposed to
actually having a human child that career path that
he wants gets destroyed. It disappears. So, the thing that he
values, that he says he wants and the thing that he has
to take care of right now are going to destroy each other. His heart actually softens because he starts to care about Boo more than he cares about his career. In fact, he doesn't care at
all about his career anymore. And he will choose what
he needs in his life his connection. A connection to another person. He wants Boo in his life. - So I think that oftentimes your want can be some of the
entertainment of the story, but the need is gonna
be that emotional heart that really makes people remember the film when they come out of the theater and for years later. - In the next exercise,
you'll have a chance to think a little more
about the wants and needs of some characters you know. As well as ones you want to create."
Pixar in a Box,The art of storytelling,2. Character,Obstacles,Obstacles stand in the way of our wants and needs. ,"- Now that we've thought about what motivates a character
to act in the world, let's flip things around and think about things that can stand in their way. These can be referred to as obstacles. Obstacles can be anything. A person, a great distance or
something internal, like fear. Whatever it is, an obstacle is something which stands in the way of a character and prevents them from getting
what they want or need. Let's hear again from our story artists, how they think about this. - So, the core of storytelling is not only what's your character want and need, but then, what is standing in their way, what's the conflict? - We have this expression that
we create these characters, we put 'em in a tree, and
then we throw rocks at them. We make their life a little harder. - Marlin's obstacle would
be his fear of the ocean. He tells Nemo all the time you stay in the reef, it's safe here, and so in order to get back to Nemo, he has to break everything
that he's comfortable with. The obstacles that were in
Marlin's way from that point on were engineered to force
Marlin out of his comfort zone in order to get to his
son and reach a place where he could trust his son. - In ET, Elliott the
boy meets ET the alien, and he wants ET to stay with him on earth, but the obstacle is that ET is an alien. He can't stay on earth. He can't survive. He's dying. - I think about what's the best way to make this character realize
what they need to accomplish. - Here at Pixar, when we're creating these stories and making these films, we go through iteration after iteration of what this journey could
be for this character. - Fear plays a part as an obstacle, depending on the character. A lot of times we try to skirt around our fears and not deal with them, so if you present a character with a fear that they have to confront, it's a very immediate
fight or flight scenario that you've created, and so it forces your character to react. - When you're developing your
stories, you wanna think, ""Okay, what's the fun external, you know, what's the car chase, what's the villain?"" But more importantly,
how does that car chase and how does that villain
reflect the obstacle inside the character and
reflect all of their flaws and their shortcomings. - So those kinds of
obstacles you put in front of your characters because
it makes them think about their wants and needs. - One of my favorite
examples is from Cars. McQueen's primary want
is to get to California and win the big race, but when
confronted by the obstacle of being stuck in Radiator
Springs having to fix a road, what he needs is to slow down, enjoy the journey, and make friends. In the next exercise, you'll
have a chance to think about the obstacles characters can face and the choices they make in response."
Pixar in a Box,The art of storytelling,2. Character,Character arc,Character transformation and their needs. ,"- As we discussed in the last video, a character may face many obstacles. These obstacles can
prevent a character from getting what they want or
achieving what they need. The choices a character makes
in response to obstacles and how the character changes as a result can be referred to as character arc. - Something I like to think of
is character, obstacle, goal, and the character to get to their goal has to go deal with this obstacle. The obstacles are what
make them who they are, what make them change
into this new person, and that really constitutes the arc. - And if you actually study a lot of the movies and stories that you read, the character starts off actually in their kind of basic form,
still about to be formed, and the characters that they end up being at the end of the movie actually
is their higher version. They're better. They don't get to go there
unless they meet the challenges and the kind of pressure
that will make them better versions of yourself. - Without obstacles, the
character's just at a, you know, a flat line, and
when the obstacles comes, it helps to push the
character into the arc until they hit the hardest obstacle that they have to face at the climax, and then it's from there
that they're able to complete their arc, so without obstacles, I don't think that the
arc would even exist. - In Incredibles, we have a very clear, very external obstacle of the Omnidroid. Syndrome invites Bob over
to the island and he says, ""Here's this big droid. Let's see if you can test it, fight it."" And Bob fights it, it's
a very close battle with that first Omnidroid,
but he barely beats it. It takes everything he
has, but he does it. He's victorious, he feels good, but we as an audience know, okay, these guys are about on par. The next time he's invited back, the Omnidroid wins and Bob gets captured, so now we know, okay, the
obstacle is bigger than the hero, and that reflects his learning arc. He needs to learn that the
family is his big journey, the family's what makes him a hero. So at the end of the film,
we get the Omnidroid again, but this time we have the
entire family of Supers and our question is, are they as a family
enough to stop this thing? Of course, the answer is yes. They're fantastic,
they're The Incredibles. Nothing can stop The Incredibles. Until Incredibles 2. - So all stories have some
kind of transformation, and it's really compelling to
watch a transformation happen, whether it is your character, or if your character makes a
transformation in the world. Sometimes a character might
not have a big change, but they will impact
the world around them, and that's also very interesting. - So an obstacle that a character faces, like Joy, what the character wants was to make Riley happy all the time. What happens is she falls
into the memory dump. This is a major obstacle in the movie. The emotion of Joy is going to be inaccessible to Riley for good, and inside the memory dump, she plays a memory of
what happens to Riley when she is challenged, and
when she replays a memory, she realizes that the only reason that Riley actually is happy is because she actually goes through
a phase when she was sad. Now she knows what she needs. Riley needs sadness, and
now the action changes. Joy is going to move heaven
and earth to make sure that sadness gets back to headquarters. More important than her own goal. She'll realize that Riley
is actually much better with sadness and fear and disgust and all the other emotions in her life in order to make Riley completely happy. So when we actually watch movies wherein characters achieve something simply by just walking through a door,
it doesn't feel authentic. In fact, we don't think
the character deserves it. We want the characters
to actually work for it, because we also know
that if you get something for practically nothing,
you won't value it. - [Instructor] A character's
arc defines the change or transformation a character undergoes from the beginning of a story to the end. We'll explore structure
further in the next lesson, but for now, in this next exercise, you'll have a chance to
identify character arcs in the films you love,
as well as brainstorm possible arcs for characters
you want to create."
Pixar in a Box,The art of storytelling,2. Character,Stakes,What are the consequences of any choice? Why do we care? ,"- In the last few videos we thought about obstacles a character can face leading to choices they have to make and the arc they follow. Each choice a character
makes has potential risks, impacts, and rewards involved with it. Those can be called the stakes. - The stakes of a story are summed up on one question, why do we care? Why do I care if Nemo and
his dad aren't reunited? - You have what's at risk
if the characters fail. If the stakes are low, usually it's not a very entertaining film. But the higher the stakes
are, the more tension you get, the more enjoyable it is. My favorite film of all
time is Jurassic Park and the stakes are pretty high. If you fail the dinosaurs will eat you, that's pretty clear. - You have to be as the audience, gripped by those stakes. ""I don't know what's going to happen."" - Early on in the arc,
I'd say that the stakes wouldn't seem as extreme, maybe. As the story progresses the stakes raise. - We have a lot of
conversations about how big our stakes need to be. Does it need to be life and death? Or is it better if it's just, you know, for a comedy sometimes you want it just to be about the
character's reputation or something smaller so
that you're not bringing too much gravity to a situation. The important thing is, to the character, it should feel like the world to them. Even if it's just a talent show, you want to show to the audience that that talent show is
everything to this character. I think by the end of Napoleon Dynamite, we all want Napoleon
Dynamite to win that show and to be accepted by everybody. - Anything that is happening
with your character I think it's really important to feel the emotional connection of that. If I don't feel it, they're not there. - Stakes add drama and
weight to any choice and can be divided into three categories, internal stakes, external
stakes, and philosophical stakes. Let's hear more about this
from our story artists. - The external stakes are, literally, what's going on in the world. Are they lost? Are they being chased by burglars? Physically, what will happen to them or to the world if they fail? - A great example of external
stakes is from Brave. By giving her mom the
cake that the witch made, Merida turns her mother into a bear. That is an immediate, physical
consequence of her choice that impacts both them as
well as the story itself. Then, if Merida doesn't decipher and solve the witch's riddle, her mom will become a full
bear and be lost forever. - Internal stakes usually
are psychological. What's going on for the character
emotionally or mentally? What are they potentially going to lose? What will they potentially gain? Why is it important that
they gain that thing? Why is it sad or difficult
if they lose that thing? Asking those questions
will help you figure out what those stakes really are. - A good example of internal stakes is from the original Toy Story. Throughout the film, Woody
is forced to confront his own insecurity and pride,
embrace Buzz as a friend, and learn to share Andy's attention. What's at stake for
him, internally, is all of his relationships with the other toys and his very sense of self. - Philosophical stakes are
what is impacting the world. What is making the values
or the belief system of this world change? Or not change. And what does it mean if
it does or doesn't change? For philosophical stakes,
I think Lord of the Rings is a great example. If Frodo doesn't throw
the ring into the fire, then Middle Earth is gonna
be ruled under evil forever. - When you watch movies
that have this pitch battle between ideas, concepts, good versus evil, those kinds of things are philosophical. - Okay, let's summarize. External stakes, the
possible physical impacts of a choice or action. Internal stakes, the mental
or emotional consequences of a choice, and philosophical stakes. What are the underlying ideas
or values in your story? The distinction between
internal, external, and philosophical stakes is tricky. So, in this last exercise
let's get some practice thinking about this
using the films you love."
Pixar in a Box,The art of storytelling,2. Character,Advice on characters,More advice to new writers. ,"- I think if you're looking
for what kind of story you want to tell, I
actually, what I used to do when I was in school, before I would start making a film, is I would just ask myself, if I could take a vacation anywhere, where would I want to go? You know I'd like to go
to a medieval castle. Oh, that'd be a cool
place to tell a story. So, you don't even have
to necessarily start from a theme or a conflict, just jump into a setting and then start thinking of the characters, and what do they want? And maybe this is a castle
that it's been too boring, so they've got to hire a
dragon to come attack them. And so we're going to do a
talent scout for a dragon. And then you just go from there. So, you know, when in doubt just let your mind go on a vacation. Through storytelling and
especially in animation, you can go anywhere that
your mind can take you. - Sometimes it's fun to just
think about what you would like to see, what would you like to watch? What is something that,
for you personally, you would say, oh, I'd love to watch a movie like that, and make it. And even if it's not perfect,
it's great to just have things out in the world
that are personal to you. And it's good to look at
other films for ideas, and inspiration, and
structure, and how they, you know, work things out,
problems that they may have, but always try to stay true to your gut, and go with something
that is important to you. - I went to California
Institute of the Arts, the school that was started by Walt Disney specifically for animators, and I studied character animation. And one of the things
you learn at Cal Arts is that you have your
professors, which are great, they're professionals in the field, the people you're really learning from are your fellow students. They're the people that you
are spending every day with, and you're telling jokes
to, and you're learning if you're not funny, or if
you're pitching your stories and you're realizing oh, you know what? I'm not making JJ laugh. Maybe I should, maybe I could make this story a little funnier. And even to this day, when we pitch scenes to each other, sometimes we forget that we're going to be showing them to billions of people in the world, and we're just trying to make the director and our story crew laugh. Because, at the end of the day, we're just people telling
stories to each other. - What happens when I tell
the story to another person, is that all these other things show up, without me asking for them,
even while I'm telling them. The story starts to come alive. The characters start to come alive. And then also the person
you told the story to will tell you what they thought
of it, notes, they're free. They actually are helping you make your story and your character better. So that's why I encourage everybody, if you're crafting a story,
and you want it to get better, keep telling your story,
over and over again. And you'd be surprised how good those characters and those stories become over a short period of time, and you don't have to sit alone in a room with it, thinking that it's good or bad or whatever, somebody can tell you. - So, another important thing
that I'm coming to learn, the more I'm working in the industry, is it's filled with
really amazing artists, and you're kind of always struggling to figure out how to stand out. And I think the best way to do that is to worry less about
what you think people want from you, and just do, express yourself as best as possible. All the responses I got
from the internship, and all the responses
I got on my portfolio were just me going back and thinking about what made me laugh, or what were things that my siblings did that
made me laugh really hard, and just try to express
that into my boards. And people would be like, how
did you come up with that? And I'd be like, you know,
I didn't come up with it, it's just like, you
know, this is me and what I'm exposed to, and people really reacted to that, and wanted
more of it, and, you know, thought it was entertaining,
or fresh and new. So I think that's the
biggest advice I could give is just, you know, figure
out what influences you in your life, and try to
display that in your art. - So I think a big thing to remember, if you're trying to get a job at somewhere like Pixar, is to be yourself. I know it sounds cliche,
but it really is important. - There's a lot of failure of course. There's a lot of times when you're wrong. There's a lot of times when you think that something is working and it's not. That actually is the most important thing that could happen to you as a storyteller, is when things are not working. And when things are kind
of only slightly working. You always want to get better, and the only way you're going to get better is if you keep trying."
Pixar in a Box,The art of storytelling,3. Story structure,Introduction to structure,Welcome to structure! ,"- Hi, I'm Kristen Lester, a
story artist here at Pixar. Today we're going to talk
about story structure, the way we organize and tell our stories. But before we begin, have
you guys heard the joke about the mushroom that
goes to the discotheque? A mushroom walks into a discotheque and he walks up to a lady
and he asks her to dance. She says, ""Ewww, gross,
no, you're a mushroom!"" So he walks up to another
lady and asks her to dance. ""Nah, I'm not interested."" Lady after lady after lady,
rejected, rejected, rejected. Nobody wants to dance with him. Finally, the mushroom walks
over the the bartender and he's so confused, he says, ""I don't get it, why does
nobody want to dance with me? ""I mean, I'm a fungi."" (laughs) See, this joke has a structure. It's got an opening, a
buildup in the middle, and an ending, which is,
you know, the punchline. That structure is a big
part of what makes it funny. Structure is the answer to the question, what do you want the
audience to know, and when? If you get the order wrong, it could be a real problem, check it out. Hey, can I tell you a joke? Alright, so there's this fungi and, shoot, I messed up the opening. OK, OK, hey, can I tell you a joke? Alright, so there's a mushroom
who walks into a discotheque and then there's a bartender there. Aw, darn it.
(marker scribbling) I messed up the middle. Hey, hey, hey, can I tell you a joke? Alright, so, there's a mushroom
who walks into a discotheque and there's a bunch of
ladies on the dance floor. He asks them to dance and they say, ""yes."" (marker scribbling)
Dang. Without conflict, joke over. (sighs with exasperation)
See, structure is important. Just as structure is a big
part of telling a funny joke, it's also essential to making a movie that has the emotional impact
you want on your audience. (shushing) This is a great example. - [Marlin] (screaming) Nemo! - [Kristen] In earlier
versions of Finding Nemo, the structure of the
story was very different than the final film. The director wanted to interweave scenes of Nemo's parent's lives
before they had kids as flashbacks throughout the whole movie. So you would see them meet. - [Marlin] Hello. - [Kristen] Fall in love, and eventually move into their house at the drop off in little
scenes throughout the film. - [Coral] Oh honey, it's beautiful. - [Kristen] The main
story of Marlin and Nemo and their journey was pretty
much the way it is now. But, with the flashback structure, it wasn't until the end of the film that you would find out
that Marlin's wife Coral. - [Marlin] Coral, look out! - [Kristen] And all of her eggs
were killed by a barracuda. (Marlin grunting)
(screaming) - When they showed the
movie with this structure, they had one big problem,
the audiences, well, they didn't like Marlin. Looking at their story structure, the team realized that, in
this version of the film, the audience didn't find out
why Marlin was acting this way towards his son until the
movie was almost over, so they decided to re-edit the movie and remove almost all of the flashbacks, leaving only the scenes
where Coral and Marlin's home is attacked by the barracuda, killing Coral and all of
her eggs except for Nemo. They moved these scenes to
the beginning of the movie. - [Marlin] I promise I will never let anything happen to you. - This change in the story structure changed the audience
feelings about Marlin a lot. They knew right from the beginning how much Marlin had lost
and how brave it was for him to go after Nemo,
and they loved him for it. In the case of Finding Nemo, finding the problem was a matter of rearranging the story structure. Of course, all our movies are different, and their story structure
challenges are too. In this lesson, we'll look
at the many different ways we think about story
structure here at Pixar and you'll get to try out for yourself different approaches to
structuring your story. Hm, I wonder if I told the mushroom jokes in flashbacks it'd be funnier. Probably not."
Pixar in a Box,The art of storytelling,3. Story structure,Story spine,Introduction to story beats and the story spine. ,"(clicking) - Hi, I'm Derek Thompson, and I'm a story artist here at Pixar. I'll be your host for this third lesson on storytelling, which is
focused on story structure. I'm joined by some colleagues. - My name's James Robertson, and I'm a story artist at Pixar. - My name is Mary Coleman, and I'm the Head of Creative Development. - I'm Kevin O'Brien,
and I'm a story artist. - My name is Robert Grahamjones, and I'm an editor here at Pixar. - Remember in lesson one
when Val told us that, in simplest terms, a story
is a series of events. - It begins. (light music) Something happens. (dramatic music) And it ends. (light music) - [Derek] But between the
beginning and end of a story, many things will happen. The ordering of these events,
known as the structure, can have a dramatic
impact on how an audience responds to a story. Let's get a little bit
more detail about structure from our Pixar friends. - I think about story structure as pouring the foundation for a building, and that if you don't have
that solid, concrete foundation to support the pillars and the struts and all the weight-bearing
elements of the building, the whole thing can collapse. So I think that it's essential. I remember interviewing writer Mike Arndt. We were talking about the
importance of dialogue, because I loved his dialogue
in Little Miss Sunshine. He said, ""Well, dialogue's
just wallpaper."" I thought, ""Really? ""Your dialogue's amazing."" He said, ""If you put the wallpaper up, ""but the wall's in the wrong place, ""then it was a complete
waste of your time."" - You may gain something very valuable from just sitting down and just writing a story from the beginning. But to me, it's important
to structure your story. Like when you give a speech. You tell the audience what
you're going to tell them. Then you tell them. And then you wrap it
up and you remind them of what they've just been told. - When you are just starting a story, it can seem daunting to figure out how everything will fit together, or how a story should flow. So it's helpful to find simple ways to think this through. One way to do this is by coming up with the most important moments in your story, which we call story beats. This is the first of
many bits of terminology we're going to introduce
throughout this lesson. It's helpful to know these words, but don't let them overwhelm you. You can always refer to the glossary at the bottom of this lesson
if you want a refresher. Beats are the kinds of
things you'd mention if you described what had
happened yesterday in 30 seconds. - When we are trying to
define our story beats, let's say we're writing up a beat outline, or putting index cards on
a wall with distinct beats, we try to challenge ourselves
not to get into detailed plot, but to identify the beats based on whether the protagonist is
making a clear decision, right or wrong, or there's
a clear cause and effect. - So that A happens,
and therefore B happens, so that it drives the story. Like a character walks
across the street as a beat. They stop to pick up a thing as a beat. They almost get hit by
a car, which is a beat. - In Toy Story 2, when Buzz
Lightyear discovers that there is in fact another Buzz Lightyear, when he looks at the whole array of toys, that is a story beat. Buzz has realized there is
another Buzz in the world. - The reason that's
important in the process is that if you get too caught
up in the plot details, the how of it instead
of the what's happening, you can lose track of the
thread of the structure. The beats are building that structure. - Another way to think about this is using something called a story spine, which was popularized by
improv instructor Ken Adams. He noticed that most stories can fit into the following simple pattern. Let's try to fit one of our
films into this Story Spine. I was thinking about Finding Nemo. Once upon a time there
was a fish named Marlin, who loved his son Nemo more than anything. Every day Marlin tried to protect Nemo from the ocean, which he feared. Until one day Nemo was
taken away by a scuba diver. Because of this, Marlin
had to leave the safety of his home reef in order to find his son. Because of that, Marlin ran into sharks, jellyfish, and other dangers. Because of that, Marlin was
forced to take a leap of faith. Until finally, Marlin
learned to let go of his fear and trust that Nemo had what it takes to free Dory from the fishing net. Ever since that day,
Marlin gave his son Nemo the space he needed to learn on his own. The moral of the story
is, parents need to let go in order for their kids to grow up. Notice how the story spine
allows us to compress a complex film into a
series of simple beats. In the next exercise you'll
have a chance to try this out. You can fit your three favorite
films into the story spine, as well as generate spines for stories you may want to create."
Pixar in a Box,The art of storytelling,3. Story structure,Theme,Theme and structure. ,"- In the last video we
talked about structure as a sequence of beats and that's a great first step. During the process of creating a story we also try to step back and
think about what connects all the individual events in the story. To do this we often ask our storytellers the following simple question. What are you trying to say in your story? When we ask this question we're getting at something we call the theme. The theme is connected to the moral which is the lesson
that the main character learns at the end of a story. For example, the moral of Cars might be there's more to life than winning. And for thousands of years, people have been weaving
morals into stories. Notice the story spine exercise also ended with a step and the moral of the story is. That can help you make sure
that all your story beats work together to get
across this larger point. Let's check in with our Pixar storytellers to hear how they think about theme. - When the audience leaves your movie and a month later they're
saying to their friend oh I love this movie. It was about, what do you want that to be? So for a movie like The Incredibles you could say oh it's
a movie about a bunch of superheroes fighting crime. But when you're talking about theme you're asking about the
deeper thing it's about. Oh it's a movie about a guy
who's lost his sense of identity and he finds it again in
reconnecting with his family. His identity as part of a family, as part of that super team. - It's basically why you're
telling me this in a nutshell. - I worked on a great film
in 1999 called Iron Giant and the theme of that movie was you are who you choose to be. - Like in Toy Story 3, learning to love, one of the themes was learning to love is learning to let go. - I find if I experience
a film that doesn't have a core idea or a theme it
becomes very unmemorable and later when I'm trying
to think about the film and wonder what it was about I can't remember because
there was no unifying theme. - Oh the theme is basically the reason that the character lets go of their wants for what they need. - Always start a story knowing
the goal of your protagonist and the goal is what they want. So character is going
after what they want. But often they realize that what they want is not actually what they needed and what they needed
is much more important. Finding out what they need, that usually is the theme of the movie. - Once you know what your theme is, what you're trying to say, you can then create a
series of dramatic events, dramatic tests for your
protagonist for the realization that I need to change and I need to be influenced
by the theme of this movie. - It's important to know
the theme or the moral of the story before you start. Sometimes, however, you
discover the moral of the film while you're working on it and it's actually different
than what you had expected. - So when I think about Inside Out that started with this clear question. What happens if you lose your joy? And then for a few years,
like two and a half years, the focus in the middle of the story was losing your joy and joy and fear going on a journey into Riley's mind. Then there was an epiphany
which is joy has to learn that there's a role for
sadness in Riley's life too and has to let sadness in. So it became a big theme about
learning to embrace sadness. - I don't think you'd
ever wanna limit yourself by the thing you thought on day one. You wanna allow it to grow
and become deeper and richer and more thought out and more evolved as you spend the time developing it. - One thing is for sure. You don't need to start with a theme. But by the end of the storytelling process you should be able to
communicate it clearly. And whatever the theme
is, it's usually connected with the needs of your main character. What they need to do, know, or learn in order to succeed in life. In this next exercise you'll have a chance to identify the theme or moral
in your three favorite films as well as consider what
you wanna say in your story."
Pixar in a Box,The art of storytelling,3. Story structure,Act 1,Introduction to Act 1. ,"- In the last two videos, we talked about our theme
and how to break your story into beats using the story spine. The next step is to
divide your story spine into larger sections, which we call acts. Throughout history,
storytellers have experimented with everything from one
act to eight acts or more, but the most common structure for film is the three act structure. Act one consists of the first three steps of our story spine, ""Once upon a time."" This is where we meet our main character, known as the protagonist, and we find out when and
where the story takes place. For example, in Finding
Nemo, we're introduced to Marlin and Nemo who live
in the safety of the reef, and we learn why Marlin worries about the dangers lurking in the open ocean. The first act also tells the audience what type of movie they're about to see. Is it a science fiction,
a romantic comedy, a historical drama, or something else? Every day. This is where we learn more
about how the world works. For example, in Finding
Nemo, we learn about the other creatures who inhabit the reef and what life is like there every day. Until one day. This is often called
the inciting incident. It's an event which
leads to a key obstacle your protagonist faces and sets the rest of the story in motion. In Finding Nemo, Nemo ignores
his father's instructions, swims out to touch the boat, and is captured by a scuba diver. In order to save him, Marlin is forced to face his biggest fear, the open ocean. The first act can also introduce something called the antagonist. You probably know this as a character we sometimes call the villain,
but it can take many forms. Generally, the antagonist is a force that gets in the way of your
character's wants and needs. Marlin's antagonist is something, something that stands in his way, the ocean and his fear of it. Getting this first act
figured out is critical, so let's ask our storytellers
for some more information. - In act one, we want to
introduce our characters, introduce the story, and get a landscape of where the story is trying to go. - What's essential in the first act is that you meet the main
character in her or his world and you understand
their place in the world and you understand their
problem in the world. - You learn enough about this character that you like this
character and you want to go on this journey with the
filmmaker and the character. It's very important to hook
your audience in act one. - For our movies, I think Wall-E has one of strongest first acts. The world is set up. I mean, it's a trash planet
and it's an abandoned dystopia, and yet you have an
idealist, you have Wall-E, who believes as a robot
that love is possible in an environment where
he's meant to clean up the remnants of the opposite world view, and it's beautiful that he doesn't, he has almost no evidence
other than a little green leaf that what he believes and feels is real, and then Eve comes in and confirms to him his idealistic tendencies
that we can rise above our programming and that we
can be more than we're told and we can be more than what's around us. - Sometimes the inciting incident
will introduce a conflict that will launch the main
character into a journey that will take place throughout the film. - In most cases I can think of, the inciting incident comes
toward the end of the first act. You spent the first act setting
up who the characters are, what's important, what the
status quo is in the world, and the inciting incident
that's gonna pull the rug out from under that status quo is
gonna launch you into act two. - In Wall-E, the inciting incident is when Eve is taken off
of earth into the axiom, and Wall-E follows her up
to the axiom on the rocket 'cause he now has a goal
which is to get Eve back. Even though he's a robot and
he cannot be further from me, I completely empathize
with him and I want for him connection and love and the
things that he aspires to. To me, it's an elegant, beautiful,
heartbreaking first act. - And I think a successful first act gets you to invest in your character, care about your character, care
about what they care about, so when the thing they
care about is threatened or the rug is pulled out
from under them in some way, you're rooting for them to
launch into the second act and solve that problem. - Ultimately, the first act
is the setup for the story. It's where we learn
everything we need to know about our main characters and the world, and we find something out which gets us invested in the journey which follows. In the next exercise, you'll have a chance to identify the first act
in your favorite films, as well as start developing the first act for the story you want to create."
Pixar in a Box,The art of storytelling,3. Story structure,Act 2,Overview of Act 2. ,"- In act one, you've
established all the information your audience needs to know
and given your characters a set of challenges to overcome. Now begins the journey
to achieve their goals. Let's take a closer look at
our story spine for act two. In act two, our protagonist
often encounters a series of progressive complications. These obstacles force them
to make difficult decisions as one thing leads to another in a chain of events we call the journey. The choices and actions
your main character makes as they attempt to overcome
these escalating obstacles is the substance of the second act. But how do we make sure
the journey of act two is more than just a series
of events strung together? Let's ask our storytellers, my friends, how they think about
the elements of act two. - Act two is a place where you
beat your character up a lot. You have to keep making things
hard for your character, or the story has no conflict, and a story with no conflict has no shape, no pacing, no momentum,
so you just keep throwing harder and harder things their
way and they have to learn. It's a growth opportunity in figuring out how to overcome these obstacles, so act two is where you
see the most growth. - Yeah, it's really where the character, the metamorphosis
happens of the character. - Oftentimes as editors,
we encounter act twos that have become too long. We don't want act two to
go on and on with a chase that just goes on and on
and on and on and on and on. - But basically, you need to create a series of challenges
for your character towards that ultimate fork in the
road where they have to make a really difficult decision
from which there's no return. - And my favorite
example is in Inside Out, where Joy has been calling all the shots, as she did in the control room. She's always been the controlling one, and she thinks of Sadness
as nothing but trouble, a burden that she literally
has to drag along, but when they meet Bing Bong
and they need Bing Bong's help, and Bing Bong gets so sad
that he can't be helpful because he's sitting down crying candy, Joy tries to rally him to get going. That's her way of solving problems, right? Just rally. Whereas Sadness goes over
and sits down next to him and says, ""That must have been
hard,"" and she consoles him, and the tears stop, and then
they're able to move on. That's a huge turning point for Joy. It's the first time she
recognizes that Sadness has value. - Act two may also contain the low point, when it seems that all hope is lost. Everything's gone wrong and your character may have failed in all
attempts to get what they want, or they may have achieved
everything they want, but still be frustrated or miserable because there's something
else they actually need. - The low point is a
point when it seems like everything is lost for
your main characters. - At the end of act two,
something really, really bad is meant to happen to your character to force them to confront the things that they didn't wanna
confront at the end of act one. It's why act two exists, and it allows them to then
demonstrate it in act three and sort of show that, for the
audience and for themselves that this change is permanent. - I think Pete Docter's
Up is my favorite movie, and it's because of the way this low point at the end of act two is handled. So all through the movie,
Carl has had this goal. It's a big irrational goal. ""I have to put my house on Angel Falls in Venezuela because a long time ago I told my wife we would go live there."" But when he finally achieves that goal and he's sitting alone in the house exactly where he told Ellie it would be, he realizes it's a hollow victory. Yes, he got what he wanted, but in the course of act two, he learned that what he needs is a relationship with Russell. - So let's summarize. Act two often begins shortly
after the inciting incident and is followed by as series of obstacles our characters must overcome
in pursuit of their goals. By the mid point of act two,
around the middle of the story, there's often a choice from
which they can never turn back. We sometimes call this
the point of no return. Act two may also contain the low point. This is generally where act two ends. In the next exercise, you'll
have a chance to identify the second act and its elements
in your favorite films, as well as start developing a second act for the story you want to create."
Pixar in a Box,The art of storytelling,3. Story structure,Act 3,Introduction to Act 3. ,"- By the time we hit act three, the story is now careening
towards a final crisis, the inevitable climax. This is the most intense moment of the film for the protagonist, who should be in danger of losing everything they value most. Hopefully, the audience is
on the edge of their seats. The choices your character
has made in act one and act two were driven by their wants, but now they face their ultimate test. Are they ready to accept their needs and make choices they weren't capable of making in act one? For example, near the end of Finding Nemo, Marlin has found Nemo. This was his want and
what's been driving him throughout the entire movie. But now, Dory, his companion and friend, is caught in a fishing net. This is the crisis. All Marlin wants to do is take
Nemo home and keep him safe, but he knows that they have to save Dory, and that Nemo has the
best chance of doing that. Marlin needs to let Nemo go and trust that he'll be okay. After the climax, the characters and the world return to a calmer place, perhaps a more complete or
better version of themselves. We call this the resolution. In Finding Nemo, this comes after Nemo frees Dory from the net. We return to the reef to
see a new version of Marlin, trusting and confident,
letting Nemo swim off to school and checking in
with his new shark friends. Let's get some thoughts on act
three from our Pixar friends. - In act three, the character sacrifices their wants for their needs. They've seen the error of their ways and now it's just about
demonstrating the change. - And you should have put your character through a lot of tests, and you should be able to show that your character has learned something, learned something that
exhibits your theme, I mean the reason you decided to make this story in the first place. - Where theme and moral
comes into this in act three is in the course of act two, your character has learned
what's most important. In the course of act three, they're fighting for that important thing, and that usually is
the theme of your movie that they're fighting for. So in Incredibles, in act three he's fighting for his family to be able to stay together to survive and to be able to become
this super family. - It's important in a three act film to understand that you don't really know how well your first and
second act are working until you see everything together. The last thing you want
an audience to feel is that they've been cheated after going through two acts of a movie. - My personal feeling is that it should just really feel
satisfying on many levels. You should feel like, oh, they fixed the big
problem with the world. Oh, they've fixed the personal
problem with themselves. Oh, they've vanquished the
bad guys, things like that. And just sets the world right, and so you can walk out
of the theater feeling, oh, that was wonderful
and I learned something. - You can have a well-structured story and have a very logical conclusion at the end of act three, that you have overcome the obstacle, you foiled the villain,
everything adds up. But that doesn't necessarily mean it's a satisfying resolution. To have it be a satisfying resolution, it needs to be emotional. It is the end of your
character's emotional arc. So in Up, the resolution is when Carl not only chooses that
he'll still be friends with this boy, Russell, but he shows up for
Russell's scout ceremony, and he's the one to pin the
badge on Russell's sash. And that symbolizes, I will remain present in this boy's life. This kid is now family to me. - In act three, a film should be resolved. Sometimes that resolution
comes with a surprise and the audience did not
expect that ending at all, but it can be satisfying. - I love the resolution of Toy Story 3 because there's a surprise,
there's an unexpected ending. Throughout the whole movie, Woody has felt like there's
an either/or situation. Either I stay true to my kid, Andy, and go with him to
college and sit on a shelf and lose my best friends, the other toys, or I betray Andy and I
disappear with the other toys. And he finds the solution
right at the end. When he comes up with the idea of having Andy donate all
the toys together to Bonnie, and the surprise is that
Woody put himself in the box. He has found the third way. He's found a way to be with his friends, and still let Andy be the one to make the choice to pass him on. That was such a surprising organic and really emotional resolution. - In summary, the third act is where we pull everything together. The characters have
overcome their obstacles. Their arcs are now complete. The theme has been clearly expressed, and we've brought the story to a logical and emotional, sometimes
unexpected conclusion. In this next exercise, you'll have a chance to identify the critical components of act
three in your favorite films as well as develop a
third act for your story."
Pixar in a Box,The art of storytelling,3. Story structure,Advice on story structure,Advice from storytellers on structure. ,"- Best advice I have in regards
to structuring your story is work backwards, know where you want it to end. Work backwards, and then you'll know how
you need to set it up. - It's very important to expose yourself to as many ideas as possible. Books can be a treasure
trove for great stories. Reading is the foundation
for storytelling. It's always a great idea to pick up a book and find a new story. - It's good to study structure, it's good to watch a wide variety of films so that you have some foundation and some understanding of
how this would typically go. But then it's up to you
to invent the new way. Some of the greatest
filmmakers of all time, you know I think of Stanley
Kubrick, for example, his movies are very tightly
ideologically structured, but they're not, some of them
are anti-narrative sometimes. They're not narrative or he
applies narrative judiciously and he uses narrative as a tool to get you from point A to point B, but narrative isn't his focus, it's these larger ideological
feelings that he has. - You just have to think about, what is very very important to me? And I'll give a very brief personal story. I became a father late in life. I have two young daughters. And so I realized that
I have to be a good dad, kind of in a hurry, I
don't have a lot of time. So that's on my mind a lot, so at home I'm working on a story that, well hopefully it's funny,
it's a little science-fictiony, but I'm working on a story about parents who try to raise their kids
really well in a hurry. - In my life the things that
I've done that have worked out the best, are the things that
I've cared the most about and I'm willing to invest the most in and the things that don't feel like work, and the things that allow me to grow because I've pushed myself
further in their pursuit. - Just jump in, do the best you can, commit, put something
out, finish something, and then just do it again. - It is really hard to
admit that it didn't work, but you have to be willing to
come in with a wrecking ball and raze it to the ground and rebuild it, and you learned along the way, so it will get better each
time you're willing to do that. But you have to be willing to
tear it down and try again. You have to fail and get up again. In development, we always
draw the emotional arc on the wall, we actually
have these painted walls that make them whiteboards. And you can just sit in your chair, roll up to the wall and draw a big arc and then delineate
different points on the arc of what's happening for
your character emotionally. That gives it a lot of shape. - It's so important to live
in the world, live life, discover things, try
things, meet new people, try whatever you want. The world is wide open and that is where our stories come from."
Pixar in a Box,The art of storytelling,4. Visual language,Introduction to visual language,Welcome to Visual Language. ,"(upbeat music) - Hi, I'm Dean Kelly and I'm
a story artist here at Pixar. You know that old saying, a picture's worth a thousand words? Well it's true. Using simple visual
cues, you can communicate all kinds of cool ideas
and different emotions. And because of this, a single
image can tell a whole story. (boing) Let's make this scene a simple drawing, like the storyboards we create at Pixar. The first thing you'll notice is that the bigger something is in the frame the more important it is. I'm clearly the most
important thing in this frame. Choosing to put a
character in a large space, where they appear small, is one way to communicate how vulnerable they are, or how big their world is. A low angle can make me
seem commanding or menacing. I now seem a little unbalanced. Everything you see on screen is a choice. And all of it can help you tell stories. This is development art from Ratatouille. This single image clearly illustrates how important shape and
framing are to storytelling. The artist who drew this chose everything in the frame,
including the framing. Look at Remy; he's a tiny rat, but in this frame and
from this perspective, he's the same size as the chefs. See how we separate from the
kitchen with these panes. He's literally being kept from his dreams of being a chef, with these horizontal and vertical
lines boxing him in. But Remy seems equal to the chefs, which is an important story point. Shape also helps us tell stories. Take these three main characters
from Monsters University. The artist who designed
Mike, Sully and Hardscrabble show shapes that amplified
and reflected their character. Mike is essentially a ball. He's just not threatening or scary. Sully's a big rectangle; he's
sturdy and he's tough to move. You believe he can be a scarer. Hardscrabble's a bunch of triangles. She's pointy and threatening. It helps her to be
intimidating, in the film. (screeching) (rumbling) As a visual storyteller, you have a chance to guide your viewers
in all sorts of ways. Color can guide the eye. Value, or how dark or light something is, can make it stand out from
everything else in an image. In the movies size and position
in the frame also matter. They have an effect on how we feel about a character or a moment. In the Incredibles script, this scene was just two people arguing,
but the story artist used Helen's stretching abilities and Helen becomes the
powerful one in this moment, just by being larger
than Bob by stretching. But usually an artist will make a character closer
and bigger in frame. In this storyboard I drew
for Monsters University, you can see how I made
Mike dominate the frame by putting him in the
foreground, close to camera. Mike is coming into his
own as a scare coach. And I made him the biggest thing in frame, because he's the strongest character in this moment; stronger than Sully. We can communicate so many things using only visual language. In these next lessons you get to explore these ideas and use them to
help tell your own stories."
Pixar in a Box,The art of storytelling,4. Visual language,Visual line,How line is used in visual storytelling. Created by Pixar.,"(objects clacking) (lamp clanks)
(lamp chimes) - Hey, everybody. I'm Bobby Rubio. And I'm a story artist here at Pixar. Okay, so this is what we're gonna do. I'm gonna teach you some things about the basic elements of composition. Composition is the organization of visual elements in a scene. We'll focus on how we use
these visual elements, like line, shape, space,
tone, movement, and color to convey meaning and to
express emotions in our stories. And today, I'm joined by my friends from both the art and story department. - Hi, my name is Scott Morse. I'm a story artist. - I'm Albert Lozano, and I'm
a character art director. - I'm Michael Yates,
and I'm a story artist. - My name is Daniella Strijleva, and I'm a production
designer here at Pixar. - Throughout this lesson, we'll look at a few
different kinds of images that the art and story department use, storyboards, beatboards, and concept art. Storyboards are quick drawings representing a frame of the film. We put them together and
played them in sequences to visualize the film before we start doing any
fancy computer graphics. Beatboards are meant to capture beats, those key moments in your film that we discussed in the last lesson, and convey critical story points. Concept art also captures
key moments from your film. But this art is usually more
polished, done in full color, and meant to express how light and color will be used in each sequence in a film. To get started, let's look at a final frame from the movie ""Up"" and think about how the composition is used to convey meaning and emotion. - So this image in ""Up,"" by this time, we've already
seen a beautiful montage that kind of shows us the life that Carl and
Ellie have had together. They had a beautiful marriage, and this composition shows that in a way. - It really pushes you close enough to be intimate with the characters. You have the white windows, which kinda pushes you
in and moves your eye towards where he's
looking, which is Ellie. And then if you look at her
head and where it's pointing, it's going right back to him. And it keeps you really close
in this center spot here. - The minute you get
to the characters' eyes looking at each other, it creates this sort of energy that runs back and forth
between the two of them. And so, your eye is
naturally just gonna be drawn to the two of them staring at each other. All the other information
becomes secondary. You're really gonna stare at their gaze. - We're a little bit more focused on Carl and wondering how he feels about
what Ellie's going through. And probably curious as to why
Ellie's so optimistic here. - So you can see there's a lot going on when we talk about composition. But it all begins with a line. Lines can do more than you might think, because a line can have
many different qualities. For instance, you can change
the direction of a line. Which way does it point? You can also change the weight of a line. Is it thick or thin? You can vary the shape. And you can adjust the pressure
you use when drawing it. And you could use these
different qualities to express meaning. If I wanted to draw a nervous
line, I might do this. An angry line might look like this. And if I wanted to create a
sense of calm, I would do this. We use these same principles
when drawing characters or environments in our films. - [Scott] The line that's chosen here by this artist with these boards really helps to note an
organic sense of playfulness with these characters. We can see that they're
still young at heart. We can see that they still
have some energy to them. - [Albert] Daniel Lopez,
who painted this image, he used a brush and used
these sort of vibrating tones for the lines that are running up and down against the window. You could see the vibrating lines right here on the window sill. And that sort of vibration is meant to just symbolize energy outside in ""Up,"" sorta like Carl is focusing on Ellie, but she's looking out the window sill. She's almost telling Carl, ""There's still a lot of life out there. ""There's adventure to
be had no matter what, ""even though I'm secure in bed."" - Now, in this drawing from ""Cars 3,"" line is used in a slightly different way. But when you look at the character, when you look at
Lightning in this drawing, his line, even though it's rough, really conveys a sense of
motion and a sense of emotion in that he's scrambling. He's really feeling uncertain,
and he's digging harder and probably making
mistakes in his own mind. We wanted him to more than
likely feel off balance and feel a little bit scattered. You know, you'll see doubled-up
lines, tripled-up lines. You look to Lightning
first because of this. You look at how much energy
is happening around him. It gives a sense of vibration
and a sense of movement. - Yeah, so one of the interesting things that I got to work on was the abstract thought
sequence on ""Inside Out,"" where we turned the characters
basically just into line. And so, what would be the cues then, if you were three characters, and you were altering the line? What would be the cues that were left to tell you what each character was? So we decided to rely on color with line. Line could have color. But line, we thought, ""Well, wouldn't it be interesting
if line had movement?"" And so, we did a fun
assignment where we decided, ""Let's just move these lines around ""and each one could
maybe move a certain way ""and pertain to each character's traits."" So how would a sad line move? How would a sad line be colored? We also thought, ""Well, how
would a happy line move? ""If it was a joyful line,
how would that move around?"" You don't really notice it in the film, but it was fun to sort
of do this assignment. You notice it maybe for a split second, but each line does have
its own personality. - So you can see with only
a few strokes of a pen, we can build a world within
a frame, bring it to life, and even portray the
emotions of that world. In the next exercise, you will
have a chance to think more about the direction, weight, shape, and pressure of the lines. And don't worry whether you think you can
draw realistically or not, because this lesson isn't
about detailed drawings or even really good ones. Sketching is making quick
and expressive drawings that capture the essence
of character or a scene. So loosen up and have fun."
Pixar in a Box,The art of storytelling,4. Visual language,Shape ,The use of shape in visual storytelling. ,"(lamp pings) - Along with lines, shapes
are a major building block of composition and are critical to each storyboard and film frame. We begin with primitive or basic shapes, which even on their
own can imply emotions. For example, triangles can
convey action, speed, or tension. Circles appear friendly, and squares seem reliable and stable. Many of our characters and worlds begin as two or three shapes stuck together. A friendly circle on top of a strong, stable square body creates Mr. Incredible. We can take a circle, which is friendly, add a triangle, which is active, and we have Dash from the Incredibles, who is both of those things. Although we may start
with primitive shapes, they evolve in a fluid way to look more organic as we add more details. And with more detail, we can convey more information, meaning, or emotion. This leads to what we call a silhouette, which is a filled in outline of an object. Each of our characters would, hopefully, be immediately identifiable
from their silhouette. Check it out. Now let's return to the
storyboards and concept art from Up and ask our artists what they see. - With Up, we thought,
well, Carl and Ellie should play off of each other. They should almost be opposites in a way. Even though they complement,
they are opposites. And we thought, well, Carl would be this square shape here who's
basically got these drab, earth tone colors as a square. Ellie was represented by this circular, lighter shape as well, and
she'd be colored magenta. Again, she kind of looks at life through rose colored glasses was the thought. We really just wanted to start with these basic shapes for Carl and Ellie. So when you try to
think of those elements, these end up becoming the characters. Carl is still yet represented by a square and Ellie a circle. - You know, shape does a lot for us in this composition from Up. There are some really simple
ones to spot right off the bat. You have a circle or an oval. Very primitive. You have a version of a triangle. Again, it's got a gesture to it. It's leaning. It's dynamic, it's moving towards Ellie. Another triangle here with Ellie, kind of accepting those pieces. It's almost like they're two pieces of the same sort of thought. That curved circle is repeated here, which kind of helps
emphasize a stacked element in the same direction
aiming towards Carl's face. Behind Carl we have a
huge, huge rectangle, or series of rectangles that are, again, helping to draw your
eyes straight to Carl. - I really like this
example from Ratatouille of a character whose shape
is really intimidating. Anton Ego is the food critic who comes and is known to take
whole restaurants down. So the way that he's
designed, it's interesting, he's a skinny little
guy, so thin and so tall you can just see him
dominating over anyone. His head is leaning forward like he's coming over you like a vulture. There's something very funerary about him. If you look at even the way
that his office is designed, from above it looks like a coffin. I just really love that parallel between the character and the
sign that he occupies. - So for this scene, it's
the beach race scene. So the way that I use shape
here was to have a really large form that blocks out exactly
where you're supposed to look. So it feels like you're an outsider, but you also get a feel
of how fast the car is because we're so far back and you'll see him go across screen so quickly. So you have this dark
shape here that really just pushes you towards McQueen. Even the blades of grass are
all pointing towards where you're supposed to look, as
well as the flow of the fencing. We as the audience are the outsider here because he's not quite
understanding emotionally where he should be yet in the film. So the camera is also pulled away and the shapes are boxing
him in a little bit. So he feels boxed in in his mind as well. - In this panel from Cars
3, shape does a lot for us to strengthen what's
happening in Lightning's life. That's one thing that works
well in the Cars world is this idea that the characters
themselves are shapes. Traditionally, Lightning
has rounder images, rounder aspects to him. He's friendlier. He's more approachable. He's our hero. When you get to Jackson
Storm, our new character, he's a lot more angular. But there's a lot more of
a sharp dynamic quality to Jackson, and I think these
lines also help him feel faster. The dynamic shapes of where he's going. Using these primitive triangle ideas, it really gives you a
sense of moving forward. Traditionally, other
cars in the cars world are boxes or variations on boxes. They're not going anywhere. They're slow. But they also help frame the more dynamic characters that we're looking at. The curves of Lightning and
the strong angles of Storm. - As you can tell, shapes
can be used in many ways to help tell a story, and it's universal. The use of shape to convey
meaning can apply to everything. A car, a monster, a
human, or even an emotion. In this next exercise, you'll have an opportunity to think more about shape."
Pixar in a Box,The art of storytelling,4. Visual language,Space,The use of space in visual storytelling. ,"- In the last two videos,
we talked about how line and shape are used to
support storytelling. We also used visual language
to create a sense of space. If you look at this photograph, you can see how the parallel
lines of the walkway appear to get closer together
as they move further away. Also, the closest balls
are lower in the frame and appear far apart, while
the ones in the distance appear closer together in frame and are obviously much smaller. We mimic these attributes
in our story boarding to create the illusion of depth. This is known as linear perspective. By positioning the vertical lines, we can create the
illusion of space or depth like a road receding into the distance. By using heavier weight
at the bottom of the frame and lighter weight towards
the top of the frame, we can make it look like
they're getting further away. We add to the illusion using the location of elements within the frame, placing things higher to make
them appear further away. Using location as a depth
cue is even more effective when we combine it with size differences, making things smaller to make
them appear further away. Let's take a look how the
illusion of space is created in our storyboards and concept art. - I really like this image. This is, I love this
sequence of storyboards. This is when the house floats up, and the way that he created
depth in the 2D plane is by giving a vanishing
point in the background, so one point perspective
is basically showing depth at a single point, so
let's say you look here at this point and that's
your vanishing point, and then you'll have like a horizon line that goes across there, and then all of your lines
converge at that one point, so if you look over here, like, this line coming down towards there, as well as that line,
which comes towards there, and then these lines coming towards there, and this one coming towards there, and everything sort of points to that, and it gives you an easy way to see how forms will look in the distance. So like, if you look at this car, usually like when you start off, you wanna start with just blocks 'cause it's real easy to see it that way, so this is a block and
then this is a block here, and as you can see, it
gets smaller and smaller, so you have like these geometric shapes that are really simple, even up until like the
largest buildings here. They're all just simple geometric shapes. - This is a great image of concept art from The Incredibles where we see Bob, now he's no longer a
superhero and he's working in an office building
as an insurance person. One thing that I really
love about the image is that everybody gets a cube, and Bob, this amazing guy who's
supposed to be a superhero, gets the one cube with
the giant pillar in it, so space is described as like, there's an emotional
component where we talk about how he is not doing what
he's supposed to be doing, and he's not free to
do what he wants to do, and the space is telling
us that he's compressed, this giant guy, is compressed
in this tiny little space and he's sort of almost imprisoned by this space that we see here. - Now, our compositional elements
in this panel from Cars 3 really help us achieve a sense of space. This curve that's
happening in the distance, because we know that
these gridded patterns in the artist's mind are of equal length, really give us a sense of
movement around this curve. They give us a sense of space
as these bigger versions of that shape recede into smaller
versions around the curve. Again, directionals, we have
boxes that feel stagnant, maybe slower than Lightning McQueen, who's a more dynamic shape, but we've also got them all
aiming towards Lightning McQueen so we know where to look at all times, and they really help force our eye. I mean, and really force it
because of how the line work is also pushing our eye that way. - It's kind of fun to
play with what happens when you remove all of
those visual cues in space, and so the Abstract Thought
sequence became sort of a fun sequence where we
kind of really got to play with perspective and just kind
of trick your eye in a way. When there's no visual cues to tell you that there's anything around you, you're in this room where
there's no corners even, everything is just blown out,
it's just pure white light, you start thinking like,
""I know there's a wall ""here somewhere, but is
it right in front of me ""or is it like, 1,000 feet away?"" You can't even tell and
it's really disorienting, and so it's until all
these things are removed where you realize you rely
on these things every day and we rely on that for storytelling, but what happens when
you just remove it all? And so we thought with Abstract Thought, we're gonna just remove the background and all the visual cues
that you start off with in the room and just
really play with space. - It's pretty amazing that you can create an entire 3D world with
just a few lines and shapes. In the next exercise,
you'll have the opportunity to think more about space and perspective."
Pixar in a Box,The art of storytelling,4. Visual language,Motion,The use of motion in visual storytelling. ,"(soft tapping) (clicks) - Movement is obviously
a big part of films. However, since storyboards
and concept paintings are still images, they
have to suggest movement to help tell a story. In this video we'll look
how to create the illusion of movement in still images. Focusing on two specific techniques, motion lines and line of action. Motion lines extend from
an object along its pathway of motion to make it
appear like it's moving. If I was drawing a car on a racetrack I might add some lines like this. The line of action is
a little bit different. Think of this as an
imaginary line that runs down the spine of a character which indicates the force
and movement in that moment. We use this line to
imply movement by guiding the pose of the character or
in some cases other objects. Check this out. Notice we can feel movement even though the drawing is static. Now let's look at the Up
storyboards and concept art with motion in mind. - The previous panel we've
been looking at from Up where we see the house
taking off for the first time through a city, there's a lot of things about this composition
that really help us feel like even though these are static shapes that typically in our world
wouldn't move on their own, suggest a sense of
movement with this house. That directional of
the balloons fanning up helps pull the house upwards. The shape of the house
itself with the triangle pointing upwards helps
move the house upwards. The framing devices that are
happening in the background actually help move the house
through the panel as well. As the trees go from medium to large size they pull our eye forward. - And then if you look at the house, it's not quite vertical,
it's slightly askew. Which shows that it's different than all the other surroundings. Because the fact that it's flying but also it's like a character in itself. So there's like a
slightly implied movement of going upwards and to the right. - One of the fun things we
are sort of experimenting with with Ellie is even though you see her here as she's drawn with hands
on hips firmly planted on the ground, we wanted
her energy to just feel like it was pointing upwards. So we used these curves which are sort of pointing you upwards. We wanted it to sort of
play a contrast to Carl. Who has become even more square
and even more hunkered down. We wanted you to feel like age has just taken its toll on him. He's become this sort of grumpy
old man who's now burdened and sort of locked in and
just anchored to the floor. - I really like the movement in this image because it's very simple. It's like a really easy thing to do but sometimes it gets overcomplicated. If you look at McQueen here
you see how these tires are slightly diagonal,
which makes him feel like he's leaning to the right. As well as like this bottom here. And then the overall line
of action is a diagonal line going that way. And then this car that's back here's line is going that way as well. And it just makes it feel
like they're actually moving forward in space. As well as the speed lines
which are always like a really quick an easy way to indicate movement in storyboarding. And if you look at this guy back here, he's a little bit slower
than these other two. He's not quite as competitive
in this moment as they are, he's more examining the
bout, like what's going on and admiring the competition between them. So if you check him
out, his line of action is more of a vertical line. Like even the tires are very straight, which really contrasts
what they're doing here. - So this set of images
from Brave are great. The character designer
was exploring how Mum Bear would move as soon as
she turns in the bear. And of course, she was
a woman who doesn't know how big she is now. She's this gigantic bear. And this is something really important when we create characters,
the line of action. This through line that goes
from the top of the bottom of the character to kind of
tells you what the gesture and implies the movement
the character might have. Mum Bear is not very graceful yet, she doesn't quite know
what to do with her body. She doesn't know how to move and she's a little bit off balance. Now a little bit later when
Mum Bear finds her footing, she becomes really graceful. You look at these pictures
and you can just see this beautiful line of
action through the body of Mum Bear. She seems like she moves
in a very graceful way. And I really love that kind
of simplicity of design that we see in these pictures. - As we've just seen,
we can create a sense of motion with motionless images. By thinking about the
direction and the quality of our lines, as well as
the pose of the character and the objects within the frame. In the next exercise you'll have a chance to explore motion in more depth."
Pixar in a Box,The art of storytelling,4. Visual language,Tone,The use of tone in visual storytelling. ,"- In addition to line,
shape, and perspective, another tool we use to
direct the viewer's eye and support story points is
tone, also known as shading. By adjusting the lightness and darkness of all the elements in your scene, you can both lead your audience's eye and create a specific mood. Light values can feel
open, fun, or lighthearted, while dark values can create
an atmosphere of mystery, sadness, or something ominous. Another concept is contrast. It's the difference between neighboring light and dark values. Low contrast means that
there is not much difference between the light and dark values. This can create a subdued or calm mood. Higher contrast puts very dark and very light colors next to each other. This can create the feeling of excitement, drama, agitation, or conflict. Contrast also allows us
to direct the viewer's eye because our eyes naturally move first to the point of highest contrast. To see this in action, let's ask our artists how they use tone. - In this image from
Up, well, first of all, the perspective is leading your eye, the one point perspective
is leading your eye to the focal point, which is Carl's house. Everything in the
foreground is really dark, which is kind of like a framing element, and because of the lightness
of the color in the background, there's an implied
sense of like, going up. - So if you look at this image, there's basically two different values. There's the value in the background, which is this medium light gray, and it kind of pulls everything in and you have like this light area here, so when you have the contrast
between light and dark, it automatically makes
your eye look there, and the darkest point in
the image is the characters. So they have the darkest gray right next to the lightest white area, which automatically just shows you exactly where you wanna look, and then this light gray back
here kind of pulls you in from the edges of the frame to
show you where you wanna go. - It's really fun to
kind of play with tone and say, okay, these
characters are sort of dark from the background, but
that room is also really dark and how do you delineate that? Well, we thought having
this shaft of light coming from outside would
be an interesting way to sort of light these characters up, and it creates this tension point. It's almost like dark versus light and where they meet creates this energy. You can see this really strong rim light against the characters here, and that's sort of where
your eye's being drawn is to where that sort of activity
and that conflict happens. - This panel from Cars 3 really uses tone to help us understand where our eyes should be looking right off the bat, but if we just look at
the gray areas, the tone, there's a couple of
interesting things happening. We treat tone like light
in real environments here as we're doing these drawings. If you look closely, there
are a couple different shapes that are happening with the tone that help our eye know where to look. There's a huge circle
happening with the primary tone that really helps focus our eye into the high contrast
area of the whiter area where a lot of the texture of
the line work is happening. There's also, it's subtle, but there's a secondary box
of tone that is happening. It's a different dynamic shape, and again, you're using tone as shape, as a spot lit shape to help pool light, to help create a stage and
create a sense of direction for where your eyes should be looking. - With this image, I used
it a little bit differently. This one was more about the emotion, so this like a dark
moment for McQueen here. He just realized after all the
racing on the beach this day, he's not fast as he wants to be and he's not where he needs to be in order to win the race against Storm, so there's a slight gradient
from the bottom here that leads up and it almost gives you like a feeling of failure and loss. So, a gradient is basically just going from one value to another
in the same thing. So if you look at the overall
shape of McQueen here, it stays the same and
then over top, I used tone as a gradient so it's almost
like when you're shading, it goes from the darkest value
here to the lightest there, and you can see it here, so
if I was to cross hatch it, it would slowly get bigger as it goes up, so you have your darkest down
there and it slowly rises and it gives him almost like the feeling of like a haze over top
of him or like a fog that's in between him emotionally, and it makes you, the audience, feel a little bit more of
how he's feeling in his head. - In summary, using
tone, we can create mood, direct the viewer's eye,
and control what information gets revealed to the audience. In the next exercise you'll
have a chance to play with this. Go and get messy."
Pixar in a Box,The art of storytelling,4. Visual language,Color,How color is used in visual storytelling. ,"(boinging)
(clicking) - Color is an important part
of visual story telling. Like tone, color is primarily used to create mood or emotion. And direct the eye by emphasizing different
parts of the image. We have a whole lesson
on the Science of Color. So check that out if you wanna know more. (clicking)
(dinging) (tinkling) In this video we'll look at a few fundamental
ways artists use color. Let's start with the Color Wheel because it allows us to identify
Visually Similar Colors, which are close to one another, Contrasting Colors
which are further apart, and Complementary Colors which are opposite each
other on the wheel. The use of contrasting colors can really direct our attention. Notice how vibrant they feel? Now compare that to these similar colors. Notice how natural and cohesive they feel, as if they belong together? Also each color on the wheel can have a different
psychological influence. For example, this shade of blue can be used to support
a calm and relaxed mood. Compared to this red, which feels much more alarming or alert! Now let's return to our concept art and look at it from the
perspective of color. - So the color in this image, which is the color script
that was used for the film, is very specific. So if we look in the background here there's a lot of blues and cold colors, especially here with Carl,
'cause he kinda feels sad. And then if you, as you push over you start to see the warm
light come in to the frame. So from the window we have like this really
bright and vibrant yellow, and then when we get to Ellie, she's almost wrapped in
a warm, reddish tone. - We decided magenta would
sort of be her color. And so even this piece tied
onto the balloon is magenta. We wanted to sort of play against the theme of darkness and coldness which is the interior of this room, everything that's surrounding her, yet she's still full of life. - The concept art as we move
forward with this moment in Up, that blue says a lot
about him emotionally. It brings him down a little bit. It helps us feel a little bit
more somber on his behalf. We connect that balloon with Carl, and with his expression, as we're kind of looking at things here. However Ellie, on a
second look at this image, we can see how optimistic she is. We can see her powers with the color are overpowering everything in the panel. Her emotion is overpowering
everything with her colors, really bringing up a spirit
of optimism and comfort and things are gonna be
okay, ""Don't worry about me. ""I'm going on to another adventure."" - A sunset, you know a warmer light, often represents the end of something. When Carl goes home the sunset is pink. We know the pink has been the
color that represents Ellie, and the sun completely sets
and that pink color goes away. And we feel emotionally,
through the use of color, what we're supposed to
feel for the character. - For storyboarding we really
don't use color very often, unless it's a very important story point. And so one time that I did use
color was in the beach scene where I wanted to show a change in time where
he's trying really hard, is finally making some progress, but ultimately he fails. So I used the deeper reds and oranges because they make you feel, they're a little bit more passionate and a little bit more fiery. Almost like an anger or
competitive spirit that racing is. - If you look at these
images of Mr Incredible at the beginning of the film, we're talking about the golden days, you know, he's being a superhero, and his costume is represented in blue. It's pretty cool costume but it's not quite as powerful of a color. Then you go to a Mr Incredible working at Insuricare,
he's completely unhappy, the color has been
taken away from his life and from his costume. And finally when Mr Incredible
comes back as a superhero, we have a really powerful
color, this red super suit which is a lot better
than the original one. So there's a very clear progression when you look at these three pictures of, you feel emotionally how
the character is feeling and how his progression is, how his arc is in the film. - As we've seen, color is essential to our
story telling process. And so are the other
compositional elements we've explored in this lesson. All of these things work
together in our films to direct our audiences' eye, convey meaning, express emotions, and support story points. The goal of this lesson was to
open your eyes to these ideas so you can apply them to your own stories. In the final exercise you'll
work on creating a Beat Board to visualize your Story Spine
from the previous lesson. Your job is to create a
single image for each beat which captures the essential
story point of that moment. So go and have some fun."
Pixar in a Box,The art of storytelling,4. Visual language,Advice on visual language,Advice from our storytellers. ,"- So I remember for me, it
was like once I realized I wanted to do storyboarding, I would look at the end credits of films and see the names of everyone on there and sometimes I would look them up online and ask questions to them and a lot of times,
they're all really nice which is surprising. I don't think I've ever had a negative experience doing that. It's either they won't answer or they'll give you
advice for how to do it but I think it's just being
strong in your commitment of what you wanna do and
just never giving up on it and constantly pushing yourself and challenging yourself in
that field, whatever it may be. - You have to keep drawing. You have to keep drawing,
drawing, drawing. The best advice that
I have is not to look, it's great to look at films
and to look at photography, to look at other artists but
for me, it's to look at life. I carry a sketchbook. I do quick sketching. I take notes, sometimes I
don't even have to draw. It's more about observing
people, observing moments. - Remember all the bits
that you've learned about shape, line, texture. Know how they work and then do your best to forget about them by loosening up and doing
a lot of quick drawings, a lot of fast drawings and
not being afraid to fail. You're going to get out your first ideas and your first gestures and you may find
something very spontaneous that you like a lot and then you think using those elements that you've learned about
how to frame that idea by using a triangle as a dynamic shape or a square as a blocking element or a pattern of lines
as a directional device to lead your eye to that
thing that you discovered because you were drawing fast and you could go back
and capture the charm of the thing that came right
off the tip of your pencil. - Play with all of these tools
that you're learning about. Play with line, shape, color but the name of the game is
just to experiment and have fun. Play with compositions that don't work but then learn from those mistakes, think about well, why don't they work, why aren't they achieving
what I want them to achieve? I think you have to forgive yourself and just allow yourself to make mistakes and that's probably the best
advice that I could give. - When I was given an assignment, it would using be a table read first where you get the script pages
and you'd read it together with you, the director, the head of story, usually the writer as well and you kind of just
read it, you take notes, you ask questions and then after that, I would usually go back to my office and I would kinda sit for a while with my eyes closed sometimes and I would just visualize what does the scene look like to me which is basically me just
as quickly as possible and as roughly as possible doing these really
quick and small drawings about what the progression
of the scene is. So maybe there will be a car there and then this is a car there and then moving into maybe
a close-up of a car here and I'll just do this until I
go through the entire script and then I'll have a full page
of all these little squares with what they're saying
underneath it and everything there and then I'll look at
it and then I'll decide is this what I pictured in my head and then if it's not,
I'll usually scrap it and I'll do it again because it's so quick and such an easy way to do it because I'm not putting
much effort or time into it so I can see it as quick as possible and understand where the
mistakes are and how to, sometimes it's rearranging shots. So I might say, oh, I put this one here and I'll put this one over
here at the front of it and before I even move into
the storyboarding process. It's like a plan before
you move into the building of the scene. - I think that the best way
to think about these tools that we're teaching you here today is to think of them
just as that, as tools. They are the building blocks
of visual storytelling that you have to know. This is like your meat and potatoes. You have to learn how to use
these things by practicing and kind of repeating it over and over but in the back of your head, keep in mind that you're
trying to tell a story. So in a way, the best way
to use tone or perspective is asking yourself,
what am I trying to say and that will help you in knowing which ones
of these tools to use and how to use them best. - I remember during the
internship I was really shy and we had to pitch paperboards on a board with a stick in front of the whole group and whenever I would go up to pitch, I would be really quiet and
I would read the dialogue and I wouldn't look at anyone in the eye and I remember he was like, come on, Mike, you gotta be better than this. What's wrong, why can't you
just get up and pitch it? And I think he helped me to realize that when you're pitching and when you're in front of a crowd, they're not really
paying attention to you. It's more about the work. So I remember before pitches,
we would always just get amped where we'd go out in the hallway and then listen to loud music and kinda do jumping
jacks or whatever it took and then go into the room
and then they would ask who wants to go first and
then I would be in the back and I would raise my hand
and he's like, yeah, Mike, go and it was just that kind of encouragement that really helped for
later on in my career and I still kinda do those
things now before pitches. So that's always really helpful. Thanks, Bobby."
Pixar in a Box,The art of storytelling,5. Film grammar,Introduction to film grammar,Overview of film grammar. ,"- Today, we'll be discussing grammar, the system and structure of language. English grammar includes
different elements. - This is really boring. - Yeah, isn't this supposed
to be about film grammar? - Yeah, let's see if we can
do something about this. - We put these together
to communicate ideas. - Excuse me, let's start again. Just like written grammar,
film grammar is put together with different elements
that help us to communicate. - And like written grammar,
where we string a bunch of words together in a
sentence to express an idea, in film grammar, we string
a bunch of shots together in a sequence to tell a story. - We use these elements to
convey meaning and emotion because film is an emotional medium. - I bet we could use film grammar to make this lesson
connect more emotionally. - Let's do it. - Okay, we're gonna try
something different. First, let's change the
camera position and framing to convey the students' point of view. - [Robert] Then, let's stage
the shots a little differently so the teacher interacts
directly with the student. - And let's add motion so that the camera is responding to the teacher. - [Robert] Let's edit it and
see how it cuts together. - Film grammar. So the grammar, these are the words that we use to tell the story. This is film grammar. Excuse me, got your attention now, eh? - Oh gee, film grammar. (laughing) - Wow, how'd you make it so much better? - Well, let me show ya. First we changed the framing,
which part of the scene you see through the camera's
lens and from what perspective. - [Robert] And we changed the staging, the positions of the characters in the classroom and
where the action occurs. - [Rosana] In this case, staging increases the drama between the characters. We also changed the camera motion, how the camera moves in relation to the characters and the action. - [Robert] Then we edit. We string the shots together. We adjust the order, timing. We add music and sound effects. - Once you understand the
elements of film grammar, you can use them to tell your own story. - Let's show 'em how we do it at Pixar. Even a classroom scene
can feel totally different depending on the choices we make. - For instance, the framing of this scene from Inside Out starts at a high angle, which helps express how small and nervous Riley feels on her first day of school. - [Robert] And here in Wall-E,
the staging of this class shows a world where the screen is more important than the teacher. - [Rosana] In Finding
Nemo, we used camera motion to convey Nemo's point of view as he travels through
his outdoor classroom. And, in The Incredibles,
the classroom is presented as a scene within a scene. The editing here helps cast doubt on the teacher's state of mind. - [Robert] Right. Cutting to the shots of
Helen and the principal really sell their confusion
about the teacher's behavior. - Ooh, and there's this one
from Monsters University. - Oh, Rosie, Rosie, I think we're gonna have to cut with all the examples, otherwise we'll never get
to finish the film lesson. Are you okay? - Yeah, I just thought you'd look more authoritative in an upshot. - Nice, someone's been
using their film grammar."
Pixar in a Box,The art of storytelling,5. Film grammar,Major vs. minor beats,Overview of minor vs. major beats. ,"- Hi, I'm Louis Gonzales and I'm a story artist here at Pixar. I'll be your host for this lesson and I'm joined by a few friends. - My name is Lee Unkrich
and I am a director here at Pixar Animation Studios. - My name is Andrew Jimenez
I've been at Pixar since 2000 and I am a digital story board artist, graphic artist, and director. - Hi I'm Katherine Ringgold,
I'm a film editor at Pixar. - My name is Brian Kalin
O'Connell, I'm a story teller here at Pixar Animation Studios. - As you saw in the previous
video, you can make a story both interesting and
impactful using the tools of film grammar, framing,
staging, motion, and editing. But before you can
apply any of these tools you need to know, in detail,
what story you wanna tell. So let's rewind back to lesson
three on story structure. In that lesson you broke down your story using the story spine. The story spine lead to a series of beats, where each beat is a key
moment in your story. To be clear, from now on we'll call these story spine beats, major beats. When we need to understand
our stories in more detail we flushed out each of
these major beats into one or more scenes which are
collected together into sequences. A scene is the part of
the story that takes place at a particular time and
location where our character learns something new to carry
them forward in the story. For example, a major
beat in Cars 3 is when McQueen visits the Thomasville raceway. Within this major beat
we have several scenes, such as the scene where
Smokey is training McQueen. Then a scene where McQueen
races the old timers and that's followed by a scene where McQueen loses to Cruz Ramirez. Now let's hear from our
artists how they think about breaking the story down
into scenes and sequences. - In Cars 3 there is a sequence where, it's a montage, where McQueen is training. So it's lots of fast cuts and
it's changing the location of where he is but the whole
thing is him getting better and stronger and working
towards getting to his race. - And a sequence isn't always a scene, just like one localized
scene in one location. Sometimes it covers, kind of,
a particular arc of the story or section of the story that might take place in multiple locations. - But if it's a same
moment that characters are all sharing in, that's
a good place to break it or if it's a moment
where the emotional space is the same for these characters. That's a good place to also break it out. - It's interesting for me
because I know a scene, for me, gets too long
when I'm trying to pack in too many story points. And that's why it's
also what's challenging is to have an overview of your project. Because if you try to cram
too many ideas into one scene it gets too much, so
your scene has to grow. And it gets too long or
it's too much information in a short amount of time so
your audience just gets dizzy. So it think it's, to be
very clear, well what is the goal of this scene, is
really just for the character to learn this so they go do this. - When we think we're happy
with the scene breakdown we then further break each scene down into a series of smaller
ideas called minor beats. For example, the scene where
McQueen races the old timers has some minor beats like, Mcqueen begins by racing cautiously. Then McQueen discovers
he can't get ahead of the old timers so then he
learns to go and have fun which gets him past the old timer. In film making our job
is to further breakdown each minor beat into one or more shots. A shot is a visual representation of a character's action in time. For example, this clip
consists of three shots. Here's the first one, here's the second, and here's the third. And these individual
shots can take many forms. They can be very wide or very close, they can be very still
or incredibly dynamic. Once we know the shot
breakdown, we draw a storyboard. That is a sketch to represent each shot. We can change them very quickly to maximize the impact of the story. It's simply a matter of
rearranging the sketches, drawing new ones, and throwing
away ones that don't work. By the end of this lesson
you'll storyboard a sequence for your own story which will
give you a chance to practice using the tools of film grammar. But first we need to pause
and think more deeply about the story you wanna tell
including how to break it down into scenes and shots. That's the purpose of the
next set of exercises."
Pixar in a Box,The art of storytelling,5. Film grammar,Basic shot types,Overview of basic shot types. ,"- In the previous exercise,
you broke down parts of your story into a series
of minor beats and shots. Next, you need to think
about framing and staging. The setting or environment for each scene acts as the stage. And where you place your
characters in camera within the space is called staging. Over the years, a number of different shot types have been introduced to film grammar to help the audience understand the story. For example, if the story calls for a
new setting or environment to be introduced, it is common to start with the wide shot. Wide shots are staged
by placing the camera far away from your characters to give a broad perspective and understanding of a new location. Wide shots used in this
way are also called establishing shots. Establishing shots are often followed by a medium shot, like this one. Medium shots are personal, close enough to establish
emotion and conversation. Like if you were talking to a friend. When you need to punctuate
in an emotional moment or story point, closeup shots, like this one, can be very effective. These three shot types, wide, medium, and closeup are the most commonly used kinds of shots. It's important to remember that when making your shot choices you need to keep asking yourself two basic questions. What do you want the audience to know? What do you want them to feel? Now let's hear from artists
how they use these ideas. - So you've got wide shots
and medium shots and closeups. And, one of the tricks is to figure out how and when to use all of those shots within a scene. If you shot a whole scene in closeups then everything would have
kind of equal weight. Whereas if you're shooting
a scene using medium shots of people having a conversation and then somebody drops
a bombshell in the scene and you go into a big
closeup at that moment that they're making that big reveal or telling that secret, then just visually,
that moment's gonna have a lot more weight than
if you'd been shooting the entire scene in
closeups the whole time. - Every shot gives you new information that the other shot could not. One way of arranging shots, or thinking of arranging shots is going from a wide to a
medium, to a closeup. But that's not the only way. Sometimes for instance, in cars you can start with an extreme closeup and then go to a wide. It's just important to set up your shots so it's clear on what the audience needs to know and feel. Once I decide on that I have to start figuring out what the audience needs to see in order to know that. - If you take Muntz's lair, for example, in Up, we start kind of medium shotty at the
beginning of the scene when Carl and Russell are being
led up to Muntz's lair. But then when we see Muntz's lair it's a wide shot. We see this gigantic cave
and when we go into the cave we see this gigantic space inside the cave. With the wide shot you get to see how many dogs this crazy man has too. Once we get into the dining table there, it's a little closer. And, a little more intimate. So then as the scene goes on and it's clear to Carl that
Muntz is a little crazy and this is a dangerous situation there is a closeup on
Carl that is great for getting the audience to
feel what Carl's feeling. - So once you've chosen what kind of shot you want to use, you need to decide how
the image will be composed within the frame. In film, the edges of
the screen define a box or a frame. Within which your shot is being viewed. You can use what you learned
in the Visual Language lesson to help design
the visual composition within the frame. Based on what you want
the audience to know, and what you want them to feel. Framing your story points
with clarity is essential. If the audience doesn't
clearly understand the idea you're trying to communicate nothing else matters. They'll be lost. When it comes time to
deciding where in the frame your main subjects should appear the simplest thing to do is put them right in
the middle, like this. Center framing generally offers a feeling of stability, or neutrality. Another common framing choice is called the rule of thirds. Imagine breaking your frame
into equal thirds, like this. Then you frame the shot so that your subject is at
one of the four intersections. Using the rule of thirds
is a common practice for creating more interesting
and natural compositions. Use the next exercise
to become more familiar with the basic shot types and framing."
Pixar in a Box,The art of storytelling,5. Film grammar,Extreme shots,Introduction to extreme shots and angles. ,"- In the last video, we covered the basics
of framing and staging. For added emphasis and impact, it's sometimes helpful to make more dramatic use of your camera, for instance, with an extreme wide shot. These can be used to
show how big a world is, create a sense of scale, or to make details difficult to see. On the other hand, extreme close up shots are framed very tightly around the subject and can feel intensely
emotional or uncomfortable. You can also play with
shooting your action from various angles. For example, placing your camera down low and pointing it upward results
in what's called an up shot. Using an up shot can give a character a feeling of power or dominance. The opposite of an up shot is a down shot where the camera is
placed above the subject and pointed downward like this. Notice how a down shot can
make a character feel inferior, helpless or trapped. Another type of shot is
called a Dutch angle. This is where you tilt the camera to get a diagonal view of the scene. Shots like this can be used
to create a disorienting, unnatural, or off balance feeling. Let's ask our artists how
they use these types of shots. - Whether to use a low angle looking up or have the camera high looking down, I think a lot of that sort of depends on what are your characters doing. What's your character's point of view? In One Man Band, there's
a high angle shot. It's the only one in the entire film. The reason is this little girl
is looking down into a grate where a coin has fallen. We would never use that camera angle for any other part of
the movie except that because she's looking down, so we kinda want to be over
her shoulder looking down. And so it was a story point that made us use the camera in that way. In the beginning of the Incredibles, Bob is in the Incredobile
and he's hitting the buttons to transform the vehicle
and do certain things and the map system is right there. So he's poking buttons. So there's a camera kind
of low, looking up at him. The camera's kind of
where all that equipment that he's touching is. So plant your camera where it needs to be to sell that story beat of what your character is looking at. - There are also times
where you might want to go to an extreme close up of
somebody or an extreme wide shot. There's a shot in Toy Story Two where the toys are going
into Al's Toy Barn. And we went out to a really wide shot of them entering the
store for the first time, just to remind the audience
that this is a human scale store with tiny toys in it, making
their way through the store. We had to remind ourselves to show the audience that occasionally so they could feel the delight
of seeing that these are toys in a human world come to life. Conversely, there are times you want to go for extreme close ups. And that just means going
in for an extreme detail. It might be a close up of an eyeball. In Toy Story Two, we had a whole sequence where Woody is being cleaned up, including a close up of Woody's eyeball getting wiped with a Q-tip. An extreme close up of his foot with the word Andy being
kind of painted away. Those are just times
where you want to go into a tiny little detail 'cause
you're trying to communicate a very specific thing and you don't want the clutter of other
information in the frame. - I love getting lost in movies. When I see a movie for the first time, I am there for the ride. I'm completely immersed in the movie. And if there are extreme angles
that don't mean anything, I am often yanked out of the picture and I'm aware I'm watching the movie and I'm questioning why I
just saw that weird shot. - Typically, you want to
use them for emphasis. And if you're using too much of them, then it's difficult for
you to give emphasis to any specific thing. - I feel like those things need to be used very, very sparingly. In the beginning, I used to like those because those are the extreme shots. They're the exciting shots. But what I didn't realize,
I loved drawing them and I loved breaking them down
compositionally for myself, but what I didn't realize
is that on the other end when I was watching them in other movies, those extreme angles, if they're overused really pull me out. - But there might be
times that you do want to shoot everything in
an extreme close up. There are rules of film making. There are rules of film grammar. But those rules can be broken. They're not something
to stick to slavishly. But it is good to have
a good understanding of that film grammar before
you make conscious decisions about how you want to bend those rules. - You have a lot of freedom in how you use framing and staging. But remember, the most
important thing to do is to make choices that best support the emotion of your story. Use the next exercise
to get some practice."
Pixar in a Box,The art of storytelling,5. Film grammar,Dynamics shots,Learn more www.pixarinabox.org. ,"- So far in this lesson,
we've broken down a story into scenes and shots,
talked about how to stage your characters within their environment and how to use the camera to create different kinds of shots and framing. The camera so far has been locked down. That is, using a fixed
position and direction throughout the entire shot. That's a static shot. Static shots offer simple
and direct framing. They don't really draw
attention to themselves. We don't have to stick
with static shots though, we're free to move the camera
to create a dynamic shot. Using dynamic shots, you can
get a variety of effects, such as a sense of speed
or a change of focus. There are lots of different
kinds of dynamic shots, including a pan, where the camera rotates either horizontally or vertically to reveal additional information. Dolly, where the camera
moves parallel to the ground, as if moving on tracks. A zoom, where you push into or pull back from the action within the frame, or a tracking shot, where the camera follows a particular subject as it moves within the environment. - So there are the times
that you're moving the camera because you're trying to hold the action of the shot within your frame, but there also times that
you want to move your camera to give a certain feeling to the audience. If you have a character sitting in a room and talking and say,
talking about something really emotional, impactful
that happened earlier in their life, you might
want to take your camera and slowly push in on
them during their speech and by doing that, it gives a feeling of almost like the audience is leaning in and listening more closely. - So in Up, when we first meet the bird, the camera is moving really slow and the camera is tracking along with Carl as he moves very slowly. So the audience gets the sense of like, oh man, this man's journey
is going really slowly and then Russell drags his whole body and comes to a stop, plops on the ground and needs to go to the bathroom and so the journey stops
and so does the camera. - So one reason to move a camera would be to sort of reveal
information to the audience when you want it revealed. When Bob and Frozone
are sitting in the car listening to the police scanner, where you see the car and we pull back into Mirage's car, where
she's watching them, to show that this third
character that's watching them, that we didn't know was there at first, it's her point of view, watching them. - You know, there are times
where you want to have the camera like, really locked down as if it's on a tripod
and there are other times where you might want to
have the camera handheld. In Monsters Inc, we had
a sequence where the CDA, the Child Detection Agency,
bursts onto the scare floor, because you know, a child's sock has accidentally been brought
back into monster world and the scene where the CDA breaks in, I chose to shoot entirely handheld. We made the cameras all handheld throughout that scene
because I wanted to give this kind of unsettled,
spontaneous feeling. We likened it to as if a documentary crew happened to be filming on
the scare floor that day and they weren't expecting this to happen and they were all just kind
of responding spontaneously and whipping their cameras around and looking at whatever new
action that was happening and that gave a very different feeling than if we had just put
the camera on a tripod and shot it kind of static. - Always keep your audience in mind. It's not just about
making an action sequence, it's about letting the audience know, you need to feel what this
person is going through and as soon as that moment is done, you need to re-anchor your
scene into that character again and where he's at or she is at. I think it's really easy and fun to get distracted by
moving the camera around, because once again, that's super energetic and it makes things all
of a sudden dramatic but it has the ability
to lose your audience and you never, ever, ever want to do that. - As we've just heard, you
can use a moving camera in all sorts of ways. Unlike a static shot, a moving
camera can draw attention to itself, so you have to be careful not to use it as a gimmick. A moving camera can't fix a broken story. Okay, now you're ready
for the next exercise. Good luck."
Pixar in a Box,The art of storytelling,5. Film grammar,Storyboarding,Storyboarding your scene. ,"- Now that you've had some
practice with framing, staging and motion, it's time to put everything together and draw some storyboards. As we mentioned earlier, there is no one right way
to approach storyboarding. To give you a feel for how I approach it, let me demonstrate. In Ratatouille, there was a moment where
the restaurant critic, Anton Ego sits down to
order food at Gusteau's. At the start of the scene
Mustafa, the waiter, sees Ego enter the restaurant. And approaches Ego
nervously to take his order. As Ego tries to give his order, Mustafa doesn't understand what he wants. Ego stands up abruptly, makes his order clear, and then sits back down. Here's my thought process
for boarding that moment. So I want to start to
think in terms of shots, you know story telling shots. Where I'll draw simple frames. And I'll try and figure out
what's a good composition to set up what Ego is trying to do, right? Ego is trying to assert himself. Ego doubts the restaurant. So Ego is in a position of power. So I might start with
something like maybe I want to see Ego in an upshot, maybe. I don't know if that works, so I'm gonna just keep exploring. I want to find something
that feels interesting to me. I know I want a shot like this. I need to have a set up where maybe Ego is gonna be by himself. And then maybe there'll
be other tables around. Other people having a good time. Whatever it is. I just want to make sure that
Ego is the center of focus. There'll be a lot of people's backs. Whatever it is. You know if I pushed him back further and made him seem bigger than the table, which is another thing I can do. It's kinda like what they
did with Clint Eastwood. They made the door frames smaller to make him seem bigger. I might want to do the same thing. So even if I had tables around, people are gonna seem
relatively small compared to the tables or at least
maybe more in scale. But that's only because
I want to make sure Ego seems like he's the biggest. Maybe I'll kinda bring in
some sort of framing device to allow me to go okay,
all we look at is Ego, see? So I frame him. And I saw maybe I'll use that shot. So I'm gonna leave this one, maybe I'll put a check by it for myself. Now I need to figure out
more of what else can happen. I know that the waiter is gonna come in. Mustafa is gonna come in at some point. So maybe what's the dynamics between them? Maybe I want to have, and I'm drawing really rough here because I want to keep things simple. It's really important
when you draw characters to you know, Ego is kinda like
a spike of some sort, right? Maybe a vulture. He's all black with basically a white, kind of oval head like that. And Mustafa who's the other character in the scene is a little bit more doughy. A little bit more round and blocky. So I go ahead and draw them later. I know that when I'm
drawing my simple shapes, that this is something
that I wanna utilize so I can keep my drawing simple. Maybe I need an upshot, so I'm gonna try this. And what I do on an upshot is maybe I'll want to have Mustafa kinda cowering a little bit. His head is kind of in his shoulders. Maybe he's holding his hands. Even though it's an upshot, which we've talked about being a position of possible dominance, I can flip that. Meaning that I can now use size
as a way to show dominance. Maybe I'll want to go over
Ego's back altogether. And make him occupy most of the frame, and therefore when I draw Mustafa, I might have him even
though it's an upshot, I'm gonna have him a little
smaller in the frame. Giving Ego all the power of the frame. Right, it's a very uncomfortable frame. I kinda like that. I don't know if I'll use it, but I'm gonna mark it
cause I kinda like that. So I have an over for him, so now I need what's called
a complimentary shot. And that is when you have an over, you want to have a shot
that is the other side of the conversation. And by over, I mean over the shoulder. Now I need to complement that, right? I don't want to change it and go okay, now Mustafa on the flip
side is not going to be big and Ego is going to be small. I don't want to do that because
that switches the power, it's confusing. And I need to be clear. And I want to complement that shot in my over the shoulder. So instead what I might
do is something like this. And this is just me thinking. So maybe what I'll do is, I will give Ego more space, even though he might be smaller, I'm gonna give him more space. And give Mustafa less. I want to now find my climax
so to speak for my scene. Essentially when I'm
referring to the climax, what I'm looking for is
I'm looking for that moment that changes the scene, you know? There's a spike, right? When we learned earlier, the story structure goes as this. The character starts here, goes through obstacles
to a point or a climax and then there's the resolution, right? Every scene is similar to that. We want to find that change so to speak. The change I have in this scene is that there is a miscommunication between Mustafa and Ego. Ego gets frustrated and
has to get into his face or do something to get his attention that shifts the power dynamic. That we know that he's in charge. And so for this instance, I think that what I want
to do is not be tricky. You know, I don't want to be upshot, comes in the camera up like this, where maybe he'll stand up in the frame. Where the camera might move up with him. And the frame will look
something like this. So, he looks very dramatic. You know, as a one, two to the shot. You know, he stands up in the frame, he looks dynamic. Something like that oftentimes feels good, but it doesn't quite connect. And I need it to be simple and clear. So oftentimes like we talked about, simple and clear is the right medicine. And for this instance, I think that if I was
just doing a side shot, if I have my two characters like this, something like this. Maybe what I'll do is I'll kinda go ahead and have Mustafa stay neutral, but I'll have Ego get in his face. Right? So he's gonna move up and get in his face. And maybe he even cowers a little bit because Mustafa's already afraid of him. Everyone's afraid of Ego. And a quick movement like
this can really change a scene without being overly tricky. So I think I'm gonna stick with that. And on top of that, what I might do is actually punch in which is to go in a little bit closer. And now show maybe Mustafa with Ego. So I would really want
to continue that action so I really want to make
sure I emphasize it again. This is just a punch in, which means I'm taking
this set up that I have, and I'm just framing
it a little bit closer. And I have to redraw it. What it does is it gives
us emphasis, right? So as soon as he moves, we're gonna cut. And we're gonna finish
that move in this close up. Because now we go from just the action of Ego moving up to actually
seeing the expressions continue that action. So when Ego moves in the frame, and makes Mustafa lean back a little bit, we're gonna see Mustafa go from something like this to something like this. And that's my change. I think that I want to stay really simple because I don't need to be overly ambitious with this scene. Cause it's a very simple scene. So that is gonna be my climax. That's the big build. That's what I'm gonna build to. So now that I've put together
a few shots that I like, what I want to do is
find that progression. So I need to have an intro. And I think for this instance, since I've established
that centered shot of Ego, I think I'm gonna stick with that. And so my B to that might be as maybe Mustafa unknowingly
looks to the camera, or looks kind of towards camera, and gives a big sigh like oh no, I have to take this guy's order. I need to show him move. So he's gonna move away in this shot. He's gonna start to walk towards Ego. He's gonna have his head in his shoulders. He's very nervous, right? And he's gonna move in towards Ego. So now this is where I
might use camera movements. So I'm just gonna block a shot that I like that makes sense to me right now. I may not use it later but I'm gonna try. So maybe I'm gonna go
ahead and approach it, maybe some sort of side shot. Mustafa is walking towards Ego and he's gonna meet up with 'em and get into a position, something like this. He's gonna go up to take his order. I established already
that I wanted a shot, something like this. I'm gonna have Ego kind of
domineering in the shot. It's gonna be an upshot. As he takes his order, he's like, take your order? Now I need that complimentary over that I talked about earlier. And maybe I have something like this where I have Mustafa, and I'm just slightly over his shoulder. But I'm gonna give a lot
of screen space to Ego. And so the next one I go to is have Ego actually looking at him, but what I'm thinking about doing is actually pushing past Mustafa. Meaning that the camera
is gonna start to move in closer to Ego and Mustafa's
going to be become out of frame, maybe. Cause I want to emphasize
something he's saying. And he might be saying, I think the dialogue I
might have heard was, I need to order, I want perspective. And so, maybe we want to go closer now. I'm gonna a little bit
closer and have Ego here. And Mustafa still small in frame. But he's closer now, and he's like what? So, I'm gonna go back to that side shot. The one I talked about earlier. Where I'm going to have
Ego stand up in his face. And then we're gonna cut in for emphasis. When Ego gets in his face, Mustafa is gonna lean back, right? Cause that's the power. Ego dominates the frame. So he's gonna tell him. He's like, essentially give me whatever your chef thinks is the best
food he can possibly give me because I don't believe
that this place is good. So that's my turn, right? That's exactly what the
whole scene's about. I've just kinda nailed it
in my mind what it can be. And now with these roughs in mind, I can go ahead and actually
start to explore space and develop my shots that
actually work better than these. But these are a great
starting point for me. And let's see how the
final boards came out. The drawings for these final boards were pretty detailed. But when making your own boards, you don't need fancy drawings. Simple drawings are generally enough to support a good story pitch. (sighs) - Do you know what you
would like this evening sir? - Yes, I think I do. After reading a lot of overheated puffery about your new cook, you
know what I'm craving? A little perspective. That's it. I'd like some fresh, clear, well seasoned perspective. Can you suggest a good
wine to go with that? - Oh, with what sir? - Perspective. Fresh out I take it? - Uh, I'm sorry. - Don't apologize. There seems to be a shortage currently. Hence your grotesquely
undeserved reputation. Very well, I sense you're
all out of perspective and since no one else seems to have it in this bloody town, I'll make you a deal. You provide the food, I'll provide the perspective. Which would go nicely with a bottle of '82 Chateau Lafite Rothschild, thank you. - I'm afraid, your dinner selection? - Tell your chef Linguine
that I want whatever he dares to bring me. Tell him to hit me with his best shot. - Now you're ready to
storyboard your story. It takes a lot of practice, refinement and iteration. So expect to have to do it a few times before it feels just right. Keep at it and don't get discouraged."
Pixar in a Box,The art of storytelling,5. Film grammar,Advice on film grammar,Advice for storytellers. ,"- Take the most important
part of your scene and draw one image to it and then have that be pinned up on a
board or that's your bullet point of that scene and then go onto the next one. That does a couple of things. It gets you to move quickly and I think that's
important so you don't get in the weeds of focusing on one scene. You can do that one drawing that to you explains what it's about. Don't worry about pitching it yet or that that drawing conveys to five other people what it thinks. It has to convey to you what you like about that scene, then forget it, move onto the next one. Do that for say five scenes or whatever and then take a step back and look at it. And then get your friends
to see it or whatever. And then I'm always interested after doing that to see whether somebody looking at just that single
drawing for each scene, what do they think the
story's about and ask 'em, what is this about? You'll learn what you conveyed
through that single image. - So I encourage you to
on your first viewing of a movie, just enjoy it. But then go back and
watch it and analyze it and break each scene up by its shots. Figure out what the
shots are and if you have the ability, then grab those film files and cut them up, literally cut them up and try to rearrange the shots. See what that does to the scene and put it back together and figure out why the filmmaker put the film together the way they did. - I mean back when I was
in film school before there were DVDs then we had
these giant LaserDiscs and those were the very
first opportunities that people had to listen
to the director talk about the film that they had made. And luckily, that's a convention that's stuck around all these years later on DVDs and Blu-rays and I just think it's a wonderful way to get inside the filmmaker's head and hear them talk about the challenges they
faced making a movie, the ideas that they had,
what they were trying to express, where they might have failed. A lot of directors will talk
about misgivings they had or regrets that they had
about that perfect shot they just weren't able to get. And that's all fodder for learning about film grammar and
learning about the politics of running a film set or working with a film crew 'cause that's
all important stuff. It's not just about knowing film grammar and knowing how to make a film, but often times it's knowing how to best work with the crew
that you're working with and how to kind of bring out the best in the people that you're
collaborating with. - When I first got to Pixar, there was that feeling like this is the best place for storytellers, and it is the
best place for storytellers. But I feel even to this very day that I shouldn't be here (laughing). I always feel like I'm
not by myself I'm not at that level but the
trick is, no one here is. Everyone is helping each other to tell those stories and
that's the part they don't tell you in the beginning. You have to know your craft, you have to know those tools that you're developing and you're constantly
developing and honing those tools but everyone
here is supporting each other to tell those stories. - I've been at this for
almost 25 years now at Pixar and any time I start a new project, it's just as difficult as
the first one way back when. We've been telling stories in our culture for a very long time for at least a couple of thousand years and that storytelling never gets any easier. You can take seminars, you can learn about screenwriting, you can
learn about story structure. But typically the people
teaching those classes aren't actually making
anything themselves. Sometimes it just takes getting down into the trenches and making lots and lots of mistakes
and doing things wrong before you can start to do things right. It can be enormously frustrating but it's also enormously
rewarding when it all goes well. - And a shout-out to all you
female filmmakers out there. Keep on goin', we need
more girls in the field."
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Introduction to pitching and feedback,Introduction to pitching and feedback. ,"(classical music) - A good story. It had all the things I love in a book, great characters, an interesting world, a compelling plot, but I'm sure it didn't
start out this great. Sometimes a Pixar story
will start one way, and by the time it
reaches the final version you see onscreen, it's become something really different. Did you know, in early
versions of Toy Story Woody was a ventriloquist dummy and not the nicest toy in the box. - All right, all right, all right! Save your batteries people. - Or that Sulley was an aspiring dentist in the first version
of Monsters University. In early versions of Coco, our main character wasn't called Miguel. He was Sam, and he
didn't even play guitar. The film wasn't even about music. Good stories don't just pop
out of our heads fully formed. (silly music) Great stories take many tries
and often a few false starts. (silly music) Every single Pixar story is the result of imagining and re-imagining,
drawing and redrawing. But, how do you know if
your story's working? At Pixar we start by pitching, or telling, our story, early and often
in the filmmaking process. We tell the story to
ourselves in the mirror or as we drive to work. - The cowboy and a robot
and maybe another cowboy. - We pitch to that girl
from the gym whose name we're pretty sure is Nadine. We pitch to other artists. - There's the bad boy with the cat. - Pitching is a little like standup comedy but with pictures. And like standup comedy, we can gauge how our stories are doing by the reaction of the audience. Do they look confused? Do they understand what's
going on in our story? We ask for feedback. Not everyone will get
what you're going for. - I don't really get it. - Some people will really
like what you've done. - You know, I really love the cowboys. - And you may hear two
completely different opinions about your story. - Have you thought of
just having one cowboy? - By doing this process of pitching and refining our stories
we make them better. Could a drawing be clearer
or more entertaining? Does the order of the
shots need to change? We ask these questions
and edit our stories. At Pixar we always say
we don't draw movies, we redraw movies. Sharing and rethinking our
stories is a part of the process. As you start making stories of your own, don't be afraid to ask, what if? - What if there was a dog in this? - And keep pushing for the
best story you can make. (old Hollywood music)"
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Pitching,Introduction to pitching. ,"- Hi, I'm Madeline Sharafian, you saw me briefly in the previous video. I'll be leading you through
the rest of this lesson on pitching, feedback and editorial. I'm a story artist here at Pixar and as usual, for this
lesson, I'll be joined by few other artists and editors. - Hi, I'm Bob Peterson,
I'm a writer at Pixar. - Axel Geddes, I am a film editor. - Anna Wolitzky, I am an editor. - Hi, I'm Domi, and you
may remember me from the first lesson on story telling. - As you saw in the previous video, you pitch your story
to people to understand what's working and what's not. And like so many other aspects
of creating a great story, getting good at pitching
takes a lot of practice. Andrew Stanton is a master at pitching, let's take a look at
one of his first pitches of Finding Nemo. - And he's woken up by his
six year old son, Nemo, who's now with a withered
fin, it's from the accident with the barracuda and he
swims really erratically and strangely but today
he's ping-ponging all over the place because today's
the first day of school. And he's all psyched and this is the day that he's been waiting for and this is the day his
father's been dreading because his untrust, his lack of trust, his fear of the ocean, everything is just coming to the surface because Nemo has Mr. Ray,
who's the science eccentric stingray teacher who likes
to bring all the kids out on a field trip to the reef
on the first day of school. And so father's just
nervously taking Nemo along and Nemo's just all excited
asking all these questions. Ah, maybe we'll see sharks
dad, you know sharks? No, no, and I don't plan on meeting any. Well how about sea turtles? Sandy Plankton said sea turtles
grow to be 350 years old. Well, I'm sure Sandy
Plankton's exaggerating, but if I ever meet one I'll ask them. And then they finally
make it to the school, Mr. Ray comes, all the kids get on top and father has to nervously watch and float with the other
parents as they go off and disappear into the reef. And he can't hide his anxiety, and the other parents all elbow him and go ""Ah, don't worry, most
of 'em will make it back. ""Ah, yeah, don't worry. ""I remember my first time at the Drop Off, ""oh boy did that scare me."" Father says, ""The Drop Off? ""They're going to the Drop Off? ""They can't go to the drop
off, that's too dangerous. ""Nemo can't swim!"" He panics and he goes off into the reef. - Notice how Andrew let the story unfold one element at a time. You may have also noticed that he used his personal energy to create a dramatic and emotional atmosphere. You might even wanna rewind
and watch the clip again, paying attention to how he used his voice and body movements to help
communicate the story. By far, the most common type of pitching we do at Pixar is does
by story artists like me. We repeatedly pitch
storyboards to the director as well as to each other, in an effort to make the
story better and better. Here's Valerie LaPointe pitching boards that she drew for Inside Out. - Oh my gosh, why have we
never been here before? He's like, uh, because mom and dad have been keeping this from us. (growls) - She was playing the role of
several different characters, reading their lines of
dialogue, and using changes in her voice to make each
character distinctive. All these elements help
your audience understand important story points,
including what the characters are feeling. Now when you're pitching,
don't feel like you have to describe every detail of your drawings, they can mostly speak for themselves. You'll want to use descriptive language to lead your listeners
to use their imaginations to fill in the details that
aren't shown in the boards. For example, you might want to say ""a shadowy figure slowly enters the room,"" rather than ""a guy walks in."" Descriptive language helps, but you'll also wanna
pay attention to pacing. That is how quickly or
slowly you tell the story. You might wanna push through
an action clip pretty quickly while during a moodier period
you might wanna slow down, letting each moment breathe
and holding on a single drawing for added emphasis. Story artists each have their own style and approach to pitching. Let's get some addition
tips from our artists. - The best advice I've
ever gotten for pitching is to just be super, super
excited about whatever you're pitching to your audience. Don't be afraid that you're
gonna embarrass yourself, just be all in it and your
energy will be infectious and it'll get people
really, really into it. - So when you're pitching,
you want to let it flow. You want the movie to feel like the movie. And so that means not over explaining. Like I've been in pitches where
people will start in and say ""okay, so he's walking down the street, ""and okay, well this
isn't exactly the street ""it'll be in and you know,
that shadow won't be there ""and of course he's wearing glasses ""and he won't be wearing glasses ""and I should've used a
number two pencil for that ""and I didn't and it
should have been a Tom Bo, ""so anyway, he's walking down the street."" Y'know, it's like get to it. It's like one day Sully's
walking down the street, here comes Mike, ""What
are you doing, Sully? ""What are you doing?"" ""Oh Mike, quiet."" Y'know, you keep 'er
going, you keep it flowing. If you get to a place
where people are sitting up and laughing it means that
you're not just reading you are performing. - And the second thing
is just to practice. Practice in front of a mirror, practice with your super, super
close colleagues and friends and the more you talk
about it the more you say the pitch over and over again the easier it is and then
the less you'll be stumbling with your words, the more
you'll just be focusing on trying to communicate
this idea to the person in front of you. - I certainly practice it out loud. I'll sit at my desk and
I'll step through the images and perform them. Sometimes it helps to look in a mirror, but I'll do it five, six, seven times, and when you do it a
lot, you start feeling the rhythms of it and
that's very important that it's not just even
that it can slow down, speed up, what you want
is some texture in there. And with texture comes change and with that change oftentimes
you'll feel something, you'll go from happy to
sad, or sad to sleepy, but you wanna feel the changes as you go and that comes from rehearsal. - There's lots of
techniques people can do, like maybe do something to get the energy outside of yourself so
you're not building it all in so when pitch you're not just like blah! Like blurting out all the words that have been building up inside of you. I just like going to the bathroom, you can psych yourself up
in front of the mirror, just take a couple breaths,
breathing is really important and then just know that the
people that you're pitching in front of don't hate
you, nothing terrible is gonna happen if you
stumble and they're here to listen to your ideas
and they're excited about what you have to say and your story and just know that the
room is gonna be positive and just don't worry too much about it. The worst that can happen is you'd have to repeat yourself or you
stumble but that's fine, it's not gonna make them hate you. I kinda run through those things in my head over and over again and then I just take a couple breaths and I try to clear my mind
and then I just go in. - There's quite a bit to
think about when you're giving a pitch, so it takes practice. Use the next exercise to get started."
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Giving feedback,How to give constructive feedback. ,"- Welcome back. In the last video, we
talked about pitching as a way to improve a story. The most important part of the pitch is the feedback given by
those listening to the pitch and that's what we'll focus
on in this video, feedback. When you are pitching, there
may be parts of the story that are clear to you but not clear to those hearing
the story for the first time. That's why feedback is important. You learn what parts of your
story need to be clearer. After listening to a pitch, the feedback you give
helps the storyteller understand what's working and what's not. The more clear and articulate you can be, the more you can help the storyteller see how their story is perceived. So what should you listen
for when hearing a pitch? - When I'm listening to a pitch, I try to identify what the
storyteller wants to say with the idea like what
is the point of the story? - The way that they say the lines and so that it also
gives me an understanding as to why they drew the
character in a certain way so that I understand maybe how
I'm gonna time out that shot or what the intent is there or the energy level is for the scene which might give me an
idea what kind of music I'm gonna use or something. - When a story artist pitches
a three or four minute scene, we as editors wanna see
how that small scene will be incorporated
into the bigger picture. - Because you're looking at only one chunk of a film called a sequence and usually it's based on
whatever location you're in. So you have to go into it thinking, what's the beginning point
and what's the end point? Okay, I've got my brain there. Now, let's watch this. But mainly, you're listening
for performance and pacing and whether it's working
within the body of the film. - Once you figure out what
was clear and what wasn't and what was entertaining and what wasn't, it's time to give that
feedback to the storyteller and it can be tricky
to give honest feedback in a way that leaves the
storyteller energized to make changes rather
than feeling beaten up. Pixar artists have
developed a few strategies to make giving feedback
a positive experience. First, start with the positive by giving specific examples
of things that you liked, things that are working particularly well. - One thing we try to keep in
mind is the feedback sandwich. You start with something positive about the pitch that you really liked and that kind of breaks the ice for you to insert any constructive
feedback that you have for the storyteller and then you end it with
something positive again. So you kind of end on a high note and that's the feedback sandwich and it's easy for the filmmaker to digest because it's a sandwich. - When someone's pitching and
I'm there giving feedback, I have to go into it
knowing that that person worked really hard on this thing and they might have
worked late in the night and not seen their kids and so you wanna go into
it with a sense of respect for the artist. - You're more likely to listen to feedback if you feel like the person
who's giving you the feedback is on your side and has the same goal of creating something great and greater than one person
can create on their own. - Second, make it personal. That is, make it clear this
is your personal perspective. - When giving feedback, it's important that it comes
from your own point of view and it's good to use I statements. I didn't understand that. I thought this could be more clear. - I wasn't sure what you
were trying to convey here. - As opposed to saying, nobody's
ever gonna understand that or you didn't make it clear. - Nobody's gonna get that message, nobody's going to understand that because that's just
fundamentally not true. You don't know what everybody
else is going to understand. - Because everyone has an opinion and what's obvious to one person may not be obvious to another. - Third, be specific. - When you give specific feedback, it really helps the person to be able to do something with it, right? They can actually make
changes in their work. - When you give feedback
like it's not funny then it's not really
helpful for the filmmaker but if you say something like it'll be so much funnier
if you change the timing of the punchline one millisecond sooner or instead of this gesture,
it's a bigger gesture like those specific things that the director or the
filmmaker can actually use to address your note. That's always super helpful. - And so if you can be
specific and know what you want even though it may be wrong,
at least they have a direction. - And fourth, make suggestions
for the storyteller to consider as opposed to dictating what you think should happen. - So when giving feedback, it's important not to
dictate to the artist what you think is the solution. There could be a number of solutions. - Or ask a question like ask
for clarification like what, what was your intent when
the character said xyz? - What were you trying
to do with this area or what were you trying to, what were you hoping to achieve
with the ending of that, of this story and that kind of releases
the burden off of you to provide the solution for one but also, it kinda gets the
director or the storyteller to start thinking about, oh,
what am I trying to do here and then they can figure
it out for themselves. - So questions again involve
the pitcher in the process. - Ultimately, it is your job as the person providing the feedback to identify problems with the story rather than to fix those problems. Feel free to offer suggestions but solving the problems is
the job of the storyteller. The next exercise asks you to
work on your feedback skills with a few friends."
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Digesting feedback,Feedback and notes. ,"- In the last video, we
talked about how people listening to a pitch provide
feedback to the storyteller. Now, we're going to turn the tables and look at the feedback process from the point of view of the storyteller, the one receiving the feedback. At Pixar, we call each piece
of feedback you receive a note. Receiving critical feedback can
be really, really difficult. You've worked really hard pouring your heart and
soul into your pitch only to be met with criticism. So it's important to get
comfortable with criticism. - When I'm editing a sequence, I find it helpful to ask for
the opinion of people I trust and it's always helpful to get feedback. I don't take it personally. I find it very useful. The reason they're giving me feedback is only to improve the scene and that's what everyone wants to do when we're collaborating
together on making a film. - When someone says,
this just isn't working, this is too long, it's not funny, that's the one that used
to kill me, it's not funny. I tried to make it funny. I thought it was gonna be funny and then here it is and no one laughs. Everyone's just sitting, staring at you and you can hear grass grow
and snails crawl at that point because it's just, it's
excruciating but that's okay. Everyone goes through it. - Originally, I think I got confused and thought that it was about
me but it's not about me. It's about the movie. If the feedback, the notes are about a way to make the film better then everybody wins and it doesn't help for
me to get my ego involved to defend something that doesn't work just because it was my idea. - The important thing is to remember that the purpose of the feedback is to make your story even better. Try not to take it personally
but rather focus on the work. At Pixar, everyone is working
to make the story better. Not taking criticism
personally is so important, it has become a mantra. Focus on the work, not the person. After you've gotten notes, start by taking a step
back to analyze them. Different artists approach
this in different ways. - The main thing after a pitch is you just gotta come down off of it because you're sweating,
your heart is pounding because you are performing your work in front of a lot of people and so the main thing is just
find a way to relax afterwards and for me, I used to go shoot
around, shoot some hoops. - Sleeping on it also helps too. Putting some distance between
you and your work really helps 'cause you can be staring at something. For me, if I work on a drawing
for more than a couple hours, I start to hate it no matter what and I just need to put some
space between me and it. So that usually helps
too just to take a break. - And so you sit down and
you look at the boards that you've done and you
think about questions. What could I do to make this clearer? What could I do to make this funnier? And for me, a lot of this
comes down to list making. I'll just sit and make lists. What could be funnier? I will just sit and
come up with 100 things and just don't even think
about it, just write it down to see if I can conjure up
something that's funnier. - Some notes might be easy to address and some might be harder. I like to start with the easy notes first like what if you made this
character bigger in the frame or how about swapping these two drawings? Addressing the easy notes first helps me feel like I'm making progress and gives me more courage to tackle the more difficult issues later. When considering suggested
changes, make sure they stay true to what you're trying
to say in your story. Keep in mind that your
job as a storyteller is not to respond to each individual note but rather look for
the spirit of the note, the underlying problem
the note is a reaction to. - There's oftentimes a lot of
ways to solve these problems but what's the spirit of the note and usually the spirit of
the note's something like, the clarity's not there or the emotional heft between
two characters is not there. Well, I wanna show emotional heft. There's 10 ways to do it and especially if you as a story artist can bring something of
your own unique self to solving that, that's great. - So for example, on Incredibles, Brad was getting a lot of
notes and a lot of feedback for this one particular
shot in The Incredibles where Bob and Helen are having
an argument about the family and for a long time, the feedback was that Bob looked like he was domineering and overpowering Helen and it felt wrong to the audience. They felt like Bob was
too aggressive to Helen. So the feedback suggestions was maybe they could be on the beach or in a different location but really, Brad looked
at the spirit of the note which was the two characters visually didn't seem like they
were on the same level but in his head, they
were on the same level. He just had to convey that visually. So what you will see in the final movie is that when she yells at
him, it's not about you, she grows physically and
she becomes taller than him and that was the only
thing that Brad changed and the feedback afterwards
was great and it wasn't, he didn't do exactly what
the notes told him to do. He just looked at the spirit of the note and he addressed it and
he fixed the problem. - Once you've revised your
story and your drawings, it's time to repitch. Don't be surprised if you have
to pitch, revise and repitch a few times before it feels right. Andrew Stanton likes to say,
fail early and fail often. The more you pitch, the
better your story will become."
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Storyreels,Introduction to storyreels. ,"(upbeat jingle) - Once a pitch of the
scene has been approved by the director, it moves out of the story
department and into editorial. Editors take the storyboards,
add recorded dialogue, sound effects, and music
to create a story reel, which is a rough draft of
the film in video form. As an example, here's a short clip of a story reel from Inside Out. - First day of school,
very, very exciting. I was up late last night
figuring out a new plan. Here it is. Fear.
- Huh! - I need a list of all the
possible negative outcomes on the first day at a new school. - Way ahead of you there. Does anyone know how to spell meteor? - Disgust, make sure
Riley stands out today but also blends in. - The story reel is the very first version of the final film. This is where everything we've talked about during this season at
Pixar in a Box comes together, character development, story
structure, visual language, film grammar, storyboarding, and pitching. Piecing and timing are
particularly important in the reel, that is how long to hold
on to each storyboard, how the dialogue should
support the visuals, and how the mood and rhythm of the music and sound effects adds
to the emotional impact. Although animation is visual storytelling, as we'll hear in a second,
you might be surprised by how big a role sound plays. - When I have the boards for
the first time for a sequence, I have to start building out all the sound that goes with it. Until you add the sound and
you time out the boards, it's just drawings, you know, and the sound and the dialogue and the timing of the boards
are what bring it to life and make it feel like a movie. - When I have my storyboards and I'm starting to edit a sequence, depending on what type of scene it is, I often start with the dialogue, and I time that out, and then I add the
storyboards on top of that, and I time them out so that they work well with the dialogue, and once I feel that the storyboards and the dialogue are working well, I begin to add sound effects. (knocking) Once I have the sound effects working, I play that back. I look at it, and if that feels good, then I start to think about adding music. (chiming) - So that you can time out the scene and you can feel what it's like
for these characters to talk to each other so we can emulate what the movie-going experience is so that we can sit back
and watch the entire movie as it is and decide
whether this is the movie that we want to make, you know, and we do that about eight or nine times of the entire movie before we
even start animating anything. - When all of this is
working well together, after the first few minutes, you forget that you're watching drawings. You just get caught up in the story. That's what we're shooting
for, but it takes a lot of iteration to get the story
just right in story reel form, and this requires a lot of collaboration between
story artists and editors. So let's hear a little more
about that relationship. - So you've pitched your
sequence, and everyone fell out of their chairs laughing,
and the director says, ""Down to editorial with it,"" and so all your drawings are
either scanned or sent down to editorial where they're
edited and music is placed and temporary dialogue is placed on them, and then you all sit around
anticipating a great sequence, and you watch it, and it
dies, and it flat lines, and you ask yourself why
it was so funny before. - It looks and feels completely different than the version that you pitched, and you wonder what happened. - We make a joke about it now, but there was a while where you go like, ""What happened? ""It Was so funny over in story. ""How come it's not funny anymore?"" - And it's really hard to
say, but moving something in, it's like a different media. You're up acting and
performing to something that you're just passively watching. - And sometimes it's just timing, too. Like, a drawing could
be really, really funny when you linger on it, but
if you cut away from it by just a millisecond or you
linger on it for too long, then the comedy of it
kind of dies a little bit. - The reason that we have
screenings, that we look at the movie in context
every once in a while, whatever 12 to 16 weeks, is to test whether the pitch is funny or entertaining or heartfelt because the person who's pitching
it is funny, entertaining, or heartfelt, or is it truly a great idea that really conveys emotion to the person who's gonna be watching it
in the theaters eventually. - You can see that many
elements of storytelling and filmmaking come
together in the story reel. In fact, editorial is always responsible for the latest version of the movie. You might say they are
the keepers of the cut. One question I've always
had is how editors work with directors. - I had my first director
review with Andrew Stanton, and I played him back the scene, and he then told me this
really kind of great piece of advice, which was he said, ""As an animation editor, ""before you can even
start editing the scene, ""you have to craft the performance."" The performance is the
timing of the storyboard juxtaposed with the sound
that the character is making, whether it's a sound effect
like WALL-E had or a line of dialogue like Dory would have, and you have to empathize with what the character is thinking and what they are going through in that particular moment
to be able to understand what their point of view is and why are they making the
decisions they're making at that particular moment. So you do that first, right, and then you can really
start evaluating the scene, and so I took another pass at the sequence and showed it to him the next day. It was a huge improvement because I finally
understood what my job was, and I still am using
that knowledge every day when I approach a scene. - Now that you have a sense
of how story reels work, it's your turn to create a story reel of a sequence from your own film. To do this, you don't need
fancy editing software. Freely available editing packages, some of which are on
Smartphones, are enough, and that brings us to
the end of this season of Pixar in a Box on storytelling. Everyone has important stories to tell. We hope you now feel
like you have the tools to find your own unique
storytelling voice. Take a look at the next exercise. Then be sure to check out the last video in this lesson for a special treat."
Pixar in a Box,The art of storytelling,6. Pitching and feedback,Advice on editing,Advice on editing. ,"- Editing is a craft that takes
years to learn and perfect and any editor will tell you
that they're still doing it. So the best thing you can
do is just keep at it, keep practicing. - Cut as much as you possibly
can as frequently as possible. Go out and shoot stuff
just so you can cut it. Give yourself a task and give
yourself some constraints and get a smartphone, get some, download some free software or some inexpensive software and just cut. Cut and cut and cut. Try things. Try juxtaposing images. Try putting music over things. Just feel it out and experiment and don't, say I wanna tell a story
with these three things and then try it or say I don't
care if it makes any sense, I just wanna feel this. Just cut. The more you work on your
craft, the better you get at it. - And be tenacious. Tenacious beats talent. In other words, the more you want it, the stronger you go after it. It's more important
than if you're talented. - The more you work on something, the better you feel about it. The more you apply yourself to it, the prouder you are of it and this is the part that
can be hard to remember. The harder the problem is
that you have to solve, the more proud you are of the solution that you come up with. - If you're drawing to get
a job, that's not good. You gotta draw for yourself. You gotta draw sort of based
on your inner feelings. If you're thinking, if I draw this amount, I'm gonna get in Pixar, that doesn't help. You wanna look around and
find the truth around you, find what's funny. If you're in your
basement all day drawing, that's not good either. You need to get out. - Listen and watch and
read other stories too just to immerse yourself in
different kinds of stories. - It's great to watch a lot of movies, think critically about the scenes, see what's working, what's not. When you are watching a movie,
think about how does this, listen to the sounds. Think about how the sound
is helping the storytelling. - Putting yourself outside
of your comfort zone has always benefited me
creatively and personally and it kinda just opens up your mind to different ideas and points of view. - One thing that helped me was
that I was a camp counselor at a summer camp one summer and it got me out of
drawing in my basement and those experiences have
helped my films amazingly. The opening line for Dug in Up is I have just met you and I love you and that's taken from
a kid who ran up to me at summer camp and said, didn't know me, little kid,
you're my counselor, I love you like that and all these things that
you can sorta store up and they come back into
your work all the time. So get out and experience the world but bring your sketchbook. - And the world is changing too. I think a lot of girls are
applying for animation schools. Right now, the enrollment
is about 70% girls in a lot of animation schools. So the landscape's
changing which is awesome and for me, I found a lot of inspiration from a lot of online artists,
lot of online female artists. I think it's not just
the people around you. Now, with the internet, it's like we're connected
with the whole world so you're bound to find a lot
of like-minded people like you anywhere in the world too and it's a great feeling to
feel like you're not alone. Yeah."
Pixar in a Box,The art of lighting,Introduction to lighting,Art of lighting overview,Introduction to the art of lighting. ,"- My name is Charu Clark
and I'm a lighter at Pixar. I wanted to tell you about
some of the lighting techniques we use in our films. But first we should clarify
something that confuses a lot of people, including my parents. Computer animated films use
lights and lighters just like any other film. In a live action set like
this one, everything you see is illuminated by some
kind of light source. If there's no light,
you don't see anything. It's exactly the same in our films. The difference is that our
lights are virtual digital lights just like the characters
and the virtual camera. This means that we do get
complete control over the light, which is super cool because
we use light to evoke very specific mood and story
points in every single shot in a movie. One critical aspect of lighting
in our films is choosing the light intensity and size. A larger light will create a
softer more diffused image, softer shadows, whereas a
harsher more focused light source can create more tension in a shot. Another very critical aspect
of light is its color which is measured in temperature. A cooler, bluer light can
create a cold feeling, whereas a warm, soft more
orange light can create a friendlier, open atmosphere. Another technique is the
directionality of light, where you put the light in a scene. A front lit character can appear
more open and approachable, a character who's back lit
can appear dark and dangerous. A bottom lit character can appear spooky. If they're top lit they
can feel like they're being interrogated. We use all of these lighting
techniques to heighten both the look and
emotional aspect of a shot. Here for example are some
shots from Incredibles 2. You notice we use two very
different lighting setups. In the first instance, Violet
approaches Tony and realizes he has forgotten about their
date and barely remembers her, now this is a very
common scene, a long sterile hallway with a line up of lockers. The light sources are blue
overhead fluorescent lights that makes a hallway feel
like a sterile almost hospital-like environment
and makes the audience feel unsettled and uncomfortable. Similar to what Violet is feeling. Now contrast this with later
in the film where Violet and Tony interact in
a stairwell at school. It's a happier moment and
the two of them make a new connection, the main light
source is a warm and soft outdoor sun filtering
in through the trees. The lighting feels friendly
and keep in with the emotional state of the characters. That's the emotional story
point and we want to feel it in every aspect including the lighting."
Pixar in a Box,The art of lighting,Introduction to lighting,Light quality,"Introduction to light quality (intensity, color, softness). ","- Hi, my name is Kim
White and I'm a director of photography for lighting here at Pixar, or DP for short. The main job of a DP is to
direct the lighting on a movie. I'll be your host for this
lesson on the art of lighting. We'll explore how lighting is done in both physical and virtual scenes. By the end of this lesson,
you'll have a chance to set the lights for actual Pixar shots. But before we start I
should warn you that there are spoilers ahead for Toy Story 3, Coco and the Incredibles 2
so you may want to watch those movies before starting this lesson. Okay let's get started. In order to know how virtual lights work, it helps to understand how lights in our physical world behave. So let's start this lesson
by learning about real lights using a simple, real world exercise. To do this exercise, you
will use a basic scene. Two white walls and a white floor with a white ball in the middle. You can construct this scene
a couple of different ways. One way is to tape two
pieces of white foam core along one edge to make
your walls and sit them on a white piece of paper for the floor. For your light source,
you can use anything but a flashlight, desk light
or clip light would work well. The light source that you
choose and where you place it will influence the kind
of light that it provides. You could call this the
quality of the light. There are three main
aspects of light quality we'll cover in this lesson. Intensity, color and softness. Intensity is how bright it is. This depends on the power of the light but we can also change
the intensity by moving our light closer or further
away from the subject. Another way to change
the intensity is to put a piece of paper or cloth
in front of the light. Softness is defined by
how harsh the light is. You can see this in how
soft the shadows are from the light and how the
light falls away on the surface. This depends on the size of our light relative to the subject. For example, a small light
like this will cast sharp shadows and fall away more
quickly around the surface. While a larger light
will cast softer shadows and fall off more gradually. There's also a trick filmmakers
use to make a smaller light source act like a larger one. They bounce the light
off of a bright surface which turns the surface
into a large light source. Notice the shadows are much softer because the light source is larger. Finally, let's talk about
the color of a light source. To change the color of the
light, we can put a filter in front of it such as a
piece of colored cloth, plastic or paper like this. Another way to change
the color is to bounce it off of a colored surface. For example, let's add two
colored walls to our scene. Watch what happens to the light as it bounces off each wall. Observe the change in
colors to light and shadows. Notice how the ball is
picking up some of the blue bounce light from the
left wall and the shadow of the ball is getting red
light from the back wall. As you can see, depending
on how we use our light, we can change it's
quality such as intensity, color and softness. In this first exercise,
you'll build this lighting box and observe the effects of the lighting, drawing what you see. However, it's important
to know that the goal of this exercise is not
about making beautiful, well-drawn images, it's about learning to observe light and shadow. Enjoy!"
Pixar in a Box,The art of lighting,Introduction to lighting,Light roles,Overview of how lights are used. ,"(tapping on table) (bell ringing) - In the last exercise,
you developed your sense of light and shadow
quality by paying attention to intensity, softness, and color. Now let's think about the various roles that light can play when lighting a scene. In photography and
filmmaking we define a light by how it is being used. And since those are common
terms in those industries, it's useful to know them. To see the different ways lights are used, let's break down the shot and look at the lights one at a time. Key, fill, bounce, rim, and kick. First, let's turn off
everything except this light. This is the key light, and it's the main shaping
light in the scene. By shaping, we mean it helps
things look dimensional. Let's return to our light
box and try this out. I'm going to swap out
my ball with an orange for this exercise and here's my light in a typical key light position. Now let's return to our scene
and turn on another light, the fill light. Here's what the scene looks
like with only the fill light. This light adds light into the
shadows and reduces contrast. One example of a fill light is a light that we get from the sky. It's usually a softer light, and so it doesn't have
strong shaping and shadows the way a key light does. Let's return to our light
box again and try this out. Here's what it looks like if I add a fill light to the scene. And here is just the fill light by itself. (light switch clicking off) Now let's return to our virtual example and turn on a new light, the bounce light. This light bounces off of surfaces and gets cast back into the scene. This happens naturally,
like when light bounces off of a wall, a table,
the floor, or even a shirt. Since light automatically
bounces around a scene we sometimes want to exaggerate it or simply add extra light to the subject. The way to do this is
by bouncing the light off a white card that
is off camera like this. Another light that we sometimes
use is called a rim light. Rim lights are used to
help carve something out from the background by outlining
it with a rim of light. This is done by pointing
the light into the camera from behind the subject. To create a rim light on the orange, I'll place my light over here like this. Finally, we can also create
what's called a kick light. Here's our scene with a kick light only. Like the rim light, the
kick light can be used to help separate the
subject from the background. This light, however, is
brought around a little more to the side of the character and rather than being an outline, gives extra shaping to the subject. To create a kick light on the orange I'll move my light over
to the side like this. Sometimes, but not always,
a kick light is coming from something in the
set, such as a window or the sun behind the subject. OK, those are the main roles
that we are going to cover in this lesson. Let's see all these
lights turned on together. Key, fill, bounce, rim, and kick. In the next exercise, you'll have a chance to explore these basic
ideas with something that we ask many people at Pixar
to try, lighting an orange. Good luck."
Pixar in a Box,The art of lighting,Introduction to lighting,Virtual lights,Introduction to virtual lighting. ,"- Now that you've gotten a feel for lighting in the real world, it's time to get your hands
on some virtual lights. In the next exercise,
we have a lighting tool which will allow you to experiment with lighting an orange
in a virtual environment. You'll be able to change
the position, intensity, size and color of a virtual light. The first two sliders allow
you to adjust the horizontal and vertical position
of the light, like this. The next slider allows you to adjust the intensity of the light. Below that we have light size. Notice the effect it has on the lit areas as well as the shadow. As we increase the size of the light, the edges of the shadow blur and the light softens on the surfaces. Finally, we can adjust
the color of the light from deep red to deep blue. If you don't want any color,
simply set this to white. In this next exercise, you can experiment with these different
parameters in order to answer a few challenge questions we have for you. Have fun!"
Pixar in a Box,The art of lighting,Introduction to lighting,Character Lighting,Our approach to character lighting. ,"(spring bouncing) - Now let's talk about
one of the most important things that we do in lighting at Pixar, lighting characters. Oftentimes, character lighting is used not just to light the character
and make them look good, but to say something about them or their situation in the story. That's what this video is all about. For example, in this
moment in Toy Story 3, Buzz is lit with only a rim light at the beginning of the shot, even though Jessie has a key light on her. Then, he steps into the key light at the end of the shot. This was done to make
his reveal as dramatic and threatening as possible. And in this example,
the monkey is underlit. The key light is coming from below him so that he looks scary and threatening. Compare this to the scene where the light is bouncing off the floor from the window, lighting the characters from below. In this case, even though the light is coming from underneath them, it is kept soft and is balanced out with the other lights in this scene. So that instead of feeling scary, the lighting feels sad. And in this example,
Joy is the light source and her warm light
shining back onto Sadness helps draw them together in the shot. We can see how close Joy is to Sadness and her light draws them together and underscores the intimacy between them in this moment. To better understand how this happens, I brought Danielle and Erik to tell us how they use lighting to bring characters to life here at Pixar. - I'm Danielle Feinberg and I'm a Director of
Photography for Lighting. - My name is Erik Smitt and I was the Director of
Photography for Lighting on the Incredibles 2. - So one of the things we
can do in character lighting is to really sell, sort of,
the emotion of a character or the emotion of a moment
in interesting ways. And so there's this
really fun moment in Coco where it's really the, the sort of, crux of
the whole story shifts and it's up until this
point we've thought that Ernesto de la Cruz is this very famous Mexican musician, and he's Miguel's hero,
and this wonderful guy. And they walk in together
and Miguel's having this evening with de la Cruz, his hero, and there's a pool nearby. And so he's getting this nice
soft, sort of, green light along with some candle light, and the general light in
the room is sort of purple. And it's all sort of softly
lit and they look appealing. And then as the scene goes on we reveal that de la Cruz is actually this totally evil guy. And so by the end of the scene de la Cruz has walked over near the pool and so 'stead of this
soft, sorta, green light, he now has this underlit harsh green light and it's sort of like if
you're telling a ghost story and you underlight
yourself with the light. And so that was the way
we used the lighting to, sort of, signify the shift. And we had this guy who was this great guy and now he's actually like completely evil and is sending Miguel off to his death. And so we get him all
underlit by that green light. (evil laughing) - And there's this wonderful
moment in the scene of Helen checks in. Where she calls him to check in and it's just after this
raccoon fight had happened and so he's a little perplexed. He realizes Jack-Jack
has these superpowers and Bob, things are going
a little rocky for him, not only is he not in the spotlight, not being the superhero
that he wants to be. He's realizing it's actually harder to be, you know, the stay at
home dad, the parent, the single parent on his own
than he thought it would be. And so we light him in a way where he's got a little bit
deeper shadow in his eye. He's a little bit standoffish
with her on the phone. He's not feeling quite engaged. And so, she reveals to him that she had the best day of her life. And she had this moment in the spotlight and saved this train. And so he turns on the TV and so we continue
that, the sense of that, in the cinematography
with the light on his face creating even deeper shadow in his eye. Even harsher angles on his face. And it's this world
that he wishes he was in and he's not reflected on his face, just showing, like, how miserable he is. And so we're trying to create that tension in the scene so that the audience can feel it along the way. - It turns out that WALL-E was incredibly difficult to light. Because if you think about it, WALL-E is, he's rusty, and he's metal, and he looks exactly
like a lot of the things in the garbage dump behind him and so finding ways to pull WALL-E out from that background was
actually incredibly challenging. And one of the ways we do that is with those rim lights
that you've heard about. And so, getting this edge of lighting to kind of separate from the background is really critical, but we
couldn't get any rim lights on WALL-E because he was this box with tight corners and it
wouldn't catch any light. And so we had to figure
out different ways, like banging up the corners
to catch a little light, but it gave us this
distinct shape of WALL-E and so you could kinda pull
him out from the trash. - So a scene in the Incredibles
where the characters move from one strong
lighting set up to another, one that comes to mind immediately is at the beginning of the movie when they're trying to stop the Tunneler from crashing into City Hall. There's this whole fight
sequence that takes place in this kind of stormy, steel gray light with, like, sunbeams that
sear through the clouds and captures certain areas of contrast. And so, it's like, it feels very moody. It's very pushed. It's almost a little bit mysterious and we use that to kinda caricature their action sequence as they chase this machine down the street. At some point, they realize
they need to get inside and stop the thing from the inside out. And so we wanted a big change of feeling when we go inside of there. Maybe make it slightly more theatrical, slightly more stylized, and so as Helen swings across
from one of these lamp-posts across the sky, and then down
into the Tunneler machine, there's an abrupt change and the light is extremely red from where the molten
core of this engine is and bright yellow from the back, and emerald green from the cooling tanks. And we really used that
as a way to distinguish between these two spaces, and to have the audience feel very, something very different, both when we transition inside and then when we cut back and forth from Helen fighting the
machine on the inside to Bob and the kids still trying to stop the machine on the outside. - As you can see, we put a lot of thought into how we light the characters in order to help support the story. In the next exercise,
you are going to return to your lighting set up
and swap out your orange with a toy character of your choosing and try out some of these ideas."
Pixar in a Box,The art of lighting,Introduction to lighting,Color scripts,Introduction to color scripts. ,"- Now that you've learned about the roles that lights can play and even how they can be used to say something about a character, let's back up and take a
look at the overall process for lighting a movie at Pixar. You may be familiar with scripts, but did you know we have color scripts? I'm standing here in front
of the color script for Coco. A color script is a
snapshot of the whole movie with a frame painted from each scene. Through the color script, you get an idea for how each story moment will be lit, and its overall color and value structure. The color script also shows
how each scene will look in the context of other scenes. It shows the progression
of light and color throughout the movie. Similar to how a written script allows everyone to stay in sync on how the story points will
develop throughout a film, a color script does this for the lighting. To better understand how these
color scripts are created and used in the filmmaking process, I've brought Danielle
and Bill to tell us more. - So we do these things called
color scripts for the movie, and they are this really wonderful tool that we use where we can
basically visually map out the whole film before
we're in the thick of it, and so, we have a sense
of what the story is, it's continually changing,
but we're sort of mapping out visually what's happening. And so, the way to do
that is you think about the sort of emotional arc of
the film, and we, on Coco, there was actually a graph
of the emotional beats in the film so that
you knew the low points and the high points,
key places in the movie where you know you have to
kind of hit highs and lows and maybe some important
scenes that maybe aren't super emotional but sort
of set the tone of things, and start with those kind
of key tentpole moments. On Coco, we had the Land of the Living and the Land of the Dead, and so one of the initial
things we think about is how do we want those to differ. In the Land of the Living,
it's very warm colors, it's this very sun-drenched,
dusty kind of Mexican town, and in the Land of the
Dead, we have a lot of, we have every color, but it relies a lot on sort of cool tones of the moonlight, and these sort of purples and blues. Some things that I was
thinking of as tentpoles in the Coco color script are,
you know we have the moment where de la Cruz, we discover
that he's this evil guy. That has to be a really, really
visually evocative moment as is at the end with Mama Coco,
and so thinking about those and really nailing those down early. And then you have something where, it isn't a high or low emotionally, but we know sort of
visually, it's going to be the most kind of regular let's say, which is when they go to the
Department of Family Reunions, and that's this moment
that we actually want to feel like you're going to the Department of Motor
Vehicles or something and has sort of that bland,
bureaucratic lighting. And so that, in the Land of
the Dead, is sort of the most, sort of regular lighting that we get to in the sort of least
among of color variation in the lighting and so, as
we start to find those things where you need to differentiate,
that's where you get, and then you figure out how
to kind of work into those and work out of them. - My name is Bill Cone, and I'm a production designer at Pixar. A production designer
is sort of responsible for the overall design
and look of a movie. What usually happens in these stories is there's a change of some sort. You know, a character goes from
one environment to another, or some event happens. He gets in a car wreck, or gets a new job, or falls in love, and
those are the moments, you'll know them in the
story, you can see them, if the story is just like this,
it's not a very good story. It has to have this type of
quality, and you can find those, just think practically
about what are they. You know, what are the experiences that the character is
going through in the story, and that'll tell you these are key events, and those are the ones you
gotta pick and visualize. I can show you an example of how I tried to boil down the story
points into a color script with not too many frames. This is Cars 3, and at the beginning, McQueen has an extraordinary,
happy career going, and he's feeling great about everything, but then he starts to lose races, and so you can see how
bright and sunny it is here, and then, it gets darker and more shadowy. Eventually, he has a horrible crash. So, if you break that down, you can see, Life is great, some guy beat me, I really had a horrible wreck, and now I'm back in Radiator
Springs trying to recover, in which case, we're
showing this winter light with a dark sky and things like that. So, you can simplify even a feature film into this kind of smaller format. That's the whole joy of it
actually is boiling down the movie into its few
essential visuals as possible and being able to see
the whole movie at once. - One great example of
how we use a color script is on Wall-E. The idea was that we're
on Earth, it's polluted, it's 700 years old. We have to do all this visual storytelling 'cause we don't have
any traditional dialogue in the first 30 or so minutes of the film. And so one of the really pinnacle moments in that first chunk of the film is when Wall-E finds the plant. So Ralph's plan was that
there should be no green anywhere on earth, nothing
should have any green. So that when Wall-E finds that plant, it has so much visual impact for audience 'cause they haven't seen
green for like 30 minutes. It elicits extra sort
of emotion and reaction to things which is what it should because it's the first plant that Wall-E or anyone has seen on
Earth in a long time. So that's one way of sort
of using the color script and color and light to
add this extra emotional sort of visual punch to things. - It's important to not
get too involved in detail. It's better to sort of do as
few as possible if you can, and if you think you
have a, you know a story has a beginning, a middle, and an end, it could possibly be only three paintings, but that there's really some
change that's occurring. There's some resolution,
there's some conflict, and you'll know where those
points are in the story by just reading the script. If you can boil it down to, you know, less than 20, it's a good idea. You know, you could possibly do it in 12 or something like that,
maybe four per Act One, four Act Two, Act Three,
you end up with 12. That's a good place to start. It doesn't mean you couldn't make it more extensive than that, but
if you can make it as simple and short as possible,
you'll probably have the strongest statement of your ideas. - So to summarize, color
scripts play an important role in clarifying and unifying a vision for how the light and color is used in a movie before we even begin to light. The next exercise will give you a chance to analyze some actual color
scripts used here at Pixar. You will also have a chance
to generate one of your own. Have fun!"
Pixar in a Box,The art of lighting,Introduction to lighting,Master Lighting,How we approach master lighting. ,"- Once we have a color script done for the entire film, we look closer at individual scenes to further develop how we are going to light them. If you recall from our
storytelling lesson, a scene is comprised of
many different shots, and each shot is defined
by a new camera angle. As a first step, a few shots are chosen from each scene and
they are roughly painted to show what the lighting will look like. This allows us to see the
direction of the light, its color, how much
atmosphere there will be, and the value structure of the scene before we begin lighting on the computer. These paintings are called color keys, and they will be used by the lighting team as a reference while they
are lighting the scene. Often times, we'll choose a wide shot that shows as much of the
environment as possible. This is so that we can
get the broad strokes of the lighting design. Here is a wide shot from Cars 3 of the Thomasville track in the morning. Sometimes, we also paint a
closeup shot of characters to help show what they will look like in the setup. For example, here's a closeup from the same scene in Cars 3. Notice how McQueen is in the shadow from the stadium. Having McQueen staged in the shadow and Cruz in the light
at the end of the scene was an important story point that we wanted to
capture in the color key. Cruz is celebrating
because she's beat McQueen and she's in the light. But, he realizes he'll never beat Storm, so we kept him in the shadows. Also, notice how warm the sunlight is on the ground, how cool the shadows are, and the dark value of
the trees behind Cruz. These were all cues that we followed from the color key to help the sequence feel like early morning. Once the director is
happy with the paintings and feels that they portray the look and feel of that moment in the movie, we're ready to start the actual lighting. Lighting happens in two main stages, master lighting and shot lighting. Master lighting is where we set up the lights for the entire scene. This involves choosing
the correct position, direction, time of day, color, and intensity for the lights. Think of it as lighting in broad strokes, taking all the shots into consideration. Shot lighting is where we go in and adjust the lighting
for each individual shot. We'll talk about that
more in the next video. In this video, we're going to focus on master lighting. Let's bring in a few of our artists to help us out. - Choosing the right
moments for a color key is, again, more of a practical problem, as well as an emotional, color-based idea. You might show, like, a wide shot to say, ""The world looks like this at this point,"" you know, whether where you are, it's just the quality,
the color of the thing. So often, you might start
with an establishing shot. You're trying to sort of
seduce them into saying, ""That's what I want it to look like ""and believe it can be done that way,"" and so, when you finally get to lighting, they're totally on board
with that direction. - It's important to have a picture, otherwise we can all say words. You know, we can all say, you know, ""A green glass holding a cup of water,"" and every one of us is going to be correct in whatever image is in our head, and entirely different
from each other, right? And so, it's important
to have some sort of, like, rough, grounded reference
that we can all point at, understand what we're doing, and go off in a direction, and then allow it to evolve from there. - I'm Keith Cormier. I'm a Lighting Technical Director. - My name is Jonathan Pytko, and I'm a Lighting Technical
Director here at Pixar. When I get the color keys, what I'm looking for is the overall mood and tone of what's in the scene, and if there's any sort
of big story elements that we have to convey through
the composition of light. So, in this color key, you can see that we're coming into the
arrival's departure area, and this is a nice example of where we're using color and light to create this friendly,
inviting atmosphere. Everyone's happy and
coming into this place, so we're using atmosphere
in the background, which plays a huge part
in the Land of the Dead, to create this nice,
colorful, blue atmosphere, interspersed with different pockets of warm light to always sort of show that there's something
going on just around the other corner. And then, in the foreground, we have a lot of pin lights
of all different colors. We have street lamps lighting up, we have these big fire pits everywhere that are just, everything is subtly contributing to bring up the level of illumination so that it feels lit, it feels colorful, and it gives a nice sense of warmth, and inviting the characters in. - For this color key for family dinner, the DP had indicated that the center of attention was this dinner table in the middle of the room, and a lot of the room would
fall away into darkness. And generally, when I get a color key, I've taken a look at
what the main light is, what's the heavy hitter in the scene? And in this particular sequence, the main light is the light
hanging over the table, and naturally, there's gonna be some bounce light coming off of the table. In this case, the table was white, and that way, we got a
little bit more bounce on all the characters. We tried to be true and authentic to the
lighting scenario that was there, so the heights of the characters
would make them brighter or dimmer because they are closer or further away from the light. And it ended up working amazingly well, that it happens to be kind of an emotional moment in the movie where the family's arguing a little bit, and Bob ends up having a little bit of a heated moment, and he leans forward in his chair and he gets even closer to the light, and his face kind of
blows out a little bit, and that really added
to the emotional impact of the scene, and I knew
it was really working because I get done with the sequence and my heart would be
kinda pounding a little bit and I'd be a little tense, and I'd have to take a breath. - In the following exercise, we'll provide you with a color key, and your job is to set
up the master lighting and try to match it."
Pixar in a Box,The art of lighting,Introduction to lighting,Shot lighting,Introduction to shot lighting. ,"- Once master lighting is complete, we then begin shot lighting. In shot lighting we are
adjusting the lights to support the individual shot. One of the goals of shot
lighting is to direct the viewer's attention, to get them to look where we want them to. Oftentimes a shot will have
a lot going on that could grab the audience's attention. Here is an example of a
very busy shot from Cars 3, first with master lighting, and here it is with final shot lighting. In shot lighting we added
more light to the tops of the cars from the track lights. This helped to give the cars more contrast and it emphasized the fact
that the cars are being lit by the lights on the track. The additional contrast
makes the shot more dramatic. We also added more light
to the dirt where the cars are driving and darkened
the ground close to camera. This gave the shot more depth
and helped the audience look where we wanted them to. As the cars swing around to
the other side of the frame, in shot lighting we
continued to keep that strong top light which helps to carve
him out from the background. In shot lighting we artificially
darkened the foreground car as the camera passes it. This helps keep the focus on McQueen, even though we can't see
him on the other side. Losing the audience's attention, even for a split second, can
make the shot less clear. Finally, when McQueen comes
back into view we shot lit him so that he was brighter
on the top and darker on the side to help him feel dimensional. We also moved his key
light so that he would have as much shaping as possible. By keeping the green car on
the left a little darker, we make sure that the
audience's attention stays fixed on McQueen. Another goal of shot
lighting is to make shots work in context. Meaning that one shot
cuts smoothly to the next. As an example, here are two
consecutive shots from Cars 3. In this first shot we
introduce Miss Fritter, the school bus. She is an over-the-top character
and we wanted to reveal her theatrically with lighting. However, in the master
lighting she was getting enough light that she could be
seen standing behind Cruz and McQueen. So in shot lighting we
darkened her and then animated on a spot light as a way to
dramatically introduce her. In the master lighting of
the second shot you can see that the spot light existed,
but ti was moving around. By locking down the spot
light onto the characters in shot lighting we not
only create that theatrical moment, we also improve continuity. A third goal of shot lighting
is to make characters look appealing from the
camera angle of the shot. In this example from Toy
Story 3 Lots-O is meant to look mean and even a little evil. In master lighting, there is
a red light that is coming from the left side of the screen, but it isn't doing much on Lots-O. So we added a new light
onto him from that direction to emphasize the red and
also give him more shaping on his face. We also added more red
light to the bug character and Ken who are behind Lots-O. This serves to not only
give them more shape, but to also support the
idea of the red light in the background. Since the light is red,
it reinforced the idea that they are Lots-O's henchmen. For more examples of shot lighting, let's hear from two of our shot lighters. - My name is Linhan Li, I'm
a lighting artist at Pixar. We usually start with the
DP for initial review. So we'll be on the same page
on what's the most important elements in the shot. The DP may ask for some
separation between character and background. Then we need to knock the
background out by lower the contrast and bring more
contrast to the foreground. Sometimes there might be
background elements that's drawing unwanted attention,
we want to tone that down. - One of the things that
I had in family dinner was in the far background
you see the kitchenette which has a bunch of chrome things in it. And they were a little bit shiny. They weren't specific to the story, they were just sort of
atmosphere and you would see this kind of flashy stuff
in the back behind him and it's like, that's
visually not quite working, it's close but not quite. So I dimmed them down a
little bit so it wasn't so distracting. We kind of sweeten things
as we refine and polish. - Here's a shot that is
very typical shot lighting scenario. This is over the shoulder
character conversation. When I just got this shot
starting from master lighting everything worked out pretty well. Except that we want to have more emphasis on the main character
that's facing the camera and we want to push the background further so we don't pay much attention to it. I added the key light
and tweaked intensity to give this main character
a more interesting and appealing look and add more
atmosphere to the background so there's less contrast. Also, this shot will
require some detail work. For example, there is this
metal badge on the main character's hat and we
want to bring out that metallic quality. I added a special kick
light to the badge only to bring out the speck from the metal. And because of the brim
of the hat is black verses black hair we want
to create some separation, I also added a ring
light to have some kick on the edge of the brim
of the hat so it separates from the dark hair. - Now that you have a sense
of how shot lighting works, it's your turn to try it out. Let's return to the previous
exercise that you setup the master lighting in. We can now take a closer
look at one of the camera angles and shot light to it. Your goal in the next
exercise is to match this color key by selecting the
correct lights and adjusting your light parameters. After this exercise, you'll
have reached the end of this lesson on lighting. Congratulations! If you want to learn more
about the science of color, check out our lesson on color science. Or if you want to learn more
about how we render images, check out the rendering lessons. Both of these lessons
are relevant to lighting, so check 'em out."
Pixar in a Box,The art of lighting,Introduction to lighting,Getting to know Kim White,Getting to know Kim White. ,"- I've been the director
of photography for lighting on Toy Story 3, Inside Out, and Cars 3. When I was in middle
school and high school, I was very interested in art. I drew all the time. My friends looked to me
for drawings for the fronts of their book reports, so I
was kind of known for that. Most of my drawings are
horses from that time, and that was what I liked
to read about, you know, Black Beauty and Black
Stallion and whatnot, and I had a horse. I was lucky we lived in an
area where people had big, huge yards, and one of our
neighbors let us keep my horse in the yard, so that was my childhood. Actually, I can only speak for myself about why I think I was into horses. I think there's a couple of reasons. One is they represent a
kind of freedom in a way. You know, I could take the horse out, and I could ride anywhere I wanted to, and my horse was my friend. You know, I had a
relationship with that horse, and like, he really loved me. I would come up to the
pasture and whistle for him, and he'd neigh and come
running, and you know, so as a girl, you know,
at that age, you know, there's not a lot of ways to have control and freedom in your life. So you know, going up and
putting the bridle on my horse and then getting to ride out
where I wanted to, you know, was really cool. So I suspect that might be part of it, at least for some girls,
and he was beautiful. I mean, they're beautiful animals, right, and they're powerful. Some of my earliest memories
are drawing memories, so I think I've always loved to draw, and I've always loved art since forever. As I was growing up, my
father was very practical, and he was like, ""Well, you can minor in
art, but you should major ""in something like veterinary medicine. ""You know, you love animals and horses, ""so you can do that and minor in art ""or maybe major in
business and minor in art,"" but my high school teacher was like, ""Oh, Kim, you're passionate about art. ""You love art. ""You know, you should pursue that,"" and my mom was also very much
the same, of the same mind, and my dad wasn't pushy or anything. He was just practical, and so I realized when
I was in high school... I had taken some courses
in terms of like going out and doing night stuff with a veterinarian where we were doing dissections
on animals and stuff, and I realized, you know, I love animals, but I don't want to work inside of them and actually really do love art. I'm just gonna go for it. I'm gonna not worry about
how I'm gonna make a living. I'm passionate about it. I'll make it work, and I
also loved photography. You know, so I thought, well,
I can be an illustrator. I could be a photographer. I'm just gonna study it and
figure out where it leads, and actually, it's a good thing
for kids now to think about because when I was in
school, even in college, the job that I have now did not exist. So it's not like I could have said, ""I want to be a director of
photography for lighting, ""you know, on CG movies."" That wasn't even an idea for anybody, so it wasn't until I
was well out of college that this role actually became something. So I think if you're
passionate about something, just, you know, do your
best at it, work hard at it, and then take the
opportunities that come to you. I mean, I was flexible, so you know, I learned about computer
graphics in college because I loved animation. I wasn't crazy about computers, but I really loved animation,
so I took that course and then found that I actually
loved computer animation. So I think, I mean, really,
truly, the through line is art, but I feel fortunate to be where I am. When I got out of grad school, I went to work at a post-production house, freelanced for a little while, maybe about six months, and
then from there, I got a call from a company called Sierra On-Line, and they make adventure games, and they called me up, and they said, ""Hey, we need somebody
that can do graphics ""for our adventure games. ""Can you come out to California?"" And I was like, ""Okay."" I was young, you know, and adventurous, and I looked into what
adventure games were, and I thought these are interesting. Like, the possibilities for narrative and storytelling were really
cool and that I could see that there was a lot for me to learn. So I went to Sierra On-Line, and then, I had been there
maybe about a year and a half, and I went to SIGGRAPH, which is a computer graphics conference, and they were having a party. There was a party that, I think,
it was Disney was throwing at the automobile museum, and they were showing a
little piece of Toy Story 'cause Toy Story was in
production at that time, and I went to see it, and when
I watched that little clip, it broke my heart. I mean, I can't explain to
you what that felt like. I knew that's where I belonged. I knew that's exactly
what I should be doing, and I was sick that I wasn't there, and so the moment that Toy Story came out and Pixar put out a call
for people to apply, I immediately applied. I mean, I just can't
tell you how much I knew that that's where I should go. Oh, they're very proud of me. (laughing) My parents are so excited. I mean, the other thing about it is that my mother used to take us
to see all the Disney movies when I was a little girl. Whenever they came in the
theater, we would go to see them, and so in my family, there
was a love of animation, and I would come home, and
I would draw the Dalmatians from 101 Dalmatians or Lady
from Lady and the Tramp, and then, you know, back then, you could only see those movies
if you went to the theater. So it was an event for us. So the fact that I'm working on things that my parents really enjoyed
watching anyway is very cool to them. You know, they loved Disney. We would go to Disney
World when I was a girl, so anyways, I think it
makes sense to them."
Pixar in a Box,Simulation,Hair simulation 101,Hair simulation overview,Overview of this lesson. ,"Hi, I'm Hayley Iben I'm a software engineer at Pixar. I worked on the hair simulator for the movie, Brave. Hair was a really big deal in Brave. It was a symbol of
freedom that was intrinsic to our main character
Merida's personality. And making hair that feels right, meaning messy, wild and free, is a hard thing to do computationally. In our movies, hair is a simulated effect. That means no one animates
its movement by hand. The way it moves is defined by physics and programmed into the computer. To figure out what hair
simulation should look like, we needed to look at real curly hair and see how it worked. What we found was this. Curly hair forms together in locks that reshape themselves
when you pull on them, kind of like a spring. This was great news because springs can be modeled mathematically, meaning we can simulate their behavior using a computer program. From the computer's perspective, Merida's hair is just
lots and lots of springs that react to forces, such as gravity, as Merida moves. The tests we ran using this
approach were pretty good, but not quite natural enough. While stiffer springs held
the shape of the curl, it didn't bounce like natural curls. When we made the springs loser, her curls would unwind when she moved. This was even more obvious at high, often unrealistic speeds,
found in animation. We realized we needed something to preserve the structure of the curl, but not impede the overall
motion of the hair, kinda like digital hairspray. (can hissing)
Oh, sorry (laughs). We came up with the idea of connecting the springs that make up
Merida's on-screen hair to invisible core springs like this. The core springs would limit the movement of the on-screen hair when the motion was more extreme. This way, we could have
the best of both worlds. Our original simulation we create motion that was soft and natural, but the core springs would keep the curl from unwinding too much. Figuring out how to make
a hair simulation system that could help us achieve
the feeling we wanted for Merida's hair was hard. It took a lot of
iterations to get it right, but it made a big difference. Merida feels like a real girl, messy, wild and free."
Pixar in a Box,Simulation,Hair simulation 101,Modeling hair,First we'll explore a model of hair using straight line segments. ,"- We actually do a lot
of simulation at Pixar. Things like fire, water, and explosions are handled by the effects department. You can learn more about
that in the effects lesson. The simulation department,
who I work with, handles any motion attached
to the characters at Pixar, like clothing and hair. But we can't move every hair on a Pixar character's head by hand, that would drive our animators crazy. Instead, we use Physics
and Computer Programming. In this lesson, you'll learn how to simulate hair the same
way we did for Merida in the movie ""Brave"". Here is an example of a shot of Merida that the simulation department got from the animation department on the film ""Brave"". The animators have created
the main action in the scene and now it's our job to
fill in the missing details such as the motion of cloth and hair. Everything we do begins
with modeling the problem we want to solve. In this case, we need a physical model of Merida's curly hair. So let's begin with the very basics. What should our model of hair look like? Well, hair is kind of like a mop, just a bunch of strings. But strings are actually quite complex to model mathematically
because they are so bendy. Modeling them requires a
lot of computational power due to all the calculations involved. This is why we are always looking for ways to simplify our models. For example, we could take
a bunch of paper clips to model a strand of hair. We first draw a series of line segments connected to particles, like this. The computer needs to
calculate the positions of these particles. But first we need to describe what forces are acting on them. In the real world, each
particle is affected by three forces. The force of gravity, and the forces from neighboring
connections, like this. Next step, I have an interactive program for you to see this in action. You can adjust the following parameters: size of each segment,
number of segments per hair, number of hairs, and the force of gravity. Explore these parameters to see what kinds of looks you can come up with. Have fun."
Pixar in a Box,Simulation,Hair simulation 101,Spring-mass system,Now let's explore how we can use springs to represent hair. ,"(bouncy Pixar theme) - In the last exercise
you probably noticed that the simulation lacked the
natural bounciness of hair. But what makes something
look bouncy anyway? To make this model bouncy,
we need each strand of hair to expand and contract slightly when forces are applied to them. This required a new physical
analogy to base our model on, so we tried springs. Springs are great because
they can change length when you pull on them, and to give the hair a
little bit of weight, we add a small weight to
the end of the spring. This is known as a mass spring system. We can actually draw a mathematical model to explain what happens when a
spring expands and contracts. The model we use is based on a
law developed by Robert Hooke a 17th century physicist. Hooke noticed that there
are two things to consider when a spring expands and contracts. One, if we pull on a
spring and it expands, we will increase its length
and it will pull back together. Two, if the spring contracts,
its length will decrease and it will push apart. How much a spring pushes and pulls is known as the spring force. Robert Hooke was looking for relationship between the spring force in the amount the spring
contracts or expands. We call this change in
length displacement. Displacement is defined
as the current length minus the rest length of the spring. When we stretch a spring,
the displacement is positive and the resulting spring
force is negative. This is known as the pull force. When we compress a spring,
the displacement is negative and the resulting spring
force is positive. This is called the push force. So Hooke's observation was quite simple, he noticed that a larger displacement results in a larger force, while a smaller displacement
results in a smaller force. That is, he noticed that the displacement is proportional to the force. However, every spring is different, some take a lot of force to displace, and some are really easy to displace. So Robert Hooke introduced
the idea of stiffness to account for how hard it is
to displace a given spring. It is represented with the letter k. This led Hooke to his final equation which is known as Hooke's Law. The spring force is proportional to a stiffness times the displacement. Notice that there is
a negative sign there, that's because we want a positive force when the displacement is negative, and a negative force when it's positive. If we plug this equation into the computer we get this realistic spring behavior. For Brave, we modeled the horse's hair using a mass spring system similar to what we are
describing in this tutorial, nearly 10,000 simulated hairs in total. In the next exercise you can explore a simple mass spring system. You'll be able to adjust
the following parameters, mass of the particle, spring stiffness, k, and the force of gravity, and we'll ask you some challenge questions to make sure you understand
the basics of Hooke's Law."
Pixar in a Box,Simulation,Hair simulation 101,Stiffness and damping,Now we'll add spring stiffness and damping to our system. ,"(metal clattering) - Now that you are comfortable with how springs expand and contract, we can try something a
little bit different. Let's try connecting a bunch
of springs together like this. When we simulate springs, we don't draw them using
the zigzag pattern. Instead we use lines, which can expand and contract. This gives us a really
bouncy strand of hair, but it's a bit too bouncy. Notice the hairs take a really
long time to settle down. This isn't very realistic. Take a look at our reference shots again. See how quickly the hairs come to rest, just a few bounces. You might think changing the
spring stiffness will fix this, but look what happens. Both low and high stiffness values still result in hair
which never settles down. Our solution to this is adding what's called a damper to each spring. A damper is something that resists fast changes in displacement, and it's used to bring springs to rest much more quickly. Check this out. Here we have the same
strand of hair as before, except each spring is
connected to a damper, and we can change the amount of dampening using this new parameter. If we increase damping, the springs resist quick changes, and therefore come to rest much faster. However, too much damping will result in really stiff hair, which isn't natural, and here's what it looks like with a whole bunch of hair. We went through a similar exercise in the early stages of
modeling Merida's hair. We were trying to get the right mixture of spring stiffnesses and damping so that we could achieve
the desired artistic look, but with the wrong settings, the springs start fighting each other, and you get pretty funny results. So the trick is to find a nice balance between spring stiffness and damping. You can try this out in the next exercise. Here you can control
damping of each spring, number of hairs, number of springs per hair, and spring stiffness. See if you can come up with something that behaves a bit more realistically."
Pixar in a Box,Simulation,Hair simulation 101,Support springs,Now we'll explore a method to develop curly looking hair. ,"(jumping, bouncing) (light switches on) - Great work. So far we've built up a model of hair using a series of damped springs. This gives us a more realistic behavior, like this style I came up with. But remember, the art department wants Merida's hair to be curly. Sometimes it curls up
while moving but it doesn't hold that curly shape while at rest. Here's an idea. What if we put some
smaller springs in between the larger springs to pull them together? Let's call them support springs. We already have a mathematical
model of the spring so this is easy to test out. If I connect a support
spring between the larger springs, I get something like this. If I hide the support springs,
you'll notice the hair comes to a rest in a curly shape. That's much better. Adding these support springs results in new parameters we can control. The stiffness and length
of the support springs. Shorter support springs
will give us smaller curls, while really long support
springs give us bigger ones. And if we make the support
springs have a higher stiffness the curl pops up like this. Kind of like we applied hairspray. Compare this to support
springs with lower stiffness. In this case, the curls relax a bit and fall downwards in a natural way. Now, let's try this with a bunch of hairs. Now that's starting to
look more like Merida. This isn't exactly the
method we used on Merida for the movie, but it's close. In this next interactive
you can try this out with all the parameters we've introduced. The two new parameters are
support spring stiffness and support spring length. See what you can come up with."
Pixar in a Box,Simulation,Hair simulation 101,Case study: The Good Dinosaur,Find out how hair simulation tools were used in the film the Good Dinosaur. ,"- So far we've been exploring
what a software engineer does at Pixar, which is
creating the tools used in the filmmaking process,
such as a hair simulator and all the parameters
artists can't control. The person actually using
these tools in each film is known at Pixar as
the Technical Director. To better understand this kind of work, we've invited Jacob Brooks,
a technical director who has used hair simulation in our films. Hey Jacob. - Hey, how are you? - Pretty good, so you worked
on Spot for The Good Dinosaur, - I did, I did, yeah. - So were the artistic goals for Spot's hair? - Well Spot was one of those
characters that you knew we wanted to fall in love with right away. So he had a lot of appeal in him, but he also kind of
straddles that world of being in the wilderness so he's gotta
wild and a little unkempt. So with his hair we were
able to kind of bridge those two worlds so that you
can still get that feeling of kind of a matted tangled,
kind of wild animal feel to him but also get that appeal of like, just a child that wakes up in the morning and has adorable bed head. So it's just super familiar to us. So for the hair, as far
as the texture goes, we knew we were gonna have to have strands that were intertwining
and felt like they hadn't been washed in a while, not
going towards that gross factor but something that definitely feels entangled and unkempt,
but also just kind of hit those shapes that we knew
that we'd want to just frame his face nicely and be appealing, so that he does have that
genuine appeal in the film. - So how did you model the
hair to meet these artistic goals? - Well before we can
actually simulate the hair on a character that's moving,
like Spot as he's running around in the film, we actually
have to groom the hair, we have to model that shape, and for Spot, it was an interesting
challenge because his hair is so tangled it becomes
a very important thing to make sure those hairs aren't
intersecting in weird ways and that you can feel that
the hairs are actually twisting around one another,
in order to do that, we ended up using a
technique that was developed at Disney Animation where
we're using geometric tubes to shape gross shapes in his hair, so that you can really get the appeal of individual clumps of hair,
and see how it tapers along towards the end of the
hair, so with those tubes, once they're shaped in a certain way, we fill those tubes with
curves, and those are the curves that we end up simulating
as we go forward. - Now that you had the
shape that you wanted, how did you set up the
hair simulation to get the look that you wanted? - The sim of the hair for him is obviously a little bit different as
well because you've got this mangled mass of hair, it
needs to hold that shape, and it doesn't move like
even your hair would or someone with straighter
hair, so it doesn't hang with gravity like you would
think, as a whole for Spot, his hair is a little tighter
than most of our hair, the springs are a little bit
tighter so that you don't get quite as much sag
and it really does feel like it's been teased and
frazzled and kind of holds up and defies gravity a little
bit more than natural like longer hair would be. - [Interviewer] So Spot
had variation for his hair. Like when he was wet, so how
were you able to do that? - Because he was in the
wilderness and we knew there was a bunch of weather
changes where sometimes it's starting to rain,
sometimes it's in the middle of the rain where it's getting heavier, and sometimes he's soaking wet
'cause he gets in the river, my colleague David Liley and
I worked on something to where we started thinking
hey, wouldn't it be cool if we just changed simulation
parameters to get the hair that he started with to
be the hair as it changes. And so he started on the
soaked version of the groom, and by changing things like
the stiffness of the springs we could lose that groomed
shape that was all spirally, it would make it kind of flattened out, we would turn up the
gravity so that it hanged a little bit tighter to his face. So what that allowed us to
do was change the simulation parameters a little bit at a time, so maybe gravity would
get a little bit stronger or the springs would
get a little bit looser, so that you can get a
variation of that transition from dry to wet, but you had
various stages in the middle that you could get which
normally if we were just doing independent grooms, we
would have more of this kind of on and off switch, of
like, it's dry, it's wet, now we can get a nice
blend through that range. - That's pretty cool,
thanks Jacob for coming by. And now onto lesson two."
Pixar in a Box,Simulation,Hair simulation 101,Getting to know Hayley Iben,Find out more about Hayley. ,"- When I was young, I
really liked some sports like softball and I was the catcher and the first base player
and I also liked music. I started playing the
flute in the fourth grade and from there I played in the band and I branched out and
taught myself tenor saxophone and played that in the jazz band and I was in the marching
band and the symphonic band and I was a drum major and lots of different
activities with music. It was great. In high school, there
were some elective classes that we need to take and my
mom was helping me figure out which ones to pick. And she had gone back to
school while I was a kid and she had taken a programming class and she suggested that I took one of those to see if I liked it and
so that's how I got into it and I already liked computers,
I love playing with them. I remember my parents
getting our first computer. It was an old 286 and it was just something that was at that point a toy but then learning how to program a computer
was really interesting to me and so I started taking
computer classes in ninth grade and all through high school. Yeah, I majored in computer science in the liberal arts school
and got a Bachelor of Science and I also did a minor in mathematics. I got a Master's and
a PhD from UC Berkeley and my Master's was in
computational geometry and my thesis was on
physically-based simulation for creating crack patterns on
surfaces so like mud drawing. I also looked at crackle glass and so that's a way to create
crack patterns in class and use that for cups and
bowls and things like that. In my internship, I ended up working on an
inverse kinematics problem with Andy Weken who was my
mentor and the research group. Let's pretend I wanna animate my arm and I would wanna grab
my wrist and move it here and what inverse kinematics
does is it would solve to figure out what are the angles that I'd have to move my elbow
joint and my shoulder joint to hit the target which
is where my wrist is. It's really exciting for me to watch the finished movie for Brave. I worked on a lot of the
technology that was used to animate the characters
and to do the hair simulator. I wrote the inverse kinematic system that was used to move the
horses and move the humans. I spent a lot of time trying to make sure that posing tool was right and having that and have Merida's hair
fill up the entire screen was incredibly satisfying and to see how beautiful
it all turned out. And while I was writing those tools, I got scheduled to do an interview with another co-worker
for the simulation group because they were looking
for a new simulation person and the person who left had done fluids and other types of simulation work that wasn't an area
that I was familiar with so I hadn't even thought about
this work, this job opening and I think it had been
open for about a year when we were talking about it. They were having a hard
time filling this position and the person we were interviewing was doing a Master's thesis and he was implementing
some of my PhD thesis and so after the interview,
my co-worker said, he turned to me and said, ""Why aren't you applying for this job?"" That was really a point in my career to really sit and think like, ""Huh, why I aren't I
applying for this job?"" And so I really gave it some
consideration and decided and was like, ""Yeah, I do
wanna apply for this job."" And it's always a little
bit scary when you try to do something new but it
was definitely worth it. I didn't listen to the
people that were saying, ""Oh, you should be doing this instead,"" because you should do
what your heart tells you and even if it's scary, you
should go ahead and do it."
Pixar in a Box,Color science,Introduction to color,Color Science,Overview of this lesson. ,"(chiming music) - What do I think color is? (laughing) What is color? (gentle cheerful music) - (laughing) I can't answer that question. - (laughing) What is color? Color is a sensation. (chiming) - Color is a very personal thing. Color is very subjective. It can trigger like a visceral response. Like if you smell bacon, ah, bacon. You know, it's like if you
see certain kinds of colors, the same exact feeling. - I don't know. Ask some smart person here. Pick-- (laughing) - Color is a term that we use to describe a collection of attributes, hue and saturation and value, that describes how we see things. Hue is what the actual color
is in the rainbow spectrum. Is it more yellow, or is it more orange? Bluer or redder? Value is how bright something
is relative to something else. Is it white? Is it black? Is it some sort of middle grey? Saturation is how intense the color is? Is it more subdued and grey, or is it more vibrant, almost
fluorescence, you know? A fully saturated color
is quite eye popping. (electricity crackling) Color is everything to artists. - It wasn't until I
started working at Pixar that I think I had to think about color in a different way, to apply it to a narrative and it can mean something. - On Up, there was a
scene where Carl's house got burned by Muntz. It's really one of the
lowest points of the film, and it's this sunrise. Normally sunrises are very beautiful. It's the start of a new day, but for this one, we
wanted an angry sunrise. It was just this beautiful tone of red that was so dramatic for me. I think that was really cool. - Because the choice
of color is so critical to the story telling process, it's really important that we understand the science of the
choosing of those colors. The first thing to realize about color is that color is really made up of light. Light comprises different
wavelengths of energy, and when that energy
comes through our pupil onto our retina inside our eye, it becomes nerve impulses, signals, and eventually gets
processed by the brain. So the light is out in the real world. The color only really
exists inside your brain when you perceive it. (fireworks popping) In the rest of this lesson, we're gonna dive more into the science and perception of color. Let's go."
Pixar in a Box,Color science,Introduction to color,Spectrum of light,"Every light sources makes a different kind of rainbow, known as a spectrum. ","- You may be surprised
that there is such a thing as a color scientist, but at Pixar, color plays a role in almost every artistic decision that we make. While this lesson will focus
on the science of color, there is obviously a whole world of color that artists think about. Here we are in the color mastering suite. The equipment that we use is basically a supercomputer
version of Photoshop, but it kinda looks a little bit like the Star Trek Enterprise. My goal in this lesson is to show you that color is really part physics
and part human perception, and at the end of this lesson, you'll have a chance
to manipulate the color using scenes from our films to achieve various artistic goals. But first we need to understand how the tools in this room work. So let's go back to a simple question. What is color? Color is a property of light, and light comes from light sources. And there are all different
kinds of light sources. For example, I'm currently
being lit by these lamps. Without these, our scene
would look very different. And using a flame as our light source, like these two candles, really changes the feel of the scene. The light is not only dimmer, but it emits a reddish-orange light. Seeing this light on
a white piece of paper is a great way to show this. Try pausing this video and hold your own white piece of paper up
to the screen beside mine. Notice the difference between
my white paper and yours. They're not the same, right? Now compare how the same
piece of paper looks under the most powerful light
source in the solar system, the sun. The sun gives off really intense light, especially in the middle of the day. You can clearly see that
the light on this paper is much whiter than the candle light. Inside, the light was more reddish. So, where did the red light go? Let's go back inside so I
can show you what happened. The key is to think of all light as a mixture of colors. Sir Isaac Newton famously
demonstrated this when he used a glass prism
to break up sunlight. When sunlight passes in
and out of the prism, it bends, or refracts, and splits up into a spectrum of colors. After Newton, other scientists discovered that the light's wavelength
is what determines how much it will refract,
and what color it will be. Bluer light has a shorter
wavelength and bends more. Redder light, with longer
wavelengths, bends less. And this is the key point. Sunlight looks white because it contains all visible colors. Scientists have developed a 2-D graph to easily visualize the colors contained in any given light source. In this graph, along the
X-axis, is the wavelength, and along the Y-axis is the
intensity of that wavelength. For example, here's the graph
of what daylight looks like. This is known as the spectrum of daylight. And a graph like this is called a spectral power distribution. And here's the spectral power
distribution of candlelight. Notice it doesn't contain
the same intensity of blue and green wavelengths. If we shine candlelight through a prism, we can't see a full rainbow. The reds are strong, but the blue wavelengths are much weaker. Is this first exercise,
you'll have a chance to explore the spectrum
of various light sources, and answer some questions about them. For example, what do
you think the spectrum of a laser would look like?"
Pixar in a Box,Color science,Introduction to color,RGB color model,Overview of the RGB color model. ,"(light tapping) - We've just seen the
beautiful rainbows you get when you refract light with a prism. Now let's think about
how we actually perceive the colors of the rainbow
in the first place. What makes yellow look like yellow? Inside our eyes, we have
special color receptors called cones, that are
sensitive to specific wavelengths of light. For example, one kind of
cone is most sensitive to red light, so when long
wavelength light hits them, that is from the red end of the spectrum, they respond by sending a
corresponding electrical signal to the brain, and
the magnitude of this signal will depend on how much red
light is present in the light. Our eyes have three main
kinds of color receptors. One is sensitive to
the longer wavelengths, redder light, one for medium
wavelengths, or greener light. And one for shorter
wavelengths, or the bluer light. The cool trick is our
brain blends signals from these three receptors
to represent any color. Colored television, and computer monitors, borrowed this same idea of
color receptors from our eyes. If you zoom into a computer screen, you'll see it's made up of
tiny rectangles, or pixels. Each of which contain a
red, green, and blue region. To display colors, the monitor illuminates these three colors accordingly. To make the screen appear yellow, the monitor turns on only the red and green regions in each pixel. From far away, these blend into yellow. And that's how we can
digitally create any color using just different amounts
of red, green, and blue. In our next exercise,
you'll try to create a color by mixing together different
amounts of red, green, and blue on your monitor. For example, to get this shade of green. It's interesting to note
that other animals have different cones in their eyes. For example, dogs only have
cones that are sensitive to yellow and blue, so red light doesn't send signals to their brain at all. The mantis shrimp, on the other hand, holds the current record for the most number of color receptors in its eyes, 12 different kinds. And scientists still don't know how they're all used to perceive color. - Voila, he is clean. (exciting fun music) - Beyond that though,
there's also a certain class of people, they're all
females, it turns out, who we call tetrachromats. They have four different
color receptors in the eye, whereas the vast majority
of the population has three. And so we think, and
expect, that their ability to discriminate colors, to
basically tell the difference between two very, very similar shades, is probably much more precise
for the tetrachromats. I wish I was one."
Pixar in a Box,Color science,Introduction to color,HSL color model,Introduction to another color selection model we use called HSL. ,"(metal clattering) - You've just seen how any color can be represented by blending together different amounts of three colors, red, green and blue. For example, the RGB
value of this gold color is 100% red, slightly less green, and no blue, but as you may have noticed
in the previous exercise, it's fairly difficult to
find the correct RGB values to match a desired color. So artists have developed new ways to specify colors in a more intuitive way. One popular method they use is called HSL, short for hue, saturation, and lightness, similar to the HSV we saw earlier. Artists use a tool called a color wheel to pick the hue and saturation they like. Hue is what we normally call color, is based on the position
around this wheel, such as this red. Saturation defines how pure a color is, and saturation is based on the distance from the center of this wheel. If we want to desaturate, we move inward, and if we want to saturate, we move outward. For example, to saturate
this shade of red, we remove any contribution
of green and blue, whereas to desaturate it, we instead increase the contribution of green and blue. Taken to the extreme,
this trends towards grey because the three color
contributions are equal. So at full desaturation, our red becomes achromatic, or colorless. If an artist wants to use a strong yellow, they first have to find
the yellow hue they want. Then they move in the radial direction to saturate or desaturate it. Finally, there is lightness, which is adjusted using a separate slider. For example, we can take our yellow from very low lightness like this to a very high lightness like this. You can already see
that this is a much more intuitive way of finding colors compared to using RGB values. Okay, let's pause here so you can get the hang
of HSL color selection in the next exercise."
Pixar in a Box,Color science,Introduction to color,Color contrast,In this video we will explore how perception plays a role in the colors we 'think' we see. ,"- So far, we've been talking about color in terms of wavelength of light
and human color receptors. That's the physics part of color. Now let's turn to the perceptual part. We just learned that every color has a hue, saturation, and lightness. But colors appear in our
world alongside other colors, and that can really
affect how they appear. It's also when things can
get really, really weird. For example, look at this image. Notice the two inner color rings. The one on the left looks green. The one on the right looks blue. They're different colors, right? No, if you take away the other colors you'll see that they are
in fact the same color. And it's not only color
which can trick us. Different brightness
levels will also affect how we perceive an image. For example, look at the
following greyscale image. Take a closer looks at
these two squares, A and B. One is a black square in the light. The other is a light square in shadow. Do you think they are
different shades of grey? Nope, let me show you. They are in fact the same shade of grey. So clearly not everything
is what it seems. How we perceive contrast or brightness depends very much on
the surrounding image. And it brings us back to
how the brain processes incoming image signals. The structure of our
visual system is optimized so that we can do important things, like survive. But a key survival trait is the ability to very quickly identify danger. This requires the ability to rapidly refocus our
attention when we need to. Our brain does this by automatically refocusing our attention to dramatic changes in color,
brightness or movement. We call this difference in
color or illumination contrast. Our brains are hard-wired to notice when colors contrast with each other. In the color mastering suite, we can adjust the contrast
of an entire image using a contrast slider. It works by increasing or decreasing the differences in brightness, or the illumination
levels across the image. For example, notice the
left half of this image has a lower contrast
level than the right half. Getting this contrast level right is really important in Pixar movies. For example, at the end of Inside Out, in the headquarters there's a scene where the character Anger
gets really, really angry and to sort of heighten this sense of him, flames exploding from his head, the surrounding area of
the image is darkened so that the contrast difference is really quite extreme in that moment. These kinds of decisions are made by the Director of Photography. And casually, we refer to them as the DPs. Any decision that involves colors or lighting of any kind
will involve the DP. Another great example is
from the movie Toy Story 3. Lotso the bear has sort
of, in this whole sequence, been the only really
pink thing in the scene. It's very much about an emotion of love between Lotso's owner and the bear. And then as the bear is lost, there's a scene at the
end where Lotso's looking in the window at his owner
and the replacement bear and then what we're trying to do there is sort of have Lotso, the original, seem far less pink than the new bear which is pretty much
now the sort of center of attention of love and
heightening that perception of the difference between how pink each of them are was very
much central to the emotion. In the next exercise, you'll have a chance
to play with contrast."
Pixar in a Box,Color science,Introduction to color,Color correction,In this video you will visit our color suite to see how we tweak colors to meet artistic goals. ,"- I know, I know I promised
you I'd give you a chance to sit in my chair. Well, now I think you're finally ready. One of the final polishing
steps in making a film is the final color adjustments
to every single frame of the film, in order
to increase its impact on the audience. And that's exactly what we do here in the color mastering suite, but it's not actually me who does it. Let me introduce you to our
colorist, Mark Dinicola. Hi, Mark. - Hi, Don, thank you for having me. - Great, so tell me what is your job? - I operate this color mastering system. It's the tool set of a
colorist, and a colorist is responsible for actually
making all adjustments to a finished film. I could show you an
example on Ratatouille. - Cool. - So if we take this shot
from Ratatouille, for example, we might start by adding contrast, then we might add some saturation. Normally when I do this, the
DP is sitting here with me, and on this film, the
DP was Sharon Calahan. Perhaps we should ask Sharon to come in. Hey Sharon! - Hey guys, what's up? - So on Ratatouille, what
were some of the issues and interesting facts that
came up while you were doing color correction on that movie? - Well, Ratatouille was a film that had a very unique, stylized look to it that we envisioned in the very beginning, and a lot of it is just
kinda carrying it all the way through to make sure the final product looks as good as it can
and has that vision in it. And for Ratatouille,
some of those things were having nice, rich
shadows, making sure that there's adequate contrast
and saturation in the scene, making sure the eye looks
where it's supposed to look. But stylistically, one of
the things that was really important to me was making
the human skin look good and the food look really good, and tying it all together,
and one of the ways that I use color correction
to help with that is to add a little bit
of red to the darks, the deep darks, so that it
kind of tied the look together and almost made the film feel like it was dipped in chocolate a little bit. - Very cool. - I wanted the audience
to leave feeling hungry. - So guys, in this next
exercise, we're gonna give you a chance to make some of
your own color adjustments on these scenes. To make changes to the entire
image, press select + all. And to adjust hue and
saturation, and lightness, and contrast, you can use these sliders. We like using sliders
because it allows us to make very fine-tuned adjustments. And instead of making
changes to the whole image, you can also select smaller
regions in the image to focus on. To do this, press select
region, and then click around the image to define
an area you want to adjust, like this. Once you've made a
selection, your adjustments to hue, saturation, and
lightness, and contrast will only affect what's
inside this region, and anything outside it will be ignored. Go ahead and see what kinds
of looks you can come up with. Remember, the goal is to have fun and explore what's possible."
Pixar in a Box,Color science,Introduction to color,Getting to know Dominic Glynn,Getting to know more about Dominic Glynn! ,"- So, when I was in elementary school, I mean, I studied math
like everybody else, the sorta basics that
we learned at school, and found that there's something about it which it was greater than I am. It wasn't that one person had decided that this is how it was gonna be, it was more that, collectively,
we'd kind of slowly come to a better understanding of something that has always been there. And so, I really appreciated and kind of was in awe of that idea. And at the same time, I
was playing a lot of music, I think, as a young kid, and fascinated in how our ear and our brain and our mind works, given all of this kinda
stimulus coming in. So, for me, it was kind
of a natural meeting of these two worlds. A little bit of math and a
little bit of perception, you smash 'em together, and you
kinda land in color science. Before I started working
in motion picture film, I did some challenging, some people would say some
silly things. (laughs) I used to engage in a
lot of mountaineering, high-altitude climbing. And on one of these
expeditions at high altitude, I suffered an injury to
the retina on my left eye. It's a retinal hemorrhage. So, basically, the retina was
bleeding and became damaged. And it wasn't painful,
but during the process, I was completely fascinated with what was happening
to my visual system. I was able to sort of see,
oh, well something's not right and this is different and new. And then I was able to compare, well, my left eye is
different to my right eye. And if I kinda move my head this way, I can see these weird things
I've never seen before. And so, it was a weird sense
of kind of objective analysis of what was going on,
despite the fact that it was, in some senses, a medical emergency. And we were far away from hospitals and those kinds of things. But that was probably
one of the turning points where I recognized that,
wow, I'm really interested in the human visual system
and what it can and can't do. And, hopefully, we're using that now in a way that's gonna help everybody. Computer systems engineering is the primary degree I studied. Engineering is less about
the specific knowledge and more about knowing
how to learn at speed. So, a good portion of the degree is stress testing your
ability to learn things you've never thought of before and then really put your
assumptions to the test in a hurry. So, I consider the engineering
kinda like a mixed bag of tools that can be applied to a lotta different circumstances. When I started with Pixar, 35-millimeter film was still very much the predominant
distribution format. You know, we used film projectors. You had a xenon lamp and it shown light through a transparency,
a color transparency, up onto a huge screen. The chemistry of the color of film was very much a black art. It was very sophisticated
and there were few players in the field sort of supplying
the materials that we needed. And so, for us to gain insight into how better to
control the color on film, it was a real challenge. So, we went back to first principles. We analyzed the film
at a really low level. I mean, we kind of stretched
and pushed and pulled in every possible exposure way possible and measured everything that we could find about the film until we came to, I guess, a state where we knew more
about how to influence the film than the people who were selling it to us. We were able to do things with it that they didn't even know were possible. I am communicating with the artists, the directors of photography,
the lighting leads and the folks who are
responsible for implementing the color decisions of the studio. And I'm working with
them to better understand what they're trying to achieve. Often, this is one, two, three years in advance of them doing the work. They have an idea in their head
of what they'd like to try. It might be something that
no one's ever seen before. My job then is to sort of
translate those requirements and turn them into a
pipeline or a platform or a set of steps and processes that we can gain confidence is gonna work when the clock's ticking and
we don't have a lot of time to sort of finish this work or to sorta iterate many
times on a creative idea. So, I kinda build the foundation
of the pieces necessary to allow those artists to
really express themselves in a way that's repeatable. Things that are happening in the world of motion picture film. So, on the exhibition
side, you go to the cinema and there's a digital projector today; that's how we experience
our films on the big screen. The next generation of digital projectors is using red, green, and blue lasers to illuminate the scene. So, all of a sudden, we can get these really, really saturated colors way out on the spectral locus. So, the most saturated things
that humans can perceive, we can now create some of those
with these laser projectors. And there's also new
opportunities, I think, for some of our filmmakers to
potentially show you colors that, quite literally,
you've never seen before. Everything that you have a passion for has a value in this world. And people are gonna continue to tell you that this is not cool
or this is not popular or, in my case, it was math and music. They still aren't necessarily
the most socially upheld kind of revered pursuits. But you can find a way easily where that makes a real
difference for somebody, that you can harness that passion
and turn it into something that really makes a
difference in the world."
Pixar in a Box,Color science,Color spaces,Introduction to color space,What is a color space? We begin with the idea of a color cube. ,"- [Instructor] How many
different colors can you see? Feels like an endless possibility. Impossible to count them all, right? Well, if we want to
represent colors digitally, we have to find a way of counting color. That is, for any given shade you can see, we need to give it a unique
number or an address. Because numbers are something both humans and machines can agree on. One simple way we could do this is to give a percentage for each color value. We call this an RGB triple. For example, 100% red plus 100% green plus 100% blue is white. 0% red, 0% green, 0% blue is black. Whereas, 100% red and 100%
green, but 0% blue, is yellow. We saw this in lesson one. Mathematicians love to represent things geometrically or spatially, so they came up with the
idea of a color space. It's quite simple. Normally, we represent a point
in three dimensional space using x, y, and z-coordinates, like this. But, instead, let's rename
the axes red, green, and blue. And that gives us this color cube. The key idea is this: every
point within this cube represents a specific color a projector or a computer
monitor could create. So, remember all those colors
you were thinking about? Well, any specific color you're looking at will always be a point in this cube. To help this sink in, we
have a color cube exercise that you can play with. Give it a try."
Pixar in a Box,Color science,Color spaces,HSL color space,Now let's consider the color space of the HSL model. ,"- Although RGB triples are great for representing
how we can generate colors, they aren't natural for artists to use. Instead, we use the concept of
hue, saturation and lightness to find the exact color we need. On the hue saturation wheel, the angle around the
circle defines the hue, and the radius defines the saturation. The position in this
circle is then combined with the setting of the Lightness slider to define a final color. From now on I'm gonna
call this Lightness slider the Lightness Dimension, since it only requires a
single number to define, and this color, which is defined
using these HSL settings, is also some position
in the RGB color cube. That brings us to a key
problem in this lesson. How does each HSL setting convert into a unique
point in the RGB cube? First, let's think about
how we can go from a 3D cube to a 2D circle. The trick is to think
about where the grays are in our color cube. Anywhere in our color cube
where the RGB values are equal, we get some shade of gray. For example, 20%, 20%, 20%,
gives us this darker gray, and 80%, 80%, 80%, gives
us this lighter gray. That means there's a line
of gray within our RGB cube, meaning that there's
only one dimension needed to describe all grays. So let's rotate the color cube so that we're looking directly
down at the gray line. Does it look familiar? Mathematicians cheat a bit
and deform this into a circle. There's some fancy math to
make this stretching happen, but we'll ignore it here. And that's where the hue
saturation wheel comes from. Finally, we can get to
the Lightness Dimension. To do this, we pop back into 3D space by growing our circle into a cylinder. The Lightness Dimension defines what slice we take out of our color cylinder. A Lightness value of 50% takes
a slice out of the middle, and to lighten the shade
of any color on this wheel, we're moving up the Lightness
Dimension to a higher slice, and to darken the color, we move down the Lightness
Dimension to a lower slice. Okay, this is important,
so let's pause here. In the next exercise, we'll challenge you to think
about this model a little more. Take your time and have fun."
Pixar in a Box,Color science,Color spaces,CIE chromaticity diagram,"Introduction to something called a CIE chromaticity diagram, it represents all colors humans can perceive. ","(springing)
(thudding) - Now let's return to the
human eye for a moment. Remember, the human eye is the sensor which light must pass
through to be perceived. So we need to understand the limit of the human visual system. In the 1920s, experiments were done to map the color space
perceivable by humans. From purple, all the
way around the rainbow, to this red, this defines all colors of a single wavelength. These are known as spectral colors, and inside this region, we have all combinations
of those pure colors. Scientists plotted the limit of the pure colors we can perceive. Notice it takes this funny looking shape. One reason this shape is useful is something called perceptual uniformity. That's a fancy way of saying that we can find the
mixture of two colors, such as this red and this green, by simply looking at the
midpoint of them, right here. It's known as the CIE
chromaticity diagram. CIE refers to the scientific group that published the findings. Compare this to the hue
saturation color wheel, which is not perceptually uniform. Pure red is here, pure green is here, but the middle of these two points is not pure yellow at all, it's a very desaturated yellow. Okay, let's pause here. In this next exercise, we'll challenge you to think more about this CIE chromaticity diagram, and perceptual uniformity."
Pixar in a Box,Color science,Color spaces,Introduction to Gamuts,Gamuts represents the range of colors any given device can produce. They are represented as a region within the CIE chromaticity diagram. ,"- Okay, so let's step back
to the larger problem. Our finished movies are viewed in a number of different ways. For instance, the screen
a movie is displayed on could be a monitor, like this,
or a projector, like this, and that's where another
problem creeps up. Both of these displays are
getting the same color signal of pure red. Notice these resulting colors we see aren't exactly the same. The problem is display devices, like monitors and projectors, can only reproduce some
of the perceivable colors. It's the pure, or single wavelength, red, green and blue light,
they have trouble creating. Notice, this screen can
generate a slightly purer, or deeper, red compared to this one. Remember, on our CIE
diagram that the purest red, green, and blue
are way out on the edge, here, here, and here. But, a typical RGB monitor
can't create anything close to pure red, green, and blue light. If it tries to display those colors, the best it can do is hit three points over here, here, and here. And, since the display
can blend those colors, the device has the ability
to create any colors in this black triangle. This region is called the
Gamut of the display device. It's the range of the perceivable colors any give device can reproduce. Mathematicians would say
the Gamut is a subset of the perceivable color space. The size of this set is
important to filmmakers because they want the
biggest palate of colors to paint from. More color means more artistic freedom. For a long time, our movies
were projected on film which has a very large Gamut, like this. Eventually, we moved to digital projectors which had a different
Gamut compared to film. More recently, laser
illuminated digital projectors have been introduced which have a much larger Gamut than film. This is because they use laser light which is very close to a single wavelength allowing them to produce very
pure reds, greens, and blues. But here's a practical problem
for you to think about. How do we make sure our movies
look good on any device, especially if they have
very different Gamuts? You can think about that while working on the next exercise."
Pixar in a Box,Color science,Color spaces,Color grading,In this video we'll explore what goes on during the color grading process. ,"(spring pinging)
(ball bouncing) (lightbulb pinging) - We've seen that every display device can represent only a region of colors within the perceivable color space, and this region we call a gamut. But inside the computer, where colors are represented digitally,
they're just numbers, and they can represent the
entire perceivable color space. But when we send the film to a theater, we need to match the color space of the projector being used, and that's the job of the
color grading process. It's to fill out the color space available within that projector and sort of constrain any colors that don't fit within that device gamut. And that's why I'm joined here by Mark Dinicola, our colorist. Hey Mark. - Hello again, Dom. - [Dom] So tell me about
some of the different types of grades that you do for a movie. - [Mark] Well, we do the film grade; the digital cinema grade, that's for digital projectors in theaters; as well as grades for home viewing in both high definition and standard definition. - So film versus digital grading? What's that like? - [Mark] Well, as you
mentioned color gamut, the film has a totally
different color gamut than, say, digital cinema. Especially film, the
brighter saturated colors aren't as available, so say on Cars 2, where we had McQueen, a
bright saturated red car, we had an issue with the film grade. We had to decide, is it more important that he's bright and saturated, or is better to have proper contrast? - Wow, okay. Any other stories or
challenges on films past? - Pretty much any film that has red. Inside Out was an interesting one. It was a very saturated film, with so many different colors, like Bing Bong is bright pink. He tends to go brown on film, so we had to carefully
craft the grade for film for that movie to make
sure he stayed pink. - So in the next exercise,
you're gonna have a chance to explore what some of the
different gamuts look like with some scenes from our movies, and we're gonna ask you a few questions to make sure you understand the concepts. Thanks for sticking with us. Enjoy!"
Pixar in a Box,Virtual cameras,How virtual cameras work,Introduction to virtual cameras,Overview of Virtual Cameras. ,"- Hi, I'm Patrick Lin, the
director of photography for camera on Inside Out. - And I'm Adam Habib,
camera lead on Inside Out. This lesson is about cameras,
the art of using them, and the science behind them. We're talking about physical cameras first because the virtual cameras we use to make our movies are modeled
after the real thing. - First, let's talk about lenses. The kind of lenses we put
in front of the camera and how we adjust the amount of light that is traveling through that lens affects the image we record. Cheese. (camera shutter clicks) - [Adam] For instance, for this selfie we used a wide angle lens. If we change out the lens for a narrower long lens, like this 75 millimeter, the picture will look very different. - Smile. (camera shutter clicks) Whoa, we're barely in the shot. Looks like we have moved
the camera but we haven't. In fact, to get the
environment and ourself in this shot, with this lens, we have to move the camera a lot. Hey, Sylvia. - Hi. - Do you mind taking a photo for us? - Sure, were guys trying to take a selfie with this long lens? - Maybe.
- Maybe. (drum roll) (camera shutter clicks) - Good thing they had a ladder here. - [Adam] Now that the
shot is composed the same, you can see what else
changes about the image because of our lens choice. For instance, notice what
is in focus or out of focus. - [Patrick] In the wide angle image, almost everything is in focus and in the picture taken
with the long lens, only a small part of
the image is in focus. Another thing that changes is the feeling of perspective in the image. This means how close or far
away the objects appear. - [Adam] In the wide angle shot, when the camera is closer, the nearer subjects appear a lot bigger and more remote objects feel farther away. - [Patrick] In the long lens shot, when the camera is farther away, there appears to be less distance between the nearer and
the farther objects. Every choice you make with the camera changes the feeling of the shot and our job is to makes choices that supports the emotion of a story. - Let's go show them how
it worked on Inside Out. (camera shutter clicks) This is the virtual camera
we use to make our movies. It has interchangeable
lenses just like the camera we used to take our selfie. - So depending on the lens we use and the placement of the camera, we should see a similar
effect on the image. - [Adam] Here's a shot from Inside Out that is compositionally
a lot like our selfie. Let's start with that same wide lens we used for the first
selfie, the 18 millimeter. It looks okay, but we
don't want to choose a lens just based on what we
can fit in the frame. We want to ask ourselves,
what is this scene about? - The core of the scene is about empathy, so all of our decisions in framing, composition, staging and lens choices should be guided by that idea. - [Adam] I think I'll try
the 50 millimeter lens. Using this lens, and
adjusting the depth of field, which determines what's
in or out of focus, I think we'll get the right look. An image that focuses on the characters so the background just falls away. - There are many different feelings we support through our camera choices, fear, happiness, insecurity, wonder. In each case, we thought about how we could use the camera
to amplify the emotions we wanted to achieve in that scene. There is a lot of cool stuff to learn so stay with us."
Pixar in a Box,Virtual cameras,How virtual cameras work,What is a pinhole camera?,How cameras capture images using an aperture. ,"- Hey. My name is Eben Ostby. I've been working at
Pixar since we were just half a dozen people working
on experimental short films. One thing that hasn't changed since then is the need for virtual cameras. And to understand virtual cameras, you need a firm grasp of
how physical cameras work. And I love cameras. In fact, I collect and fix
and sometimes even build them. I built this in a CAD system. And printed it out with 3D
printing and it takes pictures. (camera clicks) Like that. And cameras come in all shapes and sizes, like this little, baby twin-lens. And this Classic American
Argus. (camera clicks) So at Pixar, when we
design a virtual camera our job is model what happens
inside physical cameras. Have you ever thought about
what a camera really does when we take a picture? (camera clicks) You probably know that
a camera captures light on a piece of film or image sensor. But to understand how this works, let's build a very simple camera. We'll start with a box.
This is our camera body. And a single piece of paper, which represents our image sensor or film. We'll call this the ""image plane."" You know what? Let's do this at a larger scale, like using an office as our box. Our scene is now outside the window. And our image plane is the opposite wall. We don't see a clear image. The problem is any
point on our image plane is getting hit by light from
everywhere in the scene. What we want is for each
point on our image plane to be hit by light from a
tiny region of the scene. Look at what happens if
we cover up the window except for a little hole. We call this small hole the
""aperture"" of our camera. If you wait a few minutes for
your eyes to adjust, voila. An image. The reason it works,
is because the aperture only lets certain light rays through. At this point, here, on the image plane, only light rays from one direction can make it through the aperture. And those light rays come
from light bouncing off this place in the scene. So the aperture is
filtering out any light rays that don't come from the right direction. This simple camera design is
known as a ""pinhole camera."" If we replace the back wall of the room with a great big sheet
of photographic film, we could take a great picture that way. Did you know that the word camera comes from the Latin word for room? The first cameras were
known as ""camera obscura"" meaning ""darkened room."" They were in fact,
room-sized like our office. In the next exercise, you can
use this pinhole simulator to take some virtual pictures. You can adjust the size of
your pinhole, or aperture, and press here to capture
an image. (camera clicks) While doing so, you'll have
to answer some questions about what's going on. Such as, why is the image flipped? And more importantly, what happens if we change
the size of our aperture? (camera snaps) See you in a moment."
Pixar in a Box,Virtual cameras,How virtual cameras work,Focal distance,What happens if we change the distance between our aperture and image plane? ,"- In the previous exercise
you probably noticed that a very small aperture
results in a sharper image. But it's a dim image, because very few light rays are making it through that pinhole and entering the camera. We can make the image brighter by expanding our aperture size, but there is a trade-off: when we do this, it results
in a blurrier image. Here is why. Let's look at our scene again and look at one point in that scene. There is light bouncing
all around our scene, and at that point light rays
are going in all directions. Our pinhole only lets light
from one direction through. As we make it bigger, it
lets more light rays through, making the image brighter. But this presents a new problem: it lets light from our point spread across more of the image plane. That tiny point in our scene now covers a big area at our image. That's the image blur. Aside from the size of our aperture, there is another important
feature of this camera that we can manipulate. That's the distance
between our image plane and the aperture. I'm gonna call that
distance the focal distance. If we move the image plane
closer to the aperture, the objects in our scene appear smaller, but we see more of the scene. So we say our field of view
widens when we do this. If we move the image plane
farther away from the aperture, the opposite happens. Now the objects in our
scene appear bigger, but we don't capture as much of the scene. In this case, we'd say the
field of view is narrower. So, there is some kind of relationship between the focal distance of the camera and its field of view. This is a really important concept. So let's pause here. In the next exercise you'll have a chance to develop your understanding
about what's going on here by playing with a virtual pinhole camera with a variable distance
between the aperture and the image plane. Give it a try!"
Pixar in a Box,Virtual cameras,How virtual cameras work,Camera lenses,Now we'll add a lens to our camera and explore the idea of an f-stop. ,"- Earlier, we found that to make a very bright image
with our pinhole camera, we had to use a large aperture. But when we did this, our resulting image was blurry because light rays from each point in our scene spread out into a larger area on our image plane. Here's an example. The light rays are
coming in from the right and they're just about parallel, like they're coming from
an object like the sun that's really far away. With a tiny aperture, just one tiny point on the image plane would be illuminated by these rays. But to make a bigger aperture work, we need to aim all of these light rays onto a tiny point without
discarding any of them. We want to bend them. And what do we use when
we want to bend light? A lens. If we add a lens to our camera, it will cause our light
rays to converge like this. The point where these
parallel light rays converge is known as the Focal Point. It turns out that the shape
or curvature of the lens determines how sharply
the light rays are bent. If we increase the curvature of our lens, the rays focus very close to the lens. And if we decrease the curvature, they focus farther away. What we want is to focus the light rays exactly on our image plane. That will give us a sharp image. And for any particular distance between lens and image plane, there's a lens design, or curvature, that will focus the light rays on the image plane. We call the distance at which the lens focuses these parallel rays the Focal Length of the lens. You can have a lens that focuses close to the aperture and you'll get a wide field of view. We call that a Wide Angle Lens. For example, a 28 millimeter lens, like the one we're using here, has a focal length of 28 millimeters and produces an image
with a wide field of view. Or you can have a lens that focuses light further away from the aperture. We call this a Long Lens. For example, a 120 millimeter lens, like the one we're using here, has a focal length of 120 millimeters. So we'll capture less
of the scene, like this. While a 50 millimeter lens, like the one we've switched to here, gives us this natural-looking perspective. For any given lens, the
film or light sensor needs a certain amount of light to record an image properly. Too little, and it just sees darkness, Too much, and it just sees white. We control how much light it receives by adjusting the size, or diameter, of the aperture, which we also measure in millimeters. Some cameras, like this one, allow you to set the
aperture using this ring. But the numbers on the ring aren't measured in millimeters. The numbers here are called F Stops and is defined to be the ratio of the focal length of the lens to the diameter of the aperture. So if we want a 25 millimeter aperture on a 50 millimeter lens, we'll set the F Stop to two because 50 millimeters divided by 25 millimeters equals two. F Stops are handy because they tell us exactly how much light gets through, no matter the focal length of the lens. For example, if we set the F Stop on a 100 millimeter lens to two, we get the same amount of light as we do with a 50 millimeter lens with the F Stop set to two. The F Stop is there for an important idea. Let's stop here so you can get some practice with it
in the next exercise. And just to make it clear, I did take that with an F Stop of two."
Pixar in a Box,Virtual cameras,How virtual cameras work,Depth of field,"In this video we'll explore why regions in our scenes can go ""out of focus."" The region of our scene which is in focus call depth of field.. ","- In the previous video, we saw how lenses can focus parallel light rays to a point on our image plane, resulting in a sharp image. This means that if our image plane is set at the focal length of our lens, then objects that are very
far away appear sharp. For example, imagine a scene with Joy standing a mile away from
the camera, like this. If we look at the scene
from the side, we get this. Notice the light rays that bounce off Joy and enter the camera are
approximately parallel. If we place our image plane at the focal length of the lens, Joy will be in focus. But what happens when
we try and make an image of nearby objects in our scene? Imagine we move the camera so that Joy is standing just a few feet away. Now pick any point on Joy and look at the light rays that are
heading from that point toward the lens of our camera. Notice that these light
rays aren't parallel, they fan out. Because they're hitting
the lens at an angle, they are redirected to a point a little farther away
behind the image plane. Over here. And where the light rays actually hit the image plane, they're spread out in larger circles instead of tiny points. This results in an image of Joy which is out of focus. To see this effect clearly, check out this out of
focus shot of lights. These blurry circles are
known as Circles of Confusion. They're a result of light rays which haven't been focused to a point on the image plane. And when an image is in focus, the circles of confusion are so small, they appear as points in our image. We can bring Joy into focus by moving the image plane back a little. There. At this distance, Joy
will be in sharp focus. Remember with our pinhole camera just the size of the pinhole determined how blurry or sharp everything in our image was. And with a tiny pinhole, the entire scene was in focus. But now, with a lens in there, only a slice of our
scene will be in focus. And anything which moves outside of this in-focus region, either too close or too far away, will appear out of focus. This is known as Depth of Field. Filmmakers control the depth of field with their choice of lens and aperture, or F Stop. Let's do an example with multiple Joys at different distances from our camera. If our aperture is very small, that would be with a large F Stop, then the depth of field will be larger and the transition from sharp to blurry is very gradual. To see this, let's start with a subject that's in sharp focus. As I move it farther away, the blurry region
doesn't change very much. This is Deep Depth of Field. So more than one of our
Joys will be in focus. Now, let's increase the
size of our aperture, that is, a smaller F Stop, and start again with our subject in focus. Moving the subject even
just a little further away causes the blurry region to get big fast. This is called Shallow Depth of Field. Now, just a tiny slice of our scene will be in focus. So with a small aperture, or large F Stop, the depth of field is deep. The entire scene is in focus. With a larger aperture, or smaller F Stop, the depth of field is shallow. Only a small slice of
our scene is in focus. In the next exercise, you'll have the opportunity to explore how both aperture and lens length affect depth of field."
Pixar in a Box,Virtual cameras,How virtual cameras work,Storytelling with camera,"How are lens choice, camera movement & depth of field used to increase artistic impact of our films? We'll also explore how we get things wrong on purpose.  ","- You remember Patrick from
the first video in this lesson? I've invited him here to talk
a little bit about camera use. - Cheese! - Can you tell us a little bit about how you use depth of
field in storytelling? - So, the one that has depth of view is part of the storytelling
is a short film that I worked on called The Blue Umbrella. When the director, Saschka,
approached me about doing the cinematography, he wants
the audience to feel like they are kinda watching
this love story unfold, in front of their eyes. So the idea was to try
to use a longer lens so that there's a distance between the camera to the subject. It's like when you're in love, you know? You just don't look at anything else. You kinda concentrate on
the person in front of you. And that's kind of the
feeling we're trying to get. (happy music) - In addition to all the
other choices you make, you could also choose to move the camera during a shot. Do you ever use that to help tell a story? - Oh, yeah, camera
movement is very important. For Inside Out, camera
movement is a big part of the camera structure of
how the inside world works and the outside world works. The inside world is a perfect world? It's imaginative. So all the camera movement
is very mechanical, it's very deliberate. Whenever it's moving you can
kinda predict where it's going. So everything is very formal. On the outside world, on the
other hand, is more organic, depending on the moments. So how we move the camera
is very, very important. - And you're also focusing
just like with a real camera to make sure the right
things are in focus. Do you ever use focus as
a way of telling a story? Or the way you focus? - Yes, actually on Inside
Out, we used focus to try to add to the imperfection of
the real world, Riley's world. Because Riley's world is
based on a real location, San Francisco, Minnesota. We want the camera, it just feels natural that the camera should feel real. And imperfection is
part of the real world. And something about Pixar's focus is that everything is always so perfect, because we're inside a computer. So we purposefully, in act two and act three especially, when the cameraman is
trying to follow an action, we purposefully miss some of
the focus and then refocus. It's just some of the subtlety we're trying to do to try
to get to the imperfection. It's something that hopefully
the audience can feel but not something that
they can just say oh, yeah, I can see what they did. - Thanks, this is fascinating,
thanks for coming by. - Well, thank you for having me, Adam."
Pixar in a Box,Virtual cameras,How virtual cameras work,Getting to know Eben Ostby,Get to know more about Eben Ostby. ,"- When I started college, computer graphics was a
really primitive medium at that point. It was plotter graphics and we had a device at our computer lab that allowed you to draw a picture with lines and so that's where I learned about geometric transformations
and linear algebra and the things that go into CG because we had this device and I wanted to draw pictures on it. When I started at Pixar,
I got a summer job doing what you would now call IT, which was what we called
the Systems Group. I kept one of the four computers that we had in the main computer room. I helped keep it running,
and in my off hours, I got to use the CG lab that had a handful of image computing devices in it. Because I was really interested in that, I had spent more and more time there and when there was some work
to be done in the graphics side of things, I did that,
that was really fun. I built most of Andy's
neighborhood with some help from some other people
who built a few houses. I created the street and the road and I dressed the trees in and I worked with somebody to make
the trees renderable. I also built Scud, the dog. Scud started as a big sculpture and sculpey of a big dog and we had to figure out a
way of wrapping a surface, a CG surface around Scud and
making it all kind of connect, and then articulate, make it move, get the controls in so the
animators could move it, and then work with another people to put color on him and fur on him. I will spend a Saturday
taking apart a camera, taking all the old grease
out and making it work again, maybe making new parts
of some of the old ones that are broken and
putting it back together, or I'll go on a road
trip and take pictures 'cause there's nothing better
than road trips and cameras."
Pixar in a Box,Virtual cameras,Mathematics of depth of field,Mathematics of pinhole cameras,In this video we'll find the intersection point of a light ray and our image plane. ,"- In the last lesson, we explored the geometric behavior of cameras. We saw how light bounces off objects, passes through a small hole or aperture, and hits an image plane. One of the important concepts we covered was depth of field,
which is a region where objects appear in focus. Outside that region,
objects appear blurry. When a point at an image is out of focus, it grows into a blurry circle known as the circle of confusion. In this lesson, we'll develop
the algebraic equations which tell us exactly where
things come into focus, and how big the circle
of confusion will be if something isn't in focus. And these equations
will allow us to create virtual cameras to create stunning images, such as this shot. To begin, let's return
to our pinhole camera. As usual, when bridging the gap between geometry and algebra, we'll need to introduce
a coordinate system. It's convenient to choose
our coordinate system so that the pinhole is at
the origin, right here. And let's imagine that our
scene is off to the right. Suppose the image plane inside our camera is at some distance to
the left of the pinhole. Let's call this distance i. Now consider a point on
some object in our scene. Call this point x zero, y zero. When light in the
environment hits this point, some of it will bounce toward the camera, through the pinhole and
hit the image plane. Let's call the place it hits
the image plane x one, y one. So our first question is
what is x one and y one? One way to solve this is to use the slope intercept form of a line. The slope of the ray
is y zero over x zero, and the y-intercept is zero because we said this ray
passes through the origin. That is, the equation of the ray is just y equals y zero over x
zero, times x, plus zero. Or, simply, y equals y
zero over x zero, times x. Now the point we're
looking for, x one, y one, is also on this ray, so it must
satisfy that line equation. Meaning y one equals y zero
over x zero, times x one. And notice the diagram tells
us that x one is negative and a distance i away from the origin. That is, we know x one equals minus i. Finally, to get y one, we
just substitute to give us y one equals minus y zero
over x zero, times i. Notice that the point
was originally positive but the corresponding point
on the plane is negative. And that's the image flip. Okay, let's pause here to give
you some experience with this before we add a lens to our camera."
Pixar in a Box,Virtual cameras,Mathematics of depth of field,Thin lens approximation,In this video we'll explore what happens to light rays when they pass through a lens. ,"- Now, it's time to add a
lens to our pinhole camera. In the previous lesson,
we explored how lenses bend or refract incoming
parallel rays of light and focus them at a single
point known as a focal point. We called the distance from the lens to the focal point the
focal length of the lens. Now, if an object is
really far from a lens, all the light rays leaving it are effectively parallel like this, and these rays focus at this point, which is distance f from the lens. We saw this relationship in lesson one, but now let's think about nearby objects. Where do they focus? That is, where would you
have to put the image plane to make this image sharp? To get started, we need to
introduce some new variables. As we say in lesson one, f is
the focal length of the lens. Let o be the distance to the
object we want to focus on, and let i represent the
distance from the lens and when the object comes into focus. Let's call this the focus plane. So, we need to develop a formula that lets us compute i from f and o. Before we can do this, we
need to look more closely at how lenses refract light. Refraction is actually
a little complicated, and it's described by an
equation called Snell's law, but we won't need it here
because we'll make an important simplifying assumption called
the thin lens approximation, which makes the math easier to solve. The thin lens approximation says that any ray that passes
through the center of the lens doesn't get bent at all. It remains straight. These are called medial rays. And we know that parallel
rays will refract as they pass through the lens and pass through the
focal point of the lens. That point is at distance f
from the lens on the x-axis. So, the focal length
efines where a parallel ray crosses the x-axis. So, now we have a definition of two rays which leave our object,
medial and parallel, and where the two rays intersect defines the distance i at which
the object comes into focus. And the really cool part,
the thin lens approximation says that all rays leaving this point will come into focus at the same place. And similarly, all points on
the plane parallel to the lens and at a distance o will come
into focus on the same plane on the other side, which is
why we call it our focus plane. If we can find the intersection of those two rays, then
we'll know where all rays from this object will come into focus. Pretty cool. Okay, let's pause here so
you can build your intuition about this diagram
using the next exercise."
Pixar in a Box,Virtual cameras,Mathematics of depth of field,Simple lens law,In this video we'll explore the algebra of light rays which are in focus. ,"(metal clanking)
(ball thudding) (bell dings) - Great work! Now that you know what's going
on to make a sharp image, let's calculate exactly where the point of sharp focus is. We know the point where the medial and parallel rays intersect. Again, let's put the origin
of our coordinate system at the center of the lens. And let the point to be focused have coordinates X zero and Y zero. The medial ray passes through the origin and the point X zero Y zero. So the line equation for it is just Y equals Y zero
divided by X zero times X. The parallel ray passes
through two points we know. The point on the lens it
hits, which is at zero Y zero, and the focal point of the
lens, which is at minus F zero. It has a slope Y zero over F, and a Y-intercept at Y zero. So the equation of this line is Y equals Y zero over F times X plus Y zero. To intersect these lines we set these equations
equal to one another. We have Y zero over X zero times X equals Y zero over F times X plus Y zero. Then we divide through by Y zero to give one over X zero times X equals one over F times X plus one. And now let's divide through by X, which give us one over X zero equals one over F, plus one over X. Notice the X in this
equation is the X coordinate where the lines intersect. According to our diagram this
happens when X equals minus I. Our diagram also tells us that X zero is equal to the object distance, O. So we have one over O equals
one over F minus one over I, which we usually rewrite as one over O plus one over I equals one over F. Ta-da! This is called the simple lens law. It says that an object at
distance O from the lens, with focal length F, comes into focus at distance I. In the next exercise we'll test your
understanding of this idea."
Pixar in a Box,Virtual cameras,Mathematics of depth of field,Out of focus objects ,In this video we'll explore what happens when an object is out of focus from a geometric perspective. ,"- Welcome back. Now that you're getting comfortable with the simple lens law,
let's go a little deeper. In the previous exercise you
found that the simple lens law can be written as i equals o
times f, divided by o minus f. So if the image plane in
our camera is at distance i, objects at distance o from the camera will come into crisp focus. But what about objects
at some other distance? Well, they'll be blurry. They're not in crisp focus. For example, the in-focus
leaves are at a distance that satisfies the simple lens equation. However, the objects in the
background are blurred out. And notice how the blur is
in the shape of a circle. Recall from the last lesson, we called this a circle of confusion. But how big is the circle? To answer that question,
in the rest of this lesson we'll develop a formula that describes the size of the circle, given
things like the focal length of the lens, the aperture, and
the distance to the object. As before, let's look
at this problem in 2-D and consider what happens to a point P with coordinates x zero, y zero, at a distance o from the lens. We can intersect the
parallel and medial rays to find the point where
P comes into focus. Let's call this A. And remember, every lens has an aperture, which restricts which rays
make it into the camera. Let's put a point E at
the center of our lens and a point D at the top of the aperture. In other words, DE is the
radius of our aperture. So all light rays from
P which pass through DE end up focusing at the same point A. And if the image plane
is at this distance i, then P will be in sharp focus. But if the image plane is at
a larger distance, i prime, say over here, then P's
image gets blurred out, into the region denoted BC in the diagram. This distance BC defines the size of the circle of confusion, that is, BC is the radius of the blur. Okay, let's pause here so
you can get comfortable with this diagram before
we finish our calculation."
Pixar in a Box,Virtual cameras,Mathematics of depth of field,Algebra of focus,In this video we develop a formula which tells us how big the circles of confusion are when an object is out of focus. ,"- Okay, now that you're
comfortable with this diagram, I think you are, we can develop our final formula. Remember, we need a formula that tells us what BC is in terms of things we know, like the focal length of the lens, the size of the aperture, and
the distance to our object, P. The key to this formula is to notice that there are similar triangles
lurking in the diagram. To figure this out, let's
simplify our diagram to show only the two
triangles we care about. Notice the triangle ABC is
similar to the triangle AED. That means that the length BC divided by the length DE is equal to
the length AB divided by AE. Let's call this Equation One. We know what DE is, that's
the radius of the aperture. But we don't know AB or AE. I'm also gonna add two
new points, F and G. This gives us two new right triangles, ABF and AEG, which are also similar. This means that AB divided by
AE equals FA divided by AG. But, FA is just the difference between i and i prime,
and AG is the distance i. So, we can rewrite this
as AB divided by AE equals i prime minus i, divided by i. And now, let's substitute
this back into Equation One, which gives us BC divided by DE equals i prime minus i, divided by i. Finally, we just solve for
BC, which gives us our answer. BC equals DE times i prime
minus i divided by i. Ah, ha, we have an equation
for the Circle of Confusion. (chiming) If you wanted to, you
could also substitute i and i prime from the
simple lens equation to write out the radius
of the Circle of Confusion in terms of F, O, and O prime. I'll leave that for you to work
out in this final exercise."
Pixar in a Box,Effects,Introduction to particle systems,Effects overview,Overview of this lesson. ,"- Hi, I'm Eric Lacroix and I'm
an effects artist at Pixar. - And I'm Sarah Beth Eisinger,
another Pixar effects artist. - At Pixar, when we say effects, we mean the creation and animation
for anything that moves... - But isn't a character. Almost all the natural
phenomena in our films are created by the effects teams. - Things like dust. (air blowing) (coughing) (soft crunching) - Smoke! (loud blare) (coughing) Fire. (sizzle and crackling) (cough) - Explosions? - No. (bang) (loud, dramatic boom) - And effects creates
water in its many forms. - [Eric] Making believable
water in the computer is really exciting and really challenging. That's partly because
water takes so many forms. Placid Lake you could swim in, or rushing river you would
not want to be caught in. - [Sarah Beth] The type of water we create depends on the story we're trying to tell. And the way we approach water is different depending on how it
interacts with the characters and how close we are to it. - One of the tools we use
to create believable water in the computer are particles. - [Sarah Beth] Let's start
with a single particle. We can apply forces to
that particle such as wind, or gravity, or more particles
that push and pull each other. By adding many, many, many more particles and applying those same forces, we begin to create water in the computer. (water splashing) - [Eric] Water in the real world is also made up of particles, because molecules are really
just super tiny particles. And even though are particles
are much, much bigger than molecules, the physics are similar. So we simulate those real world
forces using math and code. - [Sarah Beth] It would
take years and years to individually animate
the billions of particles that make up the water in these scenes. So it helps that we can use
an existing set of rules that particles in the computer can follow. (splash) - You are probably asking yourself, how can I create water for animated films? - Great question, Sarah Beth. In the following lessons,
you'll learn all about creating water using
particles and simulations. - Have fun and stay dry!"
Pixar in a Box,Effects,Introduction to particle systems,Introduction to particle systems,"Let's get started! First we'll explore the origins of particle systems with the man who invented them, Bill Reeves. ","- Hi, I'm Matt Wong, an
Effects Technical Director here at Pixar. I work with Sara Beth and Eric who you met in the previous video and
this is the pool they were in, the Pixar Pool, which
is one of the nice perks of working here at Pixar. We don't just use the pool for recreation, we sometimes use it for work, too like in this reference video
we shot for Finding Dory. We wanted to see what it
would look like underwater when large objects like
this pumpkin hit the water. In the previous video
you learned that water and other physically
phenomena like smoke, dust, and fire can be simulated
using lots and lots of individual particles. Using particles is a
simplification of real physics but it's an effective tool for artists. The more particles you use the closer you get to real physics. Most of our simulations
require millions and millions of particles to create believable water. Keeping track of that many
particles would take too long for humans to do. Even computers have trouble
with large particle counts but we've developed some practical methods that you'll learn about in this lesson. One of the most power techniques we use is called a particle system. Particle systems were first
invented by an effects artist named Bill Reeves to
create a shot for the movie Start Trek Two back in 1982. The shot was called the Genesis Effect and it blew people away. It was a real milestone
in computer graphics. At the time Bill was working for a group that eventually became Pixar. And you know what, he still works here. Hey Bill. - Hey. - Can you tell us a little bit more about the Genesis Effect? Like what was the story point? - Well the Genesis Effect was this device that could turn a living
planet into a dead planet or a dead planet into a
living planet and I used particle systems to do the
transformational fire element at that. - And today we still use particles for lots of different effects. In the rest of the lesson you'll
learn how we use particles to simulate the motion of water and you'll create a fireworks show."
Pixar in a Box,Effects,Introduction to particle systems,Simulating water ,How can we model water using particles? Click here to learn more about elasticity on Khan Academy. ,"(bouncing) - Okay, let's dive into
the use of particles for simulating water. (water splashing) Before talking about how
lots of particles move, let's start by looking at
how one particle moves. If I drop a particle, or a ping pong ball, it accelerates towards the ground. We also saw this kind of
motion in the animation topic. Notice that it bounces back up, but not quite as high as it started. It loses some energy during the bounce, and eventually when it loses
all of its energy, it stops. Now let's look at our
ping pong ball simuator where we model each ping pong
ball using a virtual particle. The virtual particle accelerates downward until it hits an obstacle, and then it bounces back up,
only with a little less energy. With this simulator,
we can control how big the particle is using this slider. We can also control how strong the gravity is using this slider. A small gravitational value
similar to the gravity found on the moon causes the particle to fall more gradually. A larger gravitational value, like the gravity here on Earth, causes the particle to fall
at a more familiar rate. And sending it to a very
large gravitational value, like on Jupiter, makes the
particle fall really quickly. We can also control how much
energy the particle loses during a bounce, by
controlling its elasticity. It describes a fraction of energy that is retained when
the particle bounces. Elasticity is a number
between zero and one. A value of one means the
particle loses no energy. It'll bounce forever. This is called perfect elastic collision, and it's something that
doesn't happen in real life. A value of zero means the
particle loses all of its energy. In this case, sticking to the floor. Intermediate values give the
particle more realistic motion. Elasticity is also used
to control the energy loss when particles hit each other. If we set elasticity to zero,
then the particles will lose all energy when they collide. Like this, similar to a pile of marbles. And as we increase the elasticity, we get something that looks
more like rubber balls. And of course, you can also change the size of the particles. Let's pause here so you
can use the next exercise to get some experience with
the range of particle behavior you can achieve by
changing the particle size, gravity, and elasticity. (playful music)"
Pixar in a Box,Effects,Introduction to particle systems,Smooth collisions,To make realistic water we'll need to soften the particle collisions. ,"(springy bounce) - Hey, welcome back. You probably noticed that
the ping pong ball stimulator looks a little more like sand than water. For instance, the balls can
pile up on each other like this. We used a stimulation much
like this in Finding Dory. For instance, the sand in this shot. And the East Australian
current in this shot. To create more water-like stimulation, we need to remove the hard
boundary of the balls. They don't just bounce
off like ping pong balls. They kind of smush together
to create a soft collision. The smooth collisions are an approximation of the pressure forces that
water normally experiences. There's a fancy name for
this kind of stimulation. It's called ""smoothed
particle hydrodynamics"" or ""SPH"" for short. Hydrodynamics literally
means the motion of fluids. Now let's look at how lots
of smooth particles interact. We can control how the particles collide using this parameter
called Collision softness. Okay, so this is getting pretty close. Another parameter we can
control is called Viscosity. Viscosity is a measure of
how easily things flow. Fluids with low viscosity like water, flow pretty freely as we see here. Fluids with high viscosity
like honey, flow more slowly. Like this. (water rippling) The more particles you add,
the more computation is needed and the slower the program responds. (slow motion water ripple) Here's an example of
SPH from Finding Nemo. It takes place inside
the mouth of a whale. We've drawn the particles as balls here so you can watch their motion. In the next exercise,
you'll get some practice experimenting with these
different parameters to get a wide range of behaviors. See you soon!"
Pixar in a Box,Effects,Introduction to particle systems,Create water surface using particles,How do we draw a surface of water using only particles? In this video we'll introduce a powerful analogy using heat to help us out. ,"(bouncing) - In the last video, we saw this preview of a shot from Finding Nemo where we've drawn the particles as balls to illustrate their motion. For the final shot, we
used the particle positions to compute a surface. Then we rendered that surface
to look more like water. To draw a smooth surface
using individual particles, we use an analogy involving heat. First, imagine these
particles are little heaters. Next, pretend we have a thermometer which tells us the temperature
at any point in space. For example, the particles
might be exactly 1,000 degrees, and as we move away, things cooled down. Let's say this point over
here is exactly 100 degrees, and there isn't just one point in space which is 100 degrees, but many points. So if we connect all points
where the thermometer says 100 degrees, we get a
curve shown here in yellow. And that's the trick. Now we can fill in this yellow
curve with a solid blue color to give us something that looks
more like a puddle of water. If the particles are far apart, they each form their own
isolated region, like a droplet. As they get closer, the
droplets start to glob together, mimicking real water. Here's a version with
a few more particles. This is starting to look like water. It would really look like water if we had a few thousand particles. For use in our movies, we
work in three dimensions, and the curve becomes a surface like in this shot from Finding Dory, or in this more extreme water simulation also from Finding Dory. Here's an example from
Monsters University. Here we're simulating
paint, instead of water. We've turned up the viscosity since paint is more viscous than water. We weren't exactly sure
how paint would behave so one of the first things
we did to create this shot is to videotape reference of real paint. The reference really helped
us create a believable look. Let's pause here so you can practice using the next exercise. Good luck. (playful music)"
Pixar in a Box,Effects,Introduction to particle systems,What else can you make with particle systems?,In this video we'll show you how to create fireworks using the exact same methods we used to make water. ,"(bouncing) - As we mentioned earlier, particle systems can be
used for more than water. Lots of other effects
can be created with them. Like fireworks, for example. (explosions) To see how that works, let's start by launching a few particles under the influence of gravity. When they reach the top of their arc, they explode to create other particles. We'll call these child particles. You can vary the strength of
gravity using this slider. A large value keeps the
particles from rising very high, and a small value causes
particles to fly off the screen. Notice that the child particles disappear after a short time. This is called their lifetime. We can vary the lifetime
using this slider. Let's also increase the number of child particles that get created. To create something more believable, let's add some randomness. For instance, let's add
some random variation to the speed of the child particles. That's better. Let's also add some variation to the angle at which the initial
particles get launched. Awesome. See what kind of fireworks
display you can create in the next exercise. (explosions)
(whistling) And in the next lesson, we'll look more closely at the physics underlying
the ping pong ball simulator, which you'll need to understand if you want to code up your
own simulator from scratch. (explosion)"
Pixar in a Box,Effects,Introduction to particle systems,Getting to know Matt Wong,n/a,"•Current transcript segment: 0:00(bell dinging)•0:01- As a kid my interests were sports.•0:04I loved playing outside,
but more academically,•0:07I love math and science.•0:09One year for Christmas, my mom and dad•0:10got me a chemistry set
and I went wild with it.•0:14I almost lit the house on fire.•0:18My first film here at
Pixar was Partly Cloudy.•0:20It was a short film,
directed by Pete Sohn.•0:23The cloud characters were originally•0:24hard surface characters,
but we used particles•0:27to turn them in to
fluffy cloud characters.•0:30The thing I like most about
being an effects artist•0:32is the variety.•0:33I get to do water, fire,
fireworks, smoke, dust.•0:36It's a little bit of everything.•0:38In effects we always work in teams.•0:41We split up the work into various shots,•0:43but we're always looking
at each other's work,•0:45comparing each other's techniques,•0:48solutions to problems.•0:49It's a very collaborative effort.•0:51We give and take from each other,•0:53and we kinda try to match the look•0:55amongst the entire team.•0:57In effects, we usually deal
with big hard problems.•1:00We almost always get it
wrong the first time,•1:03the second time, and the third time.•1:05We do things over and over and over again,•1:06until we get them right.•1:08For some of the most difficult shots,•1:10I must have done it at least 15, 20 times•1:14before I got it right.•1:15And even then it maybe
needed a few more iterations•1:18to get it exactly right."
Pixar in a Box,Effects,The physics of particle systems,Graphing motion over time,"First let's review position, velocity and acceleration vs. time curves. ","- In this lesson, we'll revisit
our ping pong ball simulator but this time from a mathematical or quantitative perspective. By the end of the lesson, you'll learn everything you need to code up your own
ping pong ball simulator and much more. Specifically, we are going to develop mathematical formulas to do three things. One. Describe how particles move based on laws of physics. Two. Control how
particles collide with the walls of the container
and with each other. Three. Create a method
to track particle motion forward in time. To begin to understand how particles move let's draw different kinds of motion. By motion, we mean how
the position of particles will change over time. We got an idea of how things
move in our animation lesson. In that lesson, we animated a ball by drawing it in different
positions over time using each frame indicated
at the bottom of the screen. If we draw the ball
moving an equal distance between each frame, it looks like it's sliding
along a friction-less surface. The speed isn't changing. It's constant. If we plot the position
of the ball over time, we get a straight line. Here, time is expressed
on the horizontal axis and the distance the ball has moved is plotted on the vertical axis. The slope of the line tells us how fast it's moving. A steeper slope means a higher speed. The slope is a change in position divided by the change in time. Now, what if we wanted to plot the ball's speed over time? If the ball speed doesn't change at all, we get a plot like this: A straight horizontal line. A harder challenge is animating the ball so it actually looks like
it is being acted upon by gravity. To do that, we have to
increase the distance that the ball travels between each frame. This is because the ball
needs to speed up as it falls. When we plot the ball's position over time we get a curve. This is because at each
frame we are changing the slope of the line. Now, if we plot the speed
of the ball over time, we get a non-horizontal line. That's telling us that the ball speed is no longer constant. The slope of the line
is telling us how fast the ball's speed is changing. Just like we plotted
the change in position to get the ball speed, we can plot the change in speed to get acceleration of the ball. Here is the plot of
the ball's acceleration versus time. Notice it is a straight line which means the acceleration isn't changing and that's because the acceleration due to gravity is constant. To summarize, speed is
the slope of the ball's position versus time curve. Similarly, acceleration is the slope of the speed versus time curve. As shown in these equations, speed is equal to change in position divided by change in time. And acceleration is
equal to change in speed divided by change in time. But let's pause here. In the next exercise, we'll challenge you to think about how the motion of
objects changes over time in terms of position,
speed and acceleration."
Pixar in a Box,Effects,The physics of particle systems,Vector addition,Every force in our particle system will be represented with a vector. To review vectors on Khan Academy click here. ,"- You should now have a good
feeling for the relationship between position, speed and acceleration. Before we can (mumbles)
formulas to describe how the particles will move
based on the laws of physics, We need to revisit how we think about the speed of the particle. We need to know not only
how fast it's moving, but also the direction of motion. In this case downward. We are using idea called a
vector to represent things that have both the size and the direction. Vectors are joined as arrows. The direction is which way it's pointing, and the length of the
arrow called the magnitude of the vector, indicates it's size. We call this point,
the tail of the vector, and this point, the head of the vector. A vector called the
velocity, is used to describe the speed and direction of the particle. A short vector means the
particle is moving slowly. A long vector indicates that
the particle is moving quickly. In this diagram the
balls motion is downward, so the velocity vector points downward. If the particle is accelerating, for instance due to gravity, the length of the velocity
vector will increase over time since the speed is increasing. Acceleration is also a
vector because it too, has a magnitude in direction. But notice the size of
the acceleration vector doesn't change as the ball falls. As we saw on the last video, a particle falling under
the influence of gravity has a constant acceleration. That is both the direction and size of the acceleration
vector is constant. As shown here. We also need to add vectors together. We do this using the head to tail rule. For example, if we need
to add vectors v and w, we move w so that v's head is at w's tail. Like this. The resulting vector written v+w, goes from v's tail to w's head. Okay, that's a lot of new ideas. So let's pass here for you
to use the next exercise to try this all out. We couldn't make our
films without vectors. Vectors are being used any
time you see anything moving in our films."
Pixar in a Box,Effects,The physics of particle systems,Understanding net forces,When multiple forces are acting on a particle we'll need to express them as a single force known as a net force. ,"(bouncing) - Sir Isaac Newton famously observed that objects at rest stay at rest unless they're acted on by a force. And objects which are in motion
have an unchanging velocity. For example, a particle
floating through empty space would never stop. So whether a particle is motionless or traveling at a constant velocity, if no forces are applied to the particle, then no change in velocity occurs. That's called Newton's First Law. In order to accelerate our particle, that is, to change its velocity, a net force must be applied. As with velocity and acceleration,
forces are also vectors. The force due to gravity for
instance, will point downward, and its length will depend on
how much gravity is present. If this gravitational
force is the only force acting on the particle, then
its velocity will change, meaning it will accelerate
in the direction of the force vector. But what if there are multiple forces at work on the particle? Like if I add a wind force
in addition to gravity. Suppose for instance, that the
wind is blowing to the right half as strongly as the force
of gravity pointing downward. We need to add these forces
together using vector addition to determine the net force. Written as an equation, net force is equal to gravity plus wind. Since the net force is now
pointing down and to the right, that also dictates the direction that that particle will accelerate. If there are more forces at work, we would add those forces all
up to determine the net force. And that would determine the direction the particle would accelerate. For instance, suppose the
particle is sitting on a table. Gravity is pulling the particle downward, and the wind is pushing the particle to the right, as before. But there's another force at
work on the particle, too. The table is pushing up on the
particle to resist gravity. So our force diagram looks like this. The forces of gravity and the
table, cancel each other out, leaving the wind force as a net force. Okay, in the next exercise
you'll get some practice working with net forces. (water splashing)"
Pixar in a Box,Effects,The physics of particle systems,Force and acceleration,What's the different between a wind force and the force due to gravity? This video covers both Newton's second law of motion and law of gravity. ,"- Welcome back. So now we know if a net
force is acting on a particle then it will accelerate in that direction. By how much will it accelerate? To answer the question of
how force and acceleration are related, Newton observed
that if you increase the net force by, say, a factor of two, then the acceleration
increases by that same factor. This means that force and acceleration are proportional to one another. But that's not all that matters. Next, let's consider the
mass of our particle. Imagine we have two
particles floating in space, which are the same size
but have different masses, like if one is a ping pong ball and the other is made of lead. If we applied an equal force, like wind, to both particles, what would happen? Both particles would
experience the same net force in the direction of the wind, but they wouldn't
accelerate at the same rate. The less massive particle,
the ping pong ball, would accelerate faster
than the one made of lead. So less mass results in more acceleration and more mass results
in less acceleration, meaning that mass and acceleration are inversely proportional to one another. And we already know that acceleration is proportional to force. Putting these together we see that acceleration depends on
the magnitude of net force, which is proportional to acceleration, and the mass of the object, which is inversely
proportional to acceleration. This gives us a is
proportional to f divided by m. Multiplying both sides by m gives m times a is proportional to f. And if we flip this, we get f
is proportional to m times a. Newton found that f isn't
just proportional to ma, it's in fact equal to ma. This is Newton's second law, f equals ma. To recap, f is the net force
acting on the particle, m is the mass of the particle, and a is the acceleration of the particle. Now let's consider the force of gravity. You made have heard of the famous story about Galileo's experiment in 1589, where he dropped two balls
off the Leaning Tower of Pisa. One was made of a light material, the other a heavy material. You might be surprised
to know that he observed that the two balls accelerated
at exactly the same rate. That blew everyone away. At the time, everybody, starting
with the ancient Greeks, just assumed that heavier objects fell faster than lighter objects. So unlike wind, the force of gravity seems to be independent of mass. The interesting question is why. Newton gave us the answer. His first law of gravity said
that more massive objects experience greater gravitational force and his second law says that mass is a resistance to acceleration. These two competing trends,
one encouraging acceleration and one resisting it,
cancel each other out. To see why this happens mathematically, Newton theorized that force
due to gravity, call it big F, is proportional to the
mass of the particle. Big F is proportional to ma. Think of gravity as an
acceleration vector, call it g, such that big F is equal to mg. So we have two equations. Newton's second law,
little f is equal to ma where little f is the net force and Newton's law of gravity
where big F is equal to mg. For a particle being
acted on by only gravity, the net force little f is big F. Little f is equal to mg is
equal to big F is equal to ma. Or more simply, mg is equal to ma. Notice the m cancels,
leaving just g is equal to a. That is, the acceleration of a particle, when acted on only by gravity, is independent of the
mass of the particle. This is why objects of different
mass fall at the same rate. An equation like this one, that allows us to compute the acceleration of particles, is called an equation of motion. We've covered a bunch of new and important concepts in this video. So let's stop here for some practice, using the next exercise."
Pixar in a Box,Effects,The physics of particle systems,Particle collisions,What happens when particles hit each other or a surface? To learn more about what happens when particles collide click here. ,"(metal clanging) - We finished going over
the first of three things you need to create a particle simulator. We have formulas that describe
how particles will move based on the laws of physics. In this video, we'll develop formulas that describe how particles
will behave during collisions. If velocity is perpendicular to the floor at the moment of collision, and the collision is perfect, then the velocity reverses. In the real world, its direction reverses, and the magnitude is slightly reduced due to friction. As we introduced in lesson one, we can model the frictional losses by multiplying by a factor that measures the elasticity of the collision. So if V is the downward velocity before the collision with the floor, then the velocity, called V prime, after the collision is given by V prime is equal to negative E times V. Here E is the elasticity, a number between zero and one, and the minus sign indicates
the direction reverses after the collision. If E equals one, the collision is perfect, and no energy is lost. If E is less than one, then some energy will be lost, but what if the velocity
makes an angle with the floor. Let's observe what happens on video. Notice that the ball bounces
just like a light ray reflects off a mirror. That is, if the incoming velocity V makes an angle Theta with the floor, then the outgoing velocity called V prime makes the same angle. To compute V prime from V, let's write V as the sum of two vectors, a velocity parallel to
the floor, V parallel, and the velocity
perpendicular to the floor, V perpendicular. The only force during the
collision is perpendicular to the floor because the
floor pushes up on the ball. So the parallel component won't change, and the perpendicular
component, as before, will be reversed, meaning that V prime is equal V parallel minus V perpendicular. Adding elasticity into the mix, we get this equation. Cool, we can use the idea
of writing the velocity as the sum of parallel and
perpendicular components to study the case when
two particles I and J of the same mass collide. Let's draw a picture to make this clear. The line I, J from the
center of particle I to the center of particle J plays the role of the
perpendicular to the floor. (bell dinging) So we write V, I as a sum of two vectors, as shown here. We can do the same for V, J. The only force acting on the particles during the collision
is along the line I, J. As before, since no force is acting in the parallel direction, the velocities in the parallel
directions won't change. To figure out exactly what happens in the perpendicular direction requires using more advanced topics, namely, conservation
of energy and momentum. (chiming) If we apply those concepts and assume that the
particles have the same mass, we find that particle I gets
J's perpendicular velocity, and vice versa. That is, they swap
perpendicular velocities. (bell chiming) That means after the collision, the velocities V prime I and V prime J are given by these equations. That's it for particle collisions. In the next exercise, you'll have a chance to
review these equations, which describe collisions. (cheerful music)"
Pixar in a Box,Effects,The physics of particle systems,Animating particles,Now we'll pull everything together and explore how we calculate the position of a particle over time (frame by frame).  ,"- The final step to complete
our particle simulator is to develop a method to track particle motions forward in time. That's how our computer
program will animate them. One frame at a time. We said earlier that if you know the equation of motion of each particle, then you can compute the
velocities and positions from it. But how exactly? To answer that question, let's go back to the idea of velocity as the slope of the
position versus time curve. Put two values of time, t one and t two, close together, and let p one be the
position at time t one and let p two be the
position at time t two. The slope of the line l, shown here, is a good approximation of the velocity v one at time t one. The closer that t two gets to t one, the better the approximation. As an equation, the slope of l, that is the velocity v one, is given by the change in position divided by the change in time. If we know the position
and velocity at time t one, then we can compute the
position in time t two by rearranging this
equation to solve for p two. Great. So knowing the
particle's position and velocity at time t one, we can compute
the position at time t two using this formula. But how do we get the
velocity at time t two? Well, if we know the equation of motion, then we can compute the
acceleration at time t two. For instance, if the particle is just being acted on by gravity, then the acceleration is constant, and is given by the
gravitation constant g. We also know that the acceleration is the slope of the
velocity versus time curve, meaning gravity equals
a change in velocity divided by the change in time. And we can solve this for v two. Now that we know p two and v two, we can repeat this process to compute p three and v three and so on, for as long as we like. Let's do an example. Suppose that at the
start of the simulation, we set our time parameter t to 0, our particle is at point p
one with velocity at v one, and the gravity vector g points down. To figure out where the particle will be at time t equals one half, we use the equation p
two is equal to v one times the quantity t two
minus t one plus p one, where t one is equal to zero
and t two is equal to one half. So, p two is equal to one
half v one plus p one. Meaning that p two is halfway
between v one's tail and head. And to figure out v two, we use v two is equal to g times the quantity t two
minus t one plus v one. G here is the gravitational
vector which points downward, and on Earth, has a magnitude of 9.8 meters per second squared. Again, t two minus t one is one half, so v two is equal to
one half g plus v one. Great. Now we can compute the position and velocity at t equals one using the same formulas. Although this is rather
tedious to do by hand, it is relatively easy to
write a computer program to do these calculations for us. Like this. Congratulations. We now have all the parts we need to create a ping pong ball simulator. (chimes) In the final exercise, you can test your understanding of these concepts before moving on to create your own amazing
particle simulations."
Pixar in a Box,Patterns,Geometry of dinosaur skin,Introduction to Patterns,Brief overview of what we'll cover in this lesson. ,"(lazy western music) (clock beeps) - What is the holdup? - Ugh, shading artists at the salad bar they just get a little too involved. - Is it a fractal? - I think so, that puffy
shape repeats itself. Oh, maybe we should talk
about this somewhere else. - I'm Beth, I'm a shading artist. - And I'm Ana, I'm also a shading artist. This lesson is about patterns, which we use in shading all the time. - Shading is creating
the surface appearance of all the stuff you see in our films. Cars, bugs, trees, aliens, they all start out modeled
three-dimensional objects, but they don't have surface
characteristics yet. - [Ana] We create and apply the textures that make our characters and sets seem like they're made
out of something real. - [Beth] The word seem
is really important here, because we're not trying to
recreate reality exactly. - We're trying to capture
the essential qualities of a surface that make it feel believable. - [Beth] And a lot of times, that quality is actually a pattern. (playful bongo music) - When we begin creating a surface, we usually start by looking
at reference images, or things from the real world. - [Beth] We look at a
few different qualities, color, illumination, which is how the surface reacts to light, and displacement: how
bumpy or smooth it is. - Let's talk about how
we did that with Arlo. In The Good Dinosaur, Arlo was supposed to feel young and fresh. We actually used the succulent plant called Titanoplis, as a
reference for his skin. Looking closely at the plant,
we were able to deconstruct what made it feel right for Arlo. First of all, there was a series of cells that formed the main
feature of the pattern. In terms of color, these cells had one color in the cell itself, and the ring around the
cell was a darker color. The surface of the plant was shiny, but it wasn't a sharp
shine, it was a soft shine. Finally, the cells that
made up the main pattern were displaced from the surface,
so it was kind of bumpy. Once we figure out these main features, we started creating a pattern. However, to make the pattern feel organic, we needed to do something
else to it: add randomness. - Believable randomness can
be surprisingly difficult to achieve in computer graphics. Computers are great at
modeling regular patterns, but in nature, most of
the patterns you see have some variation or irregularity
within their structure, giving them a quality of
controlled randomness. - Getting that randomness
into Arlo's shading was a big challenge, but we
used some interesting techniques that we'll share with you throughout the rest of this lesson. - And you'll get to use
randomness to create and manipulate patterns of your own. - I bet after this they'll
all start looking at the world like a shading artist. - Hey, check out the bubble
pattern in this baguette. (playful accordion music)"
Pixar in a Box,Patterns,Geometry of dinosaur skin,What are shading packets?,Introduction to shading packets. ,"(footsteps) - We're on our way to the art department, but we can't show you much of it because everything there is super secret. - In the previous video, we saw how patterns were created to texture the dinosaur, Arlo, for the
movie The Good Dinosaur. In this lesson, it will be your turn to make some convincing dinosaur skin using patterns, colors, and randomness. - (Ana) We're
going to introduce you to some techniques used
here at Pixar to do this. - (Beth) Such as voronoi diagrams. - (Ana) And how we use randomness to make it look more organic. - (Beth) By the end of this lesson you'll be ready to make
your own dino skin. - And no matter what we're building, it all starts with a shading packet. - And the shading packet comes from one of the artists in the
art department such as Tia. (knocking) - Hi!
- Hey. - How are you guys?
- Great. - Good, I have a present for you. The dino leg shader packet. There's a few pieces here for you. Some reference, some color specs, and some real reference. Those are for the claws. I don't have all the answers. I'm leaving it up to
you guys to do the rest. I've got to go run and teach a class, so can I leave this with you? And you're welcome to use my office. Have a blast. - Great.
- Thank you. - Thank you! Bye. - The shading packet is a collection of drawings and images that will guide us through the process of
creating our dino skin. - (Beth) It all begins on paper because it's much faster
to iterate that way. - (Ana) Shading
packets also contain reference photographs like this cactus, which is a real-life approximation of the look and feel we're going for. - (Beth) This is a wonderful inspiration for the
scales of our dinosaur, but it's just a starting point. - (Ana) Let's
examine these drawings a little more closely and see what kind of things Tia has identified. - (Beth) First notice there are a number of scales of
varying sizes sticking out, or extruding from the skin. We'll need to figure
out how to build these. - (Ana) Also notice
the scales vary in size, some bigger and some smaller. The bigger scales
correspond to rigid areas, such as the middle of the leg. Smaller scales are found
in areas near the claws, which is an area that
is much more flexible. - (Beth) Aside from the size, position, and shape of the scales we also have to start
thinking about color. - (Ana) Notice she wants each scale to vary in color and a reminder to make the skin beneath the
scales a different color. - (Beth) The final touch is to pay attention to different kinds of random variations we'll need. For example, some scales
extrude more than the others. Plus, the position and size of the scale should vary as well. So there's lots of
variation going on here. - (Ana) Now it's your turn to examine the shading packet. - Once you're comfortable
studying shading packets, we'll get to work creating
the patterns in the computer."
Pixar in a Box,Patterns,Geometry of dinosaur skin,Voronoi Partition,Overview of Voronoi partitions. You can explore the interactive program used in this video here. ,"- [Woman] Now that you're
comfortable reading shading packets, let's get to work. - To begin, let's step back
and simplify the problem. A dino leg is essentially a cylinder, with claws at the bottom. - Let's ignore the claws for the moment. - And if we unwrap the cylinder, we get a flat rectangle, or a 2D plane. - We can do all the work
like this in a flat plane, and then wrap it up whenever
we wanna test it out. Let's first think about the
geometry of our dino scales. Each scale is an irregular shape, and all of these different
scales need to fit together like a puzzle. - At Pixar we use a really cool trick to generate these kinds of patterns. It's known as a Voronoi diagram. It's based on a pattern
we see all over the place in the natural world. From the spots on a giraffe,
to the spots that form when mud dries. - And I love that we can explain the math behind Voronoi patterns with bubbles. - [Brunette Woman] If we fill
a container with bubbles, like this, they squish together
and we get the same pattern based on where the bubbles touch. - [Dark-Haired Woman] Let's
think about the geometry of what's going on here. We start by places a few
points somewhere on the plane, doesn't matter where. - [Brunette Woman] Imagine
they are tiny bubbles, let's call these sites. - [Dark-Haired Woman]
And then we blow them up into larger bubbles. - [Brunette Woman] Eventually
the neighboring bubbles collide at a single point. As they expand, this grows into a line where they squish together. - [Dark-Haired Woman]
These bubble boundaries is where we draw our lines. - [Brunette Woman] And watch
what happens when we do this with many sites scattered about. We get this irregular puzzle pattern. - [Dark-Haired Woman] And that's it. A Voronoi pattern. - [Brunette Woman] Or Voronoi
partition, if you really wanna show off. - [Dark-Haired Woman]
We'll call each of these bubble regions a cell. So we have sites and cells. - [Brunette Woman] And there are some really interesting properties here. The border of each cell is
always the same distance to the two nearest sites. - [Dark-Haired Woman] And
wherever three lines meet, we get a point, or a vertex right here. And this is equally distant
to the three nearest sides, all thanks to the
awesome power of bubble-- ah, math. (both women laugh) - Let's stop here and make
sure that you understand how to draw these Voronoi patterns. - The following exercise
will get you thinking about how these work. It's also a great time to
grab a pencil and paper. Remember, doodling is your friend. - Do you have a good story
about Voronoi patterns? - I do. When we were working on The
Incredibles, we had this cake that was absolutely
beautiful, and it was made for Bob Parr was gonna take
a big bite out of it, and it was full of
these beautiful bubbles, and the crest was shiny, and it was moist and it was really really gorgeous. And then the story changed a little bit, and the shot ended up
being filmed all at night. - [Brunette Woman] So you
can never see all those beautiful Voronoi bubbles. - [Dark-Haired Woman] Sounds delicious. (both women laugh)"
Pixar in a Box,Patterns,Geometry of dinosaur skin,Distributing sites randomly,What is the best way to distribute our points? You can explore the interactive program used in this video here and here. ,"(clicking noise) - Good work! Now that we now how to
partition the space into cells, we can write a program to
do all the drawing for us. Plus my hand is getting tired! Then you'll love this program. It generates a uniform grid of sites, then it draws the resulting
Voronoi partition for us. That looks like a chess board. If we shift every other line of sites, we get this, like a beehive. Definitely getting us
closer to the dino scales. Notice it's following the Voronoi rules we saw
in the previous video. Any point you pick on these lines is equidistant to two or three of our sites. Okay, so how many sites do we need, and where do they go? Well, let's
check the shading packet. Our dino's
quite young, so she has relatively few scales on her legs. Perhaps five or seven would work. There are more
scales around the claws, but we can deal with that later. What's important is that the cells aren't all the same shape. Yes, we have a subtle variation in both cell size and shape, unlike the perfect honeycomb
our program is generating. - This is where the power
of random numbers comes in. - But applying randomness
in a way that makes organic look and variation
is really tricky. Look what happens when
we scatter the sites completely randomly and
then draw the lines. That doesn't look right. Way too clumpy. Yes, it's too random. We need more of a balance
between randomness and structure. I think a Poisson Disk
Process will work well here. It sounds fancy,
but it's quite simple. It uses a new parameter we can control, minimum site distance. We can visualize this as
a disk around each site. Think of this disk as the no drop zone. It works like this. A random site is generated,
then we generate another site anywhere outside the disc,
and we repeat this over and over until the plane is filled. Notice it's a smoother way
of distributing the points. There's much
less clumping happening now. Watch what happens
when we draw the partition. We get really close to the
geometry of the dino scales. - Beautiful! Okay, in the next exercise, you'll have a chance to
play with these ideas. - What was the most unexpected use of randomness you've encountered at Pixar? - I think the most surprising
thing about randomness is that it's really everywhere. Even in materials that you
might think are really constant, like metallic car paint or
brick work or something, let alone something like
human skin or dino skin. There's really randomness in every single material that we create. (gentle orchestral music) - Woah!"
Pixar in a Box,Patterns,Geometry of dinosaur skin,Modeling dino skin,Create a basic model for your dino skin. ,"- Now that we're comfortable with the geometry of our cells
let's flesh out some details. Let's take a closer look
at the shading packet. Notice
each cell contains some skin around the edge with the scale
sticking out in the middle. We need
to decide how far it is between the edge of the cell
and the start of a scale. This gap will expose the skin that the scales are growing out of. In our program we can do this with this parameter called scale size. If we maximize the scale size it covers all the skin which looks wrong. So we need to pull it back slightly to get the gap we need. That looks nice but notice the distance between the scales is the same everywhere. Right, that's not very natural. We've added a control here to vary the distance between scale edges. That look perfect. Next, we need to make the scales look like they're extruding,
sticking out from the skin. In our program we can control how far they stick out with
this extrude parameter. - Now we have a model for our dino-skin that we can start shading. - Let's take a look at the shading packet and examine the color notes. It says each scale should have a slightly different color and the skin should be
darker and leathery. So we'll add some color controls here. One for the skin and one for scales. To pull this off we have a really cool trick. We define a range of colors
from the smallest scale, here, to the largest scale, here. And now our program will color each scale based on its size. So the smaller scales will
look more like this color, and the larger scales will
look more like this color. And all of the other scales
will be somewhere in between. That's very cool. It saves us time because we don't have to define the color of
each scale individually. Now, see how the color varies very naturally according
to the scale size. We also added a preview button to give us a rough idea on
how our pattern will look. - Neat. Okay, now it's your turn to use all these ideas to create
your own dino-skin. - And in the final exercise we can use all the tools we
introduced in this lesson. - And when you're happy with your creation move onto the next lesson where we'll be adding microscopic level detail. This should really make
our dino leg look great. Do you always have a model
first and then start shading? - Most of the time we have the model first and then we realize that
we need something that has a little bit of a different geometry and we wanna add certain details in certain areas of the model. So sometimes we end up changing the model after shading has already started."
Pixar in a Box,Patterns,Geometry of dinosaur skin,Getting to know Ana,n/a,"•Current transcript segment: 0:01- I grew up in Uruguay.•0:04A little country between
Brazil and Argentina.•0:06There's about three million
people in the country.•0:10I did not have any experience. (laughs)•0:12I came straight from school.•0:15I have a duel degree in
electrical engineering•0:17and fine arts.•0:19I am kind of right brain,
left brain, kind of person.•0:23I really like arts and I
really like engineering,•0:26and I found out there was a career•0:28that you can combine both,
so I thought that was great.•0:31And then I just happen to
interview with Ed Catmull,•0:35was the president at the time.•0:37I just thought it would be
great to meet one of the people•0:40that had written some of
the stuff in my books.•0:44And so I went for the
interview and I got the job.•0:48When I went to college,•0:50I was really interested in sculpting.•0:52That was my main path.•0:58I worked a lot in clay, I worked on paper,•1:01I worked on wire.•1:04At the end of my career I started doing•1:05a little bit of computer
graphics, but not a lot.•1:09So when I came to Pixar,•1:10of course I wanted to be an animator,•1:13but the people that know best (laughs)•1:17decided that probably a
technical director career•1:20would be best for me, given that I had•1:22the technical orientation
and the art, as well.•1:26But the first one I did was
lighting TD on Geri's Game.•1:30- [Interviewer] What do lighters do?•1:32Lighting TDs?•1:33- Lighting TD.•1:34So if you can imagine a theater
and putting up the lights•1:37wherever you want the character•1:38to be looking pretty for the camera,•1:41that's basically what lighting TDs do.•1:42We are trying to emphasize the story•1:45and what we want to get across,•1:47and then make our things
look pretty, or scary,•1:50or whatever they need to
be as part of the story.•1:53And then I started working in shading.•1:57For shading, I did a lot of
prop shading, I did set shading,•2:01and recently I've been doing
a lot more character shading.•2:05And I also worked as a lead shading artist•2:07for The Good Dinosaur.•2:09Shading is basically creating
the material qualities•2:13as you see in objects.•2:14So when the models come to us,•2:16they're basically just white plastic,•2:18and we make them look the way
that they're supposed to look.•2:21So if you have a piece of
wood, you want to figure out•2:24what kind of pattern you want on the wood,•2:27or how does the light
interact with the material.•2:31If there's certain bumpiness to it,•2:33if it's reflective, if it feels smooth,•2:36or if the light goes into
the wood a little bit•2:39and bounces around and comes off.•2:41So there's a lot of math involved•2:43into trying to figure
out that kind of system,•2:45and how does the illumination
interact with the material,•2:49and how do you perceive it.•2:50And a lot of the times it's really funny•2:52because the idea that you have mentally•2:55of what the object should look like•2:56is actually really
different from what you want•2:58to put on the screen.•3:00Sometimes I'm driving around
and I'll see a cloud on the sky•3:03and I'll think to myself,
if I make that cloud•3:06on the computer it will
look completely wrong,•3:09and people would not believe it's a cloud.•3:11But it's up there, it's in the sky.•3:13So a lot of times you have to figure out•3:15what our idea of the cloud is,•3:19versus what the cloud really is.•3:24I just like, for me cooking is almost•3:26like a little bit of a travel experience.•3:29It's an adventure.•3:30So I tend to do really strange dishes•3:34from what we're used to having.•3:37Love using new ingredients and
stuff that I can't pronounce,•3:41and just go for it.•3:44Don't be afraid to say
you don't know something•3:46because that's the only way you can learn.•3:48Don't be afraid to make mistakes•3:50because that's the only way we learn.•3:52And just keep shooting
for what you want to be,•3:56what you're passionate about.•3:57That's really what's important•4:00because that's what will
make you happy in the future,•4:03just working for your passion."
Pixar in a Box,Patterns,Geometry of dinosaur skin,Getting to know Beth,n/a,"•Current transcript segment: 0:01- Um, I grew up taking
art classes every week,•0:04uh, on Saturdays in addition
to my school art classes.•0:06So, I did a lot of drawing and painting,•0:08and as I got older I
specialized a little bit more•0:10in like photography and design work.•0:13I think I've just always like puzzles,•0:15and problems to solve,•0:17and you know, it's so logical.•0:19It just, it fits together,•0:20and so, uh, I think that's
why I always liked math.•0:24There is an answer.•0:24You can find the answer and solve it.•0:27Well, I really didn't know that a job•0:30like the job I have at Pixar would exist•0:32when I was in college.•0:33I studied graphic design
and I really loved that.•0:36And then, when I was almost
finished with undergrad,•0:39I stumbled upon an animation
studio in Columbus, Ohio•0:41that was working on the movie Space Jam.•0:43And the idea that somebody in my hometown•0:45was working on a movie
was just amazing to me.•0:48So, I showed up one day at their door,•0:50literally knocked on the door,•0:52and just tried to get an internship.•0:54And people, nobody knew
what to make of me.•0:57They were like who are you?•0:58Do you have an appointment?•0:59And I was like no, I just
really want to work here,•1:01and um, because I was
really eager and excited,•1:04and they were impressed•1:05that I was looking for
a summer job in January,•1:08the year before, I got a summer job.•1:10So I worked at that
studio which was called•1:12Character Builders in
Columbus, Ohio for ten years.•1:15And I worked on bunch of
TV animation, uh, projects.•1:18As that was happening,•1:203D animation was becoming
more and more popular,•1:23and kind of more and more awesome,•1:25and I really didn't
know that much about it.•1:27And I was lucky in my second
or third year in grad school,•1:30there were recruiters from
Pixar that came to my program,•1:33which was a CAD at the highest university,•1:36and I was offered a
technical director residency.•1:39So when I finished my Master's degree,•1:42I came to Pixar as a resident,•1:43and I've been here ever since.•1:45Um, I have been in shading and grooming.•1:48I started here on day and night,•1:51and um, started shading with props,•1:54uh, characters, and some set pieces.•1:56And I also started
grooming on that project.•1:59And then I worked on several features•2:01and shorts as a groomer,•2:02and a character shading artist.•2:04- [Interviewer] What does a groomer do?•2:05- Groomers put hair and fur on things,•2:06so if you imagine, you know,•2:08if you give a dog a bath,•2:10and all of a sudden it's
much, much skinnier?•2:11The same happens with our animal models.•2:14The bodies are much smaller,•2:14and we have to put the hair on
to get the right silhouettes,•2:17so grooming sometimes is a cross•2:18between modeling and shading.•2:20It's sort of like modeling,•2:21because you're worried about
the silhouette of the character•2:23and making their shape look correct,•2:25but it's also like shading
in that you're responsible•2:27for the surface quality of the object.•2:29Um, one of my favorites was
Art from Monster's University.•2:33He was a really fun challenge
because he's just like an arch•2:37and he flips around all different ways,•2:38so there are a lot of rigging challenges,•2:40um, to get him to move the correct way.•2:42And then to keep the hair looking right•2:44with the little points
in all the right places.•2:46That was a really fun one to work on.•2:49Make as much work as you can.•2:51Find as many people to hang
out with that make work•2:54that you think is inspiring as you can.•2:56Surround yourself with people
who are better than you,•2:58because they'll make you
better at what you do."
Pixar in a Box,Patterns,Painting with randomness,Looking at different resolutions,First we need to get comfortable with higher vs lower resolution details. ,"- In the previous lesson, we focused on the geometry of
dinosaur skins and scales. - (Blonde Woman) And we
used voronoi diagrams to get the overall structure
we were looking for. - (Brunette Woman) But
we simplified a shading of our skin using only two
solid colors with no texture. - This is why our final result wasn't very realistic. We ignored the finer details
we see in actual skin. When you look at your own skin, do you see one color? - No, I see a subtle variation
in color and texture. - (Blonde Woman) This variation becomes really clear when we look at things under different
magnifications or resolutions. Here's an image of human skin
at a very high resolution. - (Brunette Woman) Wow, it reveals a whole new world of
texture and color variation. There's nothing smooth
or solid about this. - (Blonde Woman) Right, and because we see different patterns at
different resolutions, we say that natural surfaces have a multiresolution structure. - (Brunette Woman) Let's
do another example of this. - (Blonde Woman) In our shading packet, we have an image of a Maximo alligator as reference for our dino scales. Here's what we see at low resolution. The skin looks very bumpy
and the color's interesting. - (Brunette Woman) Notice
the checkerboard pattern across the scales, and within each scale the color looks fairly solid. - (Blonde Woman) Let's zoom
in to a higher resolution. Here we see smaller scales which look quite smooth and rounded. - (Brunette Woman) And
notice there's much more color variation that we didn't see before. It looks like a speckling of color due to natural pigmentation
as well as dirt. - (Blonde Woman) Another reference for our dino skin is snake skin. At this low resolution it looks like a collection of solid
white and black scales. - (Brunette Woman) But
at higher resolutions we see new color details. The white scales contain tiny brown dots and the black scales have a light coloration around the edges. - (Blonde Woman) And if we keep zooming in things get (laughs) really crazy. - (Brunette Woman) Aggh! That's scary! (laughs) It seems like the closer
you look, the more you find. - Exactly, and that's the essence of multiresolution structures. The color and texture of an object is the result of adding all of the different details together. - Before applying these different ideas to our dino skin, let's pause for a moment and get you comfortable look at the world at
different resolutions. - In the next exercise,
we'll challenge you to identify surfaces at
different resolutions. And remember, things aren't
always what they seem. What's your favorite example
of something you worked on that had a really
interesting mix of patterns? - For The Good Dinosaur,
on the pterodactyls, each part of their body had a bunch of different textures like the crest had this brain-like texture, it was kind of icky (laughs) and gross, and then the neck we used almost like a dried lava texture to give
that feeling of wrinkles. On the wings we based it on elephant skin so it would be kind of softer. And then the body was more
like a dry skin feeling, almost like E.T. phone home (laughs) kind of feel to it. It was pretty nice. It all came back together and we used different illumination techniques to make it feel more interesting. But we used quite a few textures to mix and match and kind of flow from one part of the body to the other. - Pretty cool.
- It turned out okay. (laughs)"
Pixar in a Box,Patterns,Painting with randomness,One dimensional noise,Explore how 2D curves can be used to create 1D patterns. You can explore the interactive program used in this video here. You can learn more about subdivision here. ,"(soft clops and bounces) - Now it's time to think about how to create natural
looking variation digitally. (xylophone glissando) - Well hello ladies. I'm back. I have, as usual, a few changes to the laying packet and I thought you might wanna see it. - Great timing. We were just about to start talking about skin and scale details. - Great.
- Thank you, Tia. - [Tia] You're welcome. Good luck! - [Brunette Woman] Thanks. - [Curly Haired Woman] See here, she's added a pattern
reference for skin and scales. - [Brunette Woman] It kinda reminds me of the variation you see in clouds. I noticed there's both color variation, from green to yellow, as well as brightness variation, from dark to bright. - [Curly Haired Woman] I noticed the skin has a different pattern
compared to the scales. It seems smoother and darker overall. - [Brunette Woman] To get started, let's simplify our problem. First focus on a single scale. - [Curly Haired Woman] And imagine we cut a thin strip across it like this. Like a paint strip! We can really see the
variation going on now. It flows from dark green to light green. - Now our job is to represent
this mathematically. - [Curly Haired Woman] In the computer, the color strip is represented as a sequence of colored cells, or pixels. And the color of each pixel can vary from light to dark green. - [Brunette Woman] Like a
really long paint strip. And it's the brightness
variation we want to express. - [Curly Haired Woman]
It helps to think of this as a 2D plot, where the x-axis is the
position in the color strip and the y-axis represents
the color of brightness. - [Brunette Woman] Right now, all the colors are the same because we have a flat line. No variation. You can adjust the base color here. - [Curly Haired Woman]
And the line is built out of multiple control points. If you pull them up, it gets brighter in that region. If you pull them down, it darkens. This is known as a piecewise linear curve. - [Brunette Woman] Very cool. And check out what happens if we scatter these points randomly. This is getting closer to what we want. One problem with this method is that transitions currently
have a sharp boundary. - [Curly Haired Woman] Yes, but we can fix that by smoothing
this collection of lines into a curve. This is done using a subdivide slider. - We covered how the
subdivision algorithm works in our character modeling lesson. (light clicks on) (bright, glittery ring) - [Curly Haired Woman]
But all you need to know is that this slider defines
how much smoothing is done, resulting in these more
gradual transitions. - [Brunette Woman] By
manipulating the base color, point positions, and amount of smoothing, we can generate a whole
range of cool patterns. - Now it's your turn to try this out. In the next exercise, your job is to match
different target patterns by selecting the correct starting color and defining an appropriate 2D curve to define the variation of brightness. - In this example, we're using the curve
to control brightness. But what other things that we can control with a curve like this as well? - We can really control lots of things with these type of curves, but one fun example is wings on insects like dragonflies or grasshoppers. We have lots of those in The Good Dinosaur but in other movies like A Bug's Life, obviously have bugs too. And across the wing, you'll have variation transparency as well as color and iridescence
and lighting quality, and all those can be controlled separately by curves like this."
Pixar in a Box,Patterns,Painting with randomness,Perlin noise (1D),Explore how 2D curves can be added together to create more detailed patterns. Click here to play with the interactive used in this video. ,"- Great work. So far we define a curve which captures the overall variation and brightness. - The brightness depends
on the Y coordinate or amplitude of a curve. - But remember our goal is to capture the patterns at different resolutions. The first curve only captures variation at low resolutions, think of it as a broad stroke. - [Lady Voiceover] So we need to add higher resolution variation to our curve. These are the smaller details
or changes in the amplitude. - [Lady Voiceover] To do this, simply add two curves together,
for example, take your original curve and add
it to the second curve, which would result in this final curve. - [Lady Voiceover] Very cool. Mathematically we are just adding the Y coordinates together. - [Lady Voiceover] Okay, we've updated our program so that we can try this out. At the top is the low resolution curve, same as the previous exercise. - [Lady Voiceover] And below it is a new curve which is created by squishing two copies of the original curve together. It's a higher resolution curve because it contains more detail. Call this our medium resolution curve. - [Lady Voiceover] And
we can keep doing this. Here we've added a third curve. It's defined by squishing two copies of the medium resolution curve together in the same way. - [Lady Voiceover] This is
our high resolution curve. It contains the most detailed variations. - [Lady Voiceover] And
at the bottom we show the results of adding
these curves together. - [Lady Voiceover] I
see you have amplitude sliders as well, that's fancy. - [Lady Voiceover] Yes, this allows you to adjust how much that
resolution contributes to the final curve. - [Lady Voiceover] Meaning
if the amplitude slider is set to zero, then that
resolution is ignored in the final curve, and if I ramp up it really takes over. - [Lady Voiceover] By
the way, this process was invented by Ken Perlin
in 1988 and this is why the variation is called Perlin Noise. - [Lady Voiceover] His idea has been used in almost every computer generated movie in the past 20 years. - Now it's your turn to try this out. In the next exercise we
will test your understanding of these multi resolution curves. - Then we can move into higher dimensions. - Do you have an anecdote
about Perlin Noise? - Well in addition to surface shading we all see as noise patterns to control our hair grooms. For example you use perlin and other types of noises to control the length of hairs, the width, the scraggle, comfing and other parameters. You can see it in almost
all of our hair grooms, definitely Spot's hair
is a good one to look at for that in The Good Dinosaur. - [Lady Voiceover] Pretty neat."
Pixar in a Box,Patterns,Painting with randomness,Perlin noise (2D),Explore how 3D curves can be added together to create 2D noise. Click here to play with the interactive used in this video. ,"- So far we've been working with Perlin noise in one dimension. - But remember, the problem we really wanna solve is in two dimensions. - Luckily, we can apply
the exact same idea in 2D. This part is really fun. - [Woman 2] Remember, to
generate 1D variation, we used a 2D curve to define the variation of the base color along the line. - [Woman 1] We used the
x component of the curve to define the horizontal pixel position, and the y component defined
the brightness of each pixel. - [Woman 2] But to make 2D noise, we'll need to start with a 3D surface to define the variation across the plane. Think of a 3D surface as
a collection of points which have an x, y, and z component. For example, here is a surface defined by a bunch of random points. - [Woman 1] Think about the x and y coordinates of each point as the finding the pixel position in a 2D
plane, and the z coordinate will define the brightness of each pixel. - [Woman 2] If we do that, we get a 2D output which looks like this. Notice the peaks of this surface result in lighter points, and
the valleys are darker. - [Woman 1] As before,
the output has very sharp boundaries between light and dark areas. That's because the surface isn't smooth. - [Woman 2] Luckily we
can subdivide this surface in the exact same way we
smoothed our 2D curve. This will add new in-between
points to our surface, resulting in smoother transitions. - [Woman 1] And that gives us this very natural looking variation. It's exactly the kind of cloudy pattern identified in the shading packet. - You probably wanna try
this out for yourself. In the next exercise,
you can try matching some 2D patterns using this technique. - [Woman 1] We will give
you a target pattern, and you can match this by
adjusting one the base color. Two the resolution, this is how far we zoom in or out of our surface. Three, the subdivision, or how much smoothing we apply to the curve. - In this example we're manipulating a few parameters to get our look. But in a real production shading project, how many parameters would you adjust? - Well, background
characters would actually be usually in the hundreds
but main characters, like Arlo, you would have up to thousands. If he's in mud, you would control how much mud he gets,
or the color of the mud, or how dry the mud is supposed to be. He could have rain, and so you would control maybe how fast it is, or the different parts where
you want the rain to show up. He could have bruises,
like throughout the journey he gets bruises and he gets part of the journey represented on his body. And you would have controls
for all of those things, besides colors or maybe
in certain environments he looks a little bit
too shiny so you want to bring the shininess down,
or things like that. So there's just controls
for pretty much everything. - [Woman 2] Sounds complicated. - [Woman 1] It is!"
Pixar in a Box,Patterns,Painting with randomness,Painting your dino skin,Let's put everything together so that you can apply these ideas to your dino skin model. You can find the interactive used in this program here. ,"- In the previous exercise you created 2D Perlin noise at a single resolution. - But remember, our goal is
multiresolution variation. Earlier we did this by
adding 2D curves together. - [Lady Voiceover] Which means we can add surfaces together in the exact same way. - [Lady Voiceover] For example, imagine I took this surface and
added it to this surface. It would result in this final surface. - [Lady Voiceover] We put
together this tool to demonstrate how we blend 2D patterns
at different resolutions. Let's start with a simple
checkerboard example. Here is a low resolution,
a medium resolution and a high resolution pattern. This is the result of
blending these together. - [Lady Voiceover] And I see you've added amplitude sliders to define how much each resolution contributes
to the final result. - [Lady Voiceover] Yes, exactly as before. You can adjust the base color too. - [Lady Voiceover] Very nice. Let's switch from this
checkerboard to the random patterns used in the previous exercise. - [Lady Voiceover] Now we
have the power to create a whole range of different
results, in fact, I think we're ready to put
this to work in our dino leg. - Let's do it. The final program extends what we did in the previous lesson. It generates a voanoy diagram as before, however now we can define the pattern applied to the skin and scales separately. - [Lady Voiceover] Oh, fun. Let me do a quick example. In this main panel, I
can adjust the scale size as well as manually add and delete sides. We covered this in our first lesson. - [Lady Voiceover] Now jump
over to the skin controls. Here you can adjust the base color as well as the brightness. Here we have three sliders, one to adjust the amplitude of the
low resolution pattern, one for medium resolution
and one for high resolution. - [Lady Voiceover] So
there's a lot to play with here to get the look we need. - [Lady Voiceover] And the scale
controls work the same way, allowing you to create
an entirely separate look for the scales versus the skin. - [Lady Voiceover] Notice
we have two base colors to select from here, color
one defines the color of the smaller scales,
and color two defines the color of the larger scales. So any given scale will take on a color in between your base colors. - [Lady Voiceover] We did the same thing in the previous lesson. This will allow us to
get some natural color variations between the
yellow and green Teah had indicated in her reference arc. - [Lady Voiceover] Exactly, and when you're ready to test out your pattern you can click here, Render in 3D. It will wrap your pattern around a simple leg to give you an idea
of the finished look. - Looking pretty good already. Okay, we better stop here. Now it's your turn to
take over these controls and create some of your own dino skin using, drum roll please, (drum roll) - See if you can match
Teah's reference art but then go wild and see what
else you can come up with. - What kind of things do you think about when you're designing skin for characters? - Well we think about a
lot of different things but when you're looking at the bumpiness of each of the cells we felt like if we were using a curve that was flatter it gave the skin more
of a look like it was being used more in a harder surface and therefore, it was an older character and having the cells be
more round, it felt like it was a younger and fresher feeling skin. We ended up in the actual
skin packet, we used a ramp from the center
of the cell to the edge of the cell and then we defined what the curve was because we noticed that it made such a big difference between having that flat surface and the rounder curve. - Interesting. - So we were actually
able to mathematically define the curve itself
with just the patterns that we had inside each of the cells. - That's really cool. - Yeah (laughs)."
Pixar in a Box,Rigging,Introduction to rigging,Welcome to rigging,Overview of what rigging is all about. ,"- What's the difference
between motion and life? What's the difference
between this mechanical smile and this friendly smile? It's a little harder to find, but there's just something about the way a living being moves. And we work incredibly hard to capture with our characters here at Pixar and that something start with a stage we call rigging. Hi, I'm Brian Green, a Rigging Technical
Director here at Pixar. Rigging is a process of adding controls to a digital model to allow animators to
move it around and act. When you look at the way
a living being moves, every motion they make causes a reaction in every other part of their body. For instance, when I smile, it's not just my lips have moved, my cheeks bulge, the skin around my eyes crinkle. My chin stretches out to
accommodate the emotion. We call this defamation and displacement. Arrlalalala. In rigging, we have a toolbox of hundreds of different deformers and we can attach to the surface mesh of our characters. All of them represent
mathematical formulas that define a relationship
between the many points that are affected by the motion. For instance, I can start
rigging Sully's mouth by adding a simple
deformer called a rotate. The underlying math here is trigonometry. I'm going to add another
tool called a repulsor. This basically puffs things in and out. Add this to the cheeks, and link them. And then when we move his jaw, his cheeks bulges. That's better, but it's still just the beginning. Sully's face alone uses over 500 deformers and that's just his face. We can take a similar approach to rigging the characters' bodies too. Adding deformers that
define a relationship between the knees and the calf, the tail and the rump, or this tentacle and that tentacle. After we got the physiology right, we need to remember that these characters are film actors. So the kind of motion
that they may need to make might be a little more extreme
than a regular monster. So we push it a little, gives them extra life so they can be extra
exciting on the screen."
Pixar in a Box,Rigging,Introduction to rigging,1. Rotate deformers,First you'll connect shapes together using joints that rotate. ,"(Pixar animation intro) - Welcome to Pixar. In the next lesson you'll learn
to rig your own character. (cymbals crash) If you've gone through
the animation lesson, you've already learned how to create an animated performance
of a bouncing ball. We gave you controls which allowed you to move the ball around, or stretch it like this,
or squash it like that. These transformations are defined by different kinds of defomers. For example, a rotate deformer
will let you rotate the ball, a translate deformer will
allow you to move the ball in any direction, and a scale deformer can be used to squash the
ball when it hits the ground. Figuring out and creating these defomers is the job of a rigger. It's pretty simple when done with a ball. It gets a lot more complicated
when dealing with a car. And a human baby is really hard. As you can see, I'm standing
next to this giant lamp who was featured in Luxo Jr. One of the first short
films made at Pixar. Although lamps are just solid objects without their own movement or emotions, a young animator named John Lasseter believed he could make it into an actor. He saw how this lamp could
become a lifelike character, it was given a simple rig. This rig is made up of deformers that could make the lamp
rotate, translate, and scale. In 1986, a rigging artist named Eben Ostby had to work extremely hard
to create the software that would rig the lamp and allow John to create its animated performance. In the rest of this lesson,
you will get to create the rig which will allow us to animate our lamp. Before we rig our lamp, we
need to examine them closely. You'll notice that it consists of a base, a mid, and a lamp head. And this is connected by joints that rotate. And what you'll notice is that one rotational deformer'll move a joint. Which causes it to rotate. And there is a dependence
of the other joints upon that rotation. The dependence of one part on another is what we call a hierarchy. And it's our job as a rigger to determine what that hierarchy is. So that when one joint rotates, all the other joints will follow. In this first exercise, let's rig our lamp with the simple rotations we talked about. You will do this by dragging
the rotate deformers onto each of the joints. With just four rotates, it
is possible to create poses that express a wide range
of emotions and actions. Typically, a rigger will test a rig by creating a number of poses that will show off what the rig can do. (laughs) These people are also riggers. (laughs)"
Pixar in a Box,Rigging,Introduction to rigging,2. Translation deformers,Now you'll need to start moving your lamp around using translations. Click here to review commutativity. ,"(clinking)
(clicking) - The area I'm posing in
is our drawing classroom. We call it Big Art because
it is a really big space. This is where artists
practice drawing models in different poses. The artists want to draw not
only the shape of the character but the emotions they are expressing. Typically, the pose is
only held for a minute, so you have to draw quickly and loosely. We call this style of
drawing gesture drawing and it's a great way to capture
the idea behind a drawing without worrying about
capturing all the little details within the drawing. Speaking of posing, I hope you enjoyed how expressive your lamp could
be with just a few controls. Now, we're going to add
action to the emotion and make a lamp jump. Think about what you do when
you jump from standing still. First, you bend and squash down. Then you jump, stretching out. These are two different poses
we're gonna need for our lamp: Squash and stretch. So we need to add controls to the lamp so it can move to a new location. We can do this by adding rotation and translation deformers
to the base of the lamp. One thing we need to be aware
of when we add deformers, is that some deformers need
to operate in a certain order. This might be a little hard to
picture, so let me show you. If we rotate before we translate,
we get a different effect than if translate and then rotate. Notice that we can arrange
the order of these deformers by clicking and dragging like this. And the order in which the
operate flows in this direction. The animators who use this
are moving to a position, and then posing of rotate, moving to another position
and posing of rotate again, and so on. So they should be able
to rotate about the base no matter where they translate it. But if our deformers are
played in the wrong order, translate then rotate, we
will run into a problem. The rotation of the lamp will move away from the pose like this. That's because we moved the lamp away from the axis of rotation, which is the initial position of the base. We solve this problem by
having our deformers upright in the opposite order. First, we rotate about
the origin of the base and then we move the base. This dependence of ordering
is called non-communitativty (snare drum) Well, you can learn more about this in the set and staging lesson. (dinging)
(giggling) In this next exercise, our goal is to move our lamp into place and then pose and move rotations. So you will need to pay
attention to the ordering of your translation and
rotational deformers. Have fun! (laughs)"
Pixar in a Box,Rigging,Introduction to rigging,3. Scale deformers,Now you can start scaling your shapes to make your lamp look younger. ,"- When John Lasseter
created his animated short, he wanted a younger lamp. He observed that children
tend to have bigger heads and bottoms as compared to
the rest of their bodies. So to make his lamp appear younger, he scaled down the lamp and then he he scaled up the foot and head to make Junior. To get a little experience
of creating a new model, let's add some scaling
deformers to modify the lamp. At Pixar, the art department
often gives us draw-overs to guide us in remodeling the character. In the following exercise, we
see a draw-over like this one that you will try to match
using scaling deformers. When you're done, your lamp
should look much younger."
Pixar in a Box,Rigging,Introduction to rigging,4. Putting everything together,Click here to review the animation lesson. Created by Brit Cruise.,"- Great work! You've probably discovered
that changing the base scale changes the arm scale and head scale. This is because the
scales affect each other. When you're working with
controls like a scale deformer that affects a whole
model or a bunch of parts, it's best to get the overall scale right before the individual parts. We call this working from rough to fine. We now have all the concepts we need to model and rig our lamp. Go ahead and add scales to your lamp to make it appear younger and older, and rotate to all the joints
so you can pose the lamp, and a translate and a rotate to the base, so you can move the lamp around. And after the exercise,
we have a bonus step, which will allow you to try animating the fully-rigged lamp. You should definitely check
out the animation lesson before trying that one. (twinkling)"
Pixar in a Box,Rigging,Introduction to rigging,5. Make a face,Try out your deformers on a face. ,"(lamp and ball hopping) (light clicks) - We can express so much
emotion through our bodies, but I really love using rigging
to make expressive faces. It is fascinating to learn about how our faces display emotions or ideas. There's so much detail
in every expression. In our next exercise, we're
gonna rig a snowman face and we need some new Deformers to do that. First, let's add a directional scale. A directional scale allows us to scale in just one direction. If you scale a hat using ScaleY, you'll get a taller hat
that looks like a top hat. If you scale the face with ScaleX, you will get a wider face. We also need shear Deformers. Shear Deformers are similar
to directional scales, in the sense that they work
in a specific direction. We also have our set of
rotates and translates and scales that we already used. Just as before, you
should work rough to fine, with rotating the head to begin with and then translating and rotating the hat. Remember, the order of
your Deformers matters, so test your controls as you work. When you finish rigging the head, move on to the next lesson, where you'll learn to write
code to make your own character."
Pixar in a Box,Rigging,Introduction to rigging,Getting to know Brian Green,Find out what makes Brian tick. ,"yeah, so, early, early on - I grew up my dad didn't believe in having a TV in the house because he didn't want me to waste my time watching Saturday-morning cartoons But I love cartoons! The penmanship and craftsmanship was incredible So that was the inspiration and it also became entertainment for me So I just love to just, you know spend my time drawing. &gt; Do you have any examples that we can- Do you have any pictures or anything of that early artwork? &gt; I could! Yeah, I have artwork at home that I can dig up and that's you know, I'll be embarrassed to show. But I'll show it regardless, 'cause you're all my friends out there. No, art is one of those things you all start from a place of being- feeling sensitive about it, but you just keep doing it, and you enjoy it and you get better at it One of those things that fulfills itself. Oh! I- I built my own computer when I was about 12 or 13. Australia was going to dominate the computer industry with a computer called the Microbee, so I went ahead and made this Microbee, and then Because I could program, I could actually create characters from it So one of the big gaming systems back then was called Aliens, so one of the first programs I created was these aliens going across the screen and you could shoot 'em, and we used a thing called"
Pixar in a Box,Rigging,Code a character,1. Creating objects,Before building characters you need to define individual shapes using objects. Click here to review objects on Khan Academy. ,"(ball bounce) - In this lesson we're going to explore the wonderful world of rigging software. (drilling loudly) To build a character at Pixar, we begin with a modeling packet. A model packet consists
of a series of drawings or clay sculptures called maquettes that are a guide for
modeling the character. For more important characters, there can be a lot of drawings. And for less important characters it might just be a scribble on the napkin. From these we build the
model in the computer. I hope you enjoyed rigging
the face for a snowman in lesson one. In this lesson, you're going
to create your character in a similar manner to
how Pixar built a snowman for the short film Knick Knack. Before starting, the rigger
will meet with an animator and discuss what type
of controls are needed. A character, like the
army man from Toy Story, would be made from plastic. So its movements would be quite stiff. In contrast, a rubber snake
would be quite flexible. Keeping true to the materials
creates believability, the rigger and the animator work closely throughout the rigging
process to make sure the animator gets all the
controls she needs to make the character come alive and act. The animator will do various tests such as calisthenics to
test a range of rigging. The final test is usually
a fully active scene. In this lesson you'll write
code to design your model, then rig your model with
the former that you learnt about in the previous lesson. You'll start by drawing basic shapes, then you'll combine the
shape to make characters, then you'll build there
the former functions for translate, scale and rotate. And finally, you'll connect
everything together. And in a bonus step, we'll show you how to animate your models. But first, let's think
about what we are doing. All models have one thing in common, from the perspective of the computer, a model is just a collection
of individual shapes. Each shape will be stored in
the computer as an object. To create the shape of a circle, we'll put in the object
all the data the computer will need to create that shape. In this warm up exercise,
you'll create a circle for the snowman's body. If you're new to coding we
have a short code review before the exercise. Be awesome!"
Pixar in a Box,Rigging,Code a character,3. Putting shapes together,Use an array to store many objects as well as create any shape you can imagine. Click here to review objects. ,"- [Narrator] Okay, so far you've
made a single shape object which contains information
to draw a circle, but we'll need more shapes
to build our snowman, and we'll want to store
all of these shapes inside one data structure, which represents our snowman model. One way we can do this is with an array, where each position in the
array holds one shape object. In the next exercise, you'll
define an array called shapes array to do this. Think of this shapes
array as our entire model. It has everything the computer needs to draw all the pieces of the model. But what about a hat for Nick? We can't draw that with circles... That would be crazy! The short film, Nick Nack, was made with simple geometric shapes. One easy way to draw any shape is to define a series of
points called vertices. For example, the hat would
need eight vertices like this. Each of these points is represented by a pair of coordinates. And then, the entire
list of these vertices can be stored in a larger array. So we'll have an array of arrays
to store any shape we want. And we'll let another part of the program actually connect these dots for us. First up, we have two exercises for you. In the first exercise, you'll be creating a shapes array to hold each of your shape objects. This will allow you to add
your head and your body. After that, you'll have a
chance to create any shape, starting with a classic, black hat. Have fun! (laughs) Yay! Go for it!"
Pixar in a Box,Rigging,Code a character,4. Functions,Next you'll use functions to *store* your deformer functions. Click here to review functions. Click here to review geometric transformations. ,"- Alright, you finally have a
snowman to start working with. Now we can get to the real
guts of the rigging software. We need to define our scale, rotate, and translate deformers. To allow you to move your shapes around. And this is where
functions come into play. Remember, functions package
a series of operations or procedures we'll use many times. Functions are set input which they perform a set of operations on. Now, to build any deformer,
we'll need a function which intercepts two inputs. First they must intercept
a pair of coordinates which is the vertex in our shape. And lay a set of value which is a magnitude of
transformation you want to apply. For example, the translate x to full might intercept a coordinate 2,2. And for the 2nd input would
provide a value of say five. And so this translate x function, the math we'll do is quite simple. Hey that's five to the x coordinate which updates it to 7,2 and that's the process for transforming each vertex into shape. Of course, a shapes contain many vertices. For example, a hat has eight. That means its function
is run eight times. Once for each vertex. Order of the deformer
functions transform vertices using equations. And the transformation depends
on the types of equations used in your functions. The equations used for scaling,
rotate, and translation are all different from each other. We cover these equations in detail in our sets and staging lesson. In the next code review, we'll give you an example of
writing a translation function and then in the exercise,
we'll allow you to write free deformer functions on your own. Alright, I'm out of here. (chuckling)"
Pixar in a Box,Animation,Introduction to animation,Math meets artistry ,n/a,"•Current transcript segment: 0:01- Hi, I'm Rob Jensen, and I'm an animator.•0:03Before we talk about computer animation•0:05and algorithms and all that,•0:07let's just talk about what
animation is at it's core.•0:10All animation is based on the same idea.•0:12Making changes to a series of images•0:15and playing those images back in sequence.•0:17Now in hand-drawn animation,
we do this by drawing.•0:20Animators draw key poses and then•0:22draw a series of pictures
we call in-betweens•0:25that connect the motion
from one pose to another.•0:27It's a lot of drawing.•0:28In computer animation, we animate•0:30by moving virtual digital models.•0:32We call this posing.•0:34The poses we create are translated•0:35into coordinates that are
recorded on a spreadsheet.•0:38The computer fills in
the in-between images.•0:41These in-betweens are the result•0:43of a computer interpreting what motion•0:44would move an image from
this pose to that pose.•0:48Of course, the computer can't act,•0:50so it gives us this.•0:52We refine the in-betweens to turn•0:54this robotic motion into
a polished performance•0:57like this.•0:58And there are many different ways•0:59of filling in the in-betweens.•1:01But each can be described using•1:02a mathematical function called a spline.•1:06And this is where the
math meets the artistry.•1:08The simplest way to see this spline idea•1:10is through a bouncing ball.•1:12I'm going to make it
bounce from here to here•1:14with four main poses that I define•1:16by setting keyframes.•1:18The computer draws all the other frames•1:19by evaluating the spline.•1:21By default, the computer makes•1:22a linear interpolation of the motion•1:24and we get something that
moves at a constant speed.•1:27Hmm.•1:28Now from physics we know that the•1:30ball should accelerate on the way down•1:31and decelerate on the way up.•1:33I can adjust the shape of the spline•1:35to change the timing.•1:36Now we got something that
looks more realistic,•1:38but it's still pretty generic.•1:40As an animator, it's my job to bring•1:41to life a specific character.•1:43So I need to ask myself some questions.•1:45Is the ball heavy and depressed like this?•1:47Or maybe it's happy.•1:49Maybe it's a balloon.•1:51Once I answer these questions,•1:52I can choose what kind of spline•1:53I think will have that
effect in the motion.•1:56And this gets even more exciting•1:57when you're looking at a
character and their physics•1:59because how a character moves•2:01says a lot about who they are.•2:02For example, Mr. Incredible in this scene,•2:05the animation needs to show him•2:06lifting up a train car.•2:07Now, in animation, you can make that•2:09seem really quick and easy,•2:11but the director didn't want that.•2:13He wanted the audience to know•2:14that Mr. Incredible
could do amazing things•2:16but that it took a lot
of effort to do them.•2:18So, the way we define the speed•2:21of the in-betweens will make the•2:22difference between the train looking•2:24light or the train looking heavy.•2:26So, let's be clear.•2:27The computer helps us a lot,•2:29but ultimately this job
is really about acting.•2:31But instead of being in front of a camera,•2:34you're taking the performance•2:35and breaking it down into tiny little•2:3724th of a second increments,•2:39and expressing those in an
abstract mathematical function.•2:42Pretty cool, right?"
Pixar in a Box,Animation,Introduction to animation,1. Straight ahead animation,"Let's start by drawing every frame, one by one... ","- So we're gonna delve deeper into the mathematics
of splines in a minute, but first I want to show you around the animation department at Pixar. Even though we work on movies all day, in an animated movie, there's no real set, so our job is basically
sitting in front of a computer. But that doesn't mean it has to be boring. Since our job demands a lot of creativity, we try to make Pixar feel like a place where creativity thrives. The animation department is
divided into different pods, basically groups of offices. Each pod has evolved a different style. This one's the jungle pod,
decorated with vines, plants, a castle, and even an
office made to feel like the interior of a crash landed plane. This one here is kind of a central gathering place for animators, complete with a performance
stage for live music. I spend some of my free time as a DJ, so I helped decorate my
pod as the Vinyl Lounge, complete with turntables. Okay, I'm gonna start by
showing you some techniques used in hand-drawn animation. And then we'll see how those
translate into the computer. Let's first animate a ball using a technique called
straight ahead animation. I'm gonna start with frame one. Now we'll put down another sheet of paper. These pegs help us keep it lined up. And I'll draw frame two here. Now frame three and frame four. As you can see, I'm drawing
one frame after another in order. When I'm done, I'll scan
all of these pictures into the computer so we can play it back. Straight ahead animation works
the same way in the computer. You can give it a try in
the next interactive demo. Start by dragging the ball
where you want it to be at the beginning of your animation. Then step to the next frame and drag the ball where you want it. Just move it a little bit each frame. Keep going like this one frame at a time. When you're done, press
play to see your animation. Now let's see what you can come up with."
Pixar in a Box,Animation,Introduction to animation,2. Linear interpolation,Connecting key poses with straight lines is called linear interpolation. ,"- Okay, straight-ahead animation works, but a lot of times it's hard to figure out where you're going. A lot of times, it's helpful to start by working out what we
call the key poses first. For a bouncing ball, that's gonna be where the
ball is at its highest point and where it hits the ground. I'll start by drawing frame one up high. Now let's draw frame nine on the ground. Now I can draw the in-betweens using these key poses as a guide. I'll draw frame five in the middle. We call this a breakdown. Now I can keep adding more
frames, subdividing the space. Sometimes it helps to make a little chart to keep track of all the numbers. (scribbling) Great, now let's shoot our
drawings and play them back. In back, we can cheat
and make it bounce back by reusing the same
drawings on the way back up. (thudding) Hmm, the ball's moving, but
it's not very realistic. Sometimes, before you get started, it helps to shoot video reference so you have some idea
of what you're doing. Remember, the ball needs to speed up as it falls to the ground. Our frame five is halfway
through the animation in time, but the ball shouldn't
be halfway to the ground at that point. Instead, I'm gonna draw a new frame five that's biased towards the first pose. Maybe I'll draw it a
third of the way down. Animators have developed a visual language using these timing charts to show how to space the
drawing in between key poses. So frame five, remember, is a third of the way
between one and nine. I'll draw frame three a third of the way between
one and five, and so on. These charts help us keep track
of the in-between drawings so we end up with the proper timing. When we play this back, the ball accelerates towards the ground. (thudding) Now let's see how we
use the same technique of pose-to-pose animation on the computer. We'll start by positioning
the ball up in the air in frame one, just like before. And then we'll skip ahead to frame nine and put the ball on the ground. Down below the picture, the computer shows us this graph. It's kind of like a 2D timing chart, and it shows us how the
computer is going to calculate the in-between frames. The horizontal axis is time, and the vertical axis is
how high up the ball is. Check this out. If we project the
intersection of each frame onto the vertical axis, we end up with exactly
the same timing chart that the 2D animators use. You can see that by default
the computer connects our poses with a straight line in the graph. This is called linear interpolation. It results in even spacing of the poses. When we play it back, the ball will move at a constant rate. Now you give it a try. See if you can animate a
convincing bouncing ball using linear interpolation. And here's a hint: you can add extra key frames in between to get the spacing that you want."
Pixar in a Box,Animation,Introduction to animation,3. Bezier curves,Using Bezier curves we can get smooth motion between keyframes. ,"(light clicks) (jettison pod whooshes)
(air ship whines) - You probably noticed that
in order to get smooth motion, you ended up having to pose the ball in pretty much every frame. The computer's helping, but
it's still a lot of work to get something that looks smooth. Instead of linear interpolation, we can use something called Bézier curves. If you've ever used design
or drawing software, you've probably used Bézier
curves without even knowing it. This is named after a French
engineer, Pierre Bézier, who invented this method to describe the smooth curves needed
when designing cars. These kinds of functions made up of Bézier curves are called splines. I also mentioned them in the first video. Bézier curves come with
these handles that let us control the shape of the
graph between our key poses. We get this nice curve that
eases out of the first pose, and ramps down to the second one. If you look at how these values map, you can see something that looks
just like our timing chart. Now you try it out. You should be able to get much smoother motion using Bézier curves. (ball smacks rhythmically)"
Pixar in a Box,Animation,Introduction to animation,4. Squash and stretch,Let's breathe some life into our ball using a key animation principle: squash and stretch. ,"- Now that you get the basic idea, let's have a little fun with it. We'll start by adding another control. At Pixar we call these
""animation variables"" or ""avars"" for short. This avar scales the ball
out in X, and down in Y. You can control the timing of this avar using the same graph editor. Now we can make the ball
stretch on the way down, and squash when it hits the ground. This idea of squash and
stretch is one of the key principles of animation. Animating the squash
and stretch of an object helps us to communicate what
that material is made out of. Remember, our job as animators isn't just to move things around,
it's to bring them to life. And one way to do that is to show the character's thought process. If this ball is alive, then
maybe it's not just bouncing, maybe it's hopping. And before it hops it'll squash
itself down in anticipation, just like Luxo Jr squashes
himself down before taking a hop. This is some of the
real magic of animation, is that we can take something that's fundamentally a lifeless
object, and bring it to life. (electronic squeaking) (lampshade rattling) (metallic whining) (metallic sighing) (wooden thudding) (wooden thudding) What kind of ball do you want to animate? What's it doing? What's it thinking? Can you bring it to life?"
Pixar in a Box,Animation,Introduction to animation,Getting to know Rob Jensen,How did Rob start out? ,"I was looking right in the lens does it matter okay? How did I get to Pixar? Well, I always grew up drawing and painting my dad worked for Ibm. [so] there were computers around and I remember one [day] my brother was like hey check this out. You can kind of make pictures on the computer [I] was like whoa [that] [looks] like fun when I was a little kid my dad actually took me to ibm research where John lasseter was giving a talk about computer animation and It blew my mind And he was showing Luxo Jr.. For the first time or at least the first time to us and how he made it squish before it jumped and Follow through after it landed Yeah, I went to school studying computer science and with a certificate in visual arts although where I went the visual arts program was very Fine Arts oriented not graphic arts. So nobody taught me animation But there was a room full of computers that were sitting around doing nothing So I commandeered those and turned them into the render farm for my short film So yeah, I mean at school. I spent a lot of time learning about the math and the computer technology [behind] computer animation But it's really on the job that I learned to become an animator"
Pixar in a Box,Animation,Mathematics of animation curves,1. Mathematics of linear interpolation,"First we'll use the slope intercept form of a line to define each frame along a straight line.
Click here to review slope-intercept form of a line.
Click here to do the Environment Modeling topic if you haven't already. ","- So, we've seen two ways
to calculate in-betweens: linear interpolation and Bézier curves. Now let's get into the math behind them. We're gonna build on
some of what we learned in the environment modeling lesson, so if you need to review,
click on this link. Let's start with the simpler
version, linear interpolation. Let's focus on this segment. We know the value of y at frame 4 is 750 and the value at frame 8 is 190, but what's the value of
y at frame 5, 6, or 7? The picture tells us
that y can be represented as a linear function of x,
where x is the frame number. Linear functions can be written
in slope-intercept form: y = mx + b, where m is the slope and
b is the y-intercept. Now we don't know the slope
and intercept directly, but we do have two points on the line, which is enough information
to calculate them. Now, once we have m and b, we can figure out y for any frame. Try out this next exercise
to test your understanding of linear interpolation using
the slope-intercept form."
Pixar in a Box,Animation,Mathematics of animation curves,2. Repeated linear interpolation,First we'll review De Casteljau's algorithm using three points. Then it's your turn to figure out how to do it with 4 points! ,"- Now that we've looked
at linear interpolation, let's see how we can get smoother motion using Bézier curves. The shape of each segment of this curve is controlled by four points. So how can we write an equation that gives us a smooth curve
out of these four points? You may remember we
faced a similar problem in the environment modeling lesson. There, we were trying to
make curved blades of grass. We saw how to use three points to define a parabolic arc
using the string art method. So let's review how that string
art method actually works. Let's label our points A, B, and C. We've also got a parameter we'll call t, which is how far along
each line segment we are. First, we can calculate a point on A B using a weighted average
of these two end points. This is another kind of
linear interpolation, but instead of using the
slope intercept form, we're using what's
called a parametric form. The parameter is t, which tells us how far
along the line we are. As t goes from zero to one, our new point, let's call it Q, goes from A to B. Let's do the same thing
for the other line segment, calculating a point R between B and C. Finally, we'll use the
same method between Q and R to calculate P, which is a point on our curve. As t goes from zero to one, P traces out the smooth curve. You can think of this construction method as repeated linear interpolation since Q, R, and P are all computed using linear functions of t. This method of repeated
linear interpolation is called deCastlejau's algorithm. It's named after Paul deCastlejau who actually discovered the math for this a few years before Pierre Bézier, but wasn't able to publish it until after Bézier had scooped in. We've seen how deCastlejau's
algorithm can be used to make a smooth curve
out of three points, but for animation, we
want to use four points to control the curve. Take a few minutes with pencil and paper and see if you can work out
how to get a smooth curve starting with four
points instead of three."
Pixar in a Box,Animation,Mathematics of animation curves,3. De Casteljau's algorithm,We can use de Casteljau's algorithm to calculate curves using any number of points. ,"- So, how'd it go? Did you figure out how to extend a Casteljau's algorithm to 4 points? It's not so easy, so don't
worry if you had some trouble. Here's what De Casteljau came up with. First, we use linear interpolation along with our parameter
t, to find a point on each of the 3 line segments. Now we have a 3-point polygon,
just like the grass blade. As before, we find a point
on each of the new segments using linear interpolation
and the same t value. Now we have a 2-point polygon, or a line. We find a point on our line using linear interpolation, one more time. As we vary the parameter
t, this final point traces out our smooth curve. These are the kind of
curves we typically use to control the motion of our
characters as we animate. We use something called a graph editor, which lets us manipulate
the control points of these curves to get
smooth motion between poses. This is the graph editor
that we use at Pixar. In between each one of my
key poses is a Bézier curve. We also tend to group
the adjacent segments so they maintain the slope of the
curve across the key frame. This prevents sudden jerks in the motion. You can use the next interactive excercise to get some experience with Bézier curves that have 3, 4, or even more points."
Pixar in a Box,Animation,Mathematics of animation curves,4. What degree are these curves?,Bonus! In this video we'll connect the degree of these curves to the number of control points in the construction. ,"- Now that we've seen how Bézier curves behave geometrically, let's
take a look at the algebra starting with a three-point polygon. As before, we construct a point Q using linear interpolation, that is a weighted average
on the line segment AB. Algebraically, Q can be written as Q = (1-t)A + tB Next we construct a point
R on the line segment BC, which means that R can be written as R = (1-t)B + tC Finally we connect Q and R, and do one final linear interpolation to get P, out point on the curve. P = (1-t)Q + tR From this last equation, it kinda look like P is degree 1 in t. But the first two
equations also depend on t. So let's substitute the first
two equations into the third to get this combined expression. Multiplying out the terms and collecting, I can rewrite P as P = (1-t)2*A + 2t(1-t)B +t2*C. All those squared terms show us that P is actually a degree 2 polynomial. Interesting, a three-point polygon leads to a degree 2 polynomial. Thar kinda makes sense
because we did two stages of linear interpolation. In the first stage we computed Q and R and in the second stage we computed P. Now, what happens to the degree if we start with a four-point polygon? Can you guess? In the first stage, I compute three points using linear interpolation. In the second stage, I compute two points, and in the third stage,
I compute one point. Since I have three stages, the resulting curve will be degree 3. That means a four-point polygon
results in a degree 3 curve. You can generalize deCastlejau's algorithm to start with five, six,
or any number of points. The rule is, if we start with n points, you get a polynomial of degree n-1. Pretty neat. And congratulations on
finishing this lesson. If you're feeling particularly bold, try your hand at the
following bonus challenge."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,Introduction to parabolic arcs,What do parabolic arcs have to do with blades of grass? ,"- Hi. My name is Inigo Quilez, and I work in Brave making all the trees, the forest, and all the natural
environments of the movie. I use a lot of mathematics to do this. (arrow hits target) I think most people think of maths as something boring and mechanical, but that's not the way we
see mathematics at Pixar. For us, maths are a tool to create images, movement, richness, and fun. This lesson, we'll talk
about one of the ways we use mathematics to create
the landscapes of Brave. So let's start with the most simple thing we can find in this
landscape: one blade of grass. One blade of grass is something
that starts in a point, grows in a direction, and bends down. It looks like a small, thin curve. This is great news,
because in mathematics, we have a lot of tools to describe curves. In this case, we choose the parabola, which is a very specific curve. The curve, however, only gives
us the spine of the blade. We still need to add a thickness to it and a color to make a blade of grass. And in order to populate the whole forest, we need to create millions of such curves, and then give them the
right thicknesses and colors in order to create something
organic and natural. Do you want to know more? Stay with us for the rest of the lesson. (beep)"
Pixar in a Box,Environment modeling,Modeling grass with parabolas,1. String art,"Find out how we can make curved lines using straight ones using the string art construction.
Click here to see Vi Hart's video on this technique. ","(swords clanking) - Welcome to Pixar. I'm Tony Derose, one of the
computer scientists who works on our film here. And conveniently enough behind
me is Mark Andrews, director of Brave. (whoosh) - Good to see you. - So we're talking today
about some of the ways that math was used to create
the forest in Brave. And I was wondering what it's
like as a director to work with the technical staff here. - Oh I love them. I mean, everything that you
see on a screen, on a Pixar movie, we couldn't put
it out there without the technical staff. Our movies are so complex. The movie like Brave, the
organics, and the grass, the forest, her hair, I mean everything. That just ups the game when
it comes to the numbers that you're crunching in a computer
so we rely completely on mathematics to make these movies. - That makes my heart warm.
(Andrew laughs) Thank you so much.
- Absolutely - And we're gonna be talking
about some of that complexity in the rest of this lesson. We saw in the previous
video, how parabolas are used to model grass in Brave. A complete parabola is actually
an infinite curve, but we just want a little piece. That's called a parabolic arc. And to create believable
grass, we have to create other attributes such as how the
width varies up the blade, its color, and how it moves
in response to things like horse hooves and wind. And we'll get to all of
that later in the lesson. But for now let's just
focus on the basic shape. Come on inside, I'll show you more. So the question is, how
are we going to represent parabolic arcs in a way
that artists can deal with, but computers can too. Well, there are a variety
of ways of representing parabolic arcs. You may have seen them
for instance, as grass in quadratic functions. The problem with quadratic
functions is they're not very intuitive for artists. A more artist friendly way,
it to use three points. Let me show you. Okay, so I have three points,
and as I move them around the parabola updates accordingly
and in computer graphics, these three points like this
are called the control polygon. So if I'm only gonna store
the three points, I some how have to recover that parabolic arc. So the question is how do I
go from these three points to recovering my parabola? The idea is pretty simple. The first thing we're gonna do
is lay out some evenly spaced points, the same number on each leg. And then next, what I'm gonna
do is start connecting dots. And as I continue to connect
these dots, you'll see the curve start to
emerge almost magically. Now you can do this same
construction in real life. It's called the string art construction. You take a pice of paper,
you draw some lines on it, you spread out some evenly spaced points, and then with needle and
thread, you start making these connections like down here. So we'll call this the
strong art construction for parabolic arcs. In the next exercise
you'll have an opportunity to connect the dots yourself."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,2. Midpoint formula,"Explore how midpoints are used to describe the ""string art construction."". ","- In the previous video, we saw how to use three points to define a parabolic arc. Later we'll talk about how to define the width, the color, the motion, and the variety that would be needed to create a convincing field of grass. But first, let's talk about what math we would need to create a computer program that our artists could use. A program like this one, for instance, where I can pull points around, and the parabola updates. So what kind of math is required underneath this program? First we need to talk about computing the locations of the points that we're going to connect together with the string art lines. Now, some of these points are a little bit easier to construct than others, and the easiest ones are the ones here, at the midpoints. So this point here is on the midpoint of this leg, and this point here is on the midpoint of this leg, and so on. So let's look at the mathematics of midpoints. So here I have a line segment, A B. The midpoint of that line segment is going to be somewhere in the middle. Like this yellow point here. Let's call that point Q. Now the question is, if I know the coordinates of A, suppose the coordinates of A are A sub x, and A sub y. Similarly suppose the coordinates of B are B sub x, and B sub y, then the question is, what are the coordinates of the midpoint Q? Well, if you think about it for a minute, you'll realize that Q is halfway between A and B in the x direction, and halfway between A and B in the y direction. We can compute a point like that by simple averaging. It is the x coordinate of Q is going to be the average of the x coordinates of A and B. So that's going to be Ax plus Bx over two. The y coordinate is going to be Ay plus By over 2. That's a very simple calculation. ^I can abbreviate it and make it look a little bit simpler, ^by writing Q as A plus B over 2. ^What this means is, ^take the average of x and the average of y. ^So these two expressions just mean the same thing. Now our string art construction requires more than just a pair of midpoints. But we can create as many points as we want, by computing midpoints of midpoints. For instance, here is just a pair of midpoints, and now I'm going to compute a midpoint on this subsegment, and another midpoint on this subsegment. Similarly for these two subsegments. So that gives me three points on each leg, and I can create as many as I want just by continuing this midpoint of midpoint process. Next, you'll have a chance to experiment with these ideas."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,3. Parabolic arcs,Are we really creating parabolic curves using this construction? Let's gain some insight first. ,"(lamp and ball boinging) - Congratulations. You're now an expert on midpoints. (arrow whooshes) Now let's take the next step. I've been claiming that the curves created with the string art construction are parabolas. But how do we know that's actually true? Well, it's actually a little bit hard to prove that rigorously but we can get some intuition in the following exercise. Now you may have seen parabolic arcs as graphs of quadratic equations like this one, for instance. So here I have a green curve that's the graph of a quadratic function. And so it's a parabola. And I have a blue curve generated through the string art construction. It's my job in this exercise, it'll be your job in the exercise, to see if you can reposition the points so that the blue curve sits exactly on top of the green curve. So for instance, I'm gonna try moving this point, say down here. And this point over here. Over there. So the blue curve is getting a little bit closer, but it's not exactly on top of the green curve yet. And in fact I'm gonna ask you to try it in the next exercise."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,4. Modeling grass,"Next let's build a blade of grass using a parabolic arc as a spine.
Click here to review perpendicular lines. ","(clicking) Great work! Now we've got all the math we
need for a computer program to draw as many lines as we need to create a good
approximation to a parabola. Let's return to some of the
artistic aspects of grass starting with the width. In this interactive, I
can move the points around and I haven't drawn the
legs of the control polygon just to make it look a little bit simpler and, let's see, that kind of shape for the
spine looks pretty good. So let me move on to the next step which is to define the width. I'm going to do that using
something we'll call a Skeleton. The Skeleton is a set
of lines, like these, that cut across the blade
of grass at 90 degree angles so here's a Skeleton line,
here's a Skeleton line and so on. If I connect all the left
sides of the Skeleton lines and the right side of the Skeleton lines, I create a region, let me fill that in, and that region looks a lot
more like a blade of grass. (click)
(tinkling) I can control the width
using this slider here so that's just adjusting the
length of those Skeleton lines and that width there looks pretty good. Finally, I can control the color. I can go from a deep green to a lighter green to a really light green. Our artists control parameters like this to create the kind of convincing grass that you see in ""Brave."" Use this interactive to see what kinds of blades of grass you can create and then, in the next video, we'll talk about how to animate it."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,5. Animating grass,"Finally, let's bring our parabolic arc to life! ","- So far we've talked about how to create a blade of grass using a parabolic arc and a width parameter. We refer to this kind of geometry creation here at Pixar as Modeling. We've also talked about how to create a color, and we refer to that as Shading. Next we're going to talk about something even more exciting, that is Animation, how to make the blade of grass move. Notice in this shot how the grass is moving gently indicating a gentle breeze. We call this kind of subtle motion Keep Alive because if there was no motion at all it would appear stale or dead. But we don't want so much motion that it draws attention away from where the director wants you to be looking. So how are we going to animate each blade? Well to animate, I just need to know where each control point is in each frame of the animation. So, I can just record the motion as I move them around. So here's a simple little animation, and that's probably enough frames right there. And now I can replay that animation as many times as I like. In this case, I'm just cycling back and forth through the animation. So, this is how this one blade looks when animated, and here's how that motion looks when it's copied out to a bunch of blades of grass. Starts to give you a feeling for how a field of grass might move. But in this case, all the blades of grass are moving exactly the same which isn't very realistic, but we can add a little bit of variation by having each blade start the animation at a slightly different time, and that's what I can control with this slider here. So, I can add just a little bit of variation, or I can add a lot of variation. And now it's starting to look a lot more realistic. That's one way to add variation, but another way to add variation is using randomness. In fact, we use randomness so often and in so many different ways that we're going to devote an entire tutorial to it. But for now, use this interactive to see if you can animate two different shots. One with just a little bit of gentle Keep Alive like on a calm day, and another that looks like a very windy or stormy day."
Pixar in a Box,Environment modeling,Modeling grass with parabolas,Getting to know Tony DeRose,n/a,"•Current transcript segment: 0:01- Well as a child I grew up•0:03in the age of Apollo, the moon mission.•0:06So I always knew I wanted to go into science.•0:09First I thought I wanted to be•0:10an astronaut like everybody my age.•0:12I didn't really discover mathematics•0:14until I was in 7th grade.•0:15I was building model rockets at the time•0:17and my 7th grade science teacher showed me how•0:20to use trigonometry to calculate•0:22how high the rockets were going.•0:24And I thought that was just so cool that I could, with math,•0:27figure out how high something went•0:28without having to get a big ladder or a ruler.•0:34And then in graduate school I discovered that you could•0:36put math, science, and computers together.•0:39That was computer graphics.•0:41And I was lucky enough to be there really•0:42at the beginning of computer graphics in the early 80s.•0:45So I was hooked immediately.•0:48After graduate school I went to the University of Washington•0:52and started as a professor there,•0:53where I started a computer graphics laboratory.•0:56Stayed there for about 10 years but the computer graphics•0:59community was really small at that time•1:01and everybody knew everybody.•1:03So I really stayed in touch with a lot of people at Pixar.•1:06About 10 years after I got to Washington,•1:09that was about when ""Toy Story"" was being finished.•1:12And I thought, ""Gee, if I'm ever gonna•1:13""try something different, this is a good time.""•1:16So I did the unthinkable I left an academic position•1:19and joined this little startup called Pixar.•1:21When I got to Pixar one of the first projects•1:23I got to work on was the short film ""Gerri's Game"".•1:26Which was really exciting because it was a chance•1:29to take some of the technology I'd been working on•1:31at the University of Washington•1:33and really apply it in the film industry.•1:35It was really successful both creatively and technically.•1:38It won an Academy Award for Best Short Film that year.•1:42And later I won an Academy Award for the work•1:44that I did on ""Gerri's Game"", the technical work.•1:47The technical work I did on ""Gerri's Game"" is talked•1:50about in the character modelling lesson with Alonzo.•1:53It's the mathematics of sub-division.•1:57So I've done various things at different times•1:59in my almost 20 years at Pixar.•2:01For the last 10 years I've been leading•2:03the computer graphics research group here.•2:06So it's our job to get out in front•2:08of technology needs of future films.•2:11We built a new hair simulator•2:13for Merida in the film ""Brave"".•2:15More recently in ""Inside Out"" one of the researchers•2:18Kurt Fleischer developed some new technology•2:20for helping animators get even stronger•2:22performances out of their characters.•2:25Looking ahead over the next five to 10 years•2:28one thing we're working on hard•2:29in the research group is how to make•2:31all these complex calculations go in real time.•2:34That is at least 24 updates per second.•2:37Right now in some areas, including simulation, the updates•2:40can take minutes or hours per frame.•2:45Getting into computer graphics these days•2:46is so much easier then when I was a kid.•2:49In fact, when I was a kid,•2:50computer graphics didn't really exist.•2:53These days if you're interested in computer graphics•2:56there are lots of opportunities online.•2:58You can go to Blender dot org for instance,•3:00download a free software package that does•3:03animation very much like the tools that we use in-house.•3:07It's free, there are lots of great tutorials.•3:09Using Blender you can get an idea•3:11of how the artists here at Pixar work.•3:13And then using Pixar in a Box you can•3:15understand some of the mathematics that Blender requires.•3:21Well for fun for the last 10 years or so•3:24my two sons and I, in fact our whole family,•3:26have been building kind of wacky projects•3:29to take to this big event every year•3:31in the Bay area called Maker Faire.•3:33In 2010 for instance we built and eight and a half foot tall•3:37animatronic fire breathing dragon.•3:39Why not, right?•3:40In 2012 we built a flight-simulator based on•3:45the TV show ""Battlestar Galactica"".•3:47And just this past year we took a powered exoskeleton,•3:51kind of inspired by movies like•3:53""Elysium"" and ""Edge of Tomorrow.""•3:56In those films the exoskeletons are props•3:59and we wondered, ""Hmm, could we build one•4:01""of these things that actually really works?""•4:03So my youngest son brought together seven of his friends•4:06and we took something to the faire•4:08that really put a lot of smiles on people's faces."
Pixar in a Box,Environment modeling,Calculating parabolas,Weighted average of two points,How can we calculate a weighted average between two points? (pssst. This video is super important). ,"- So far our discussion has been largely visual and geometric and that's good because that's how our artists think. But at   Pixar we also have to create computer programs and computers think best in terms of numbers, equations, and algebra. So somehow we have to bridge these two worlds. The worlds of images and geometry and the world of algebra, numbers, and equations. In fact, this bridge between these two worlds was one of the things that really drew me into computer graphics in the first place. I find it really fascinating, how the algebra and the geometry conspire to create beautiful art. So what we're going to do is develop a formula that will allow us to compute points exactly on the parabola. And that formula will allow us to write computer programs like this one, that will be able to draw the parabola without ever having to draw any of the string art lines. Our first step in the search of that formula is to generalize the idea of averaging or midpoints to the idea of weighted averages. So, let's look at our line segment AB again but instead of wanting to compute the midpoint suppose I want to compute a point M, say right about here, that weights B twice as heavily as A. There isn't anything particularly special about weighting B twice as heavily as A it's just a simple non-midpoint example. So, the algebra would say that M is one copy of A plus two copies of B and then I have to divide by three for this to be a proper average. And I can write that a little bit simpler as A plus two B over three. And one final form is 1/3 A, 'cause there's an implicit one here in front of the A and there's a 2/3 in front of the B, so 2/3 B. And notice that this 1/3 plus this 2/3 add to one. And that's another way of saying that this is a proper average. So that's the algebra, let's take a look at the geometry. Well, the geometry says that this length here, AM is going to be in proportion 2/3 to this length here, MB which is going to be in proportion 1/3. Now, notice that the algebra says that the 2/3 sticks to the B, but the geometry says that the 2/3 is opposite the B. And that looks a little bit strange at first but if you think about it, it kind of makes sense because if there was a big weight in front of B you'd expect this point to be very close to B. Okay, well we can generalize this even further and let me replace a 2/3 here with an arbitrary fraction, call it t. So the t is going to stick to the B in the algebra and now for this to be a proper average I need to put something in front of A so that something plus t is equal to one. Well, something that when added to t is one is a fraction one minus t. So my expression now is 1 minus t times A plus t times B. That's the algebra of this generalized situation. The geometry is that this 2/3 gets replaced with a t and this 1/3 gets replaced with a one minus t. So let's get some feeling for this idea by using this interactive. So here I've got a line segment that I can drag around and you can see the coordinates of A and the coordinates of B and right now it's initialized so that the point I'm computing is at the midpoint. So I would have halves in front of each A and B. But now I can slide this point around anywhere I like along this line and that corresponds to just changing the value of t. So different values of t give me different positions along the line. In the next couple of exercises you'll have an opportunity to get some experience with the idea of weighted averages. (arrow flies and hits target)"
Pixar in a Box,Environment modeling,Calculating parabolas,2. Where is the touching point?,Where does the string touch the parabola? See if you can come up with your hypothesis! ,"- We're ready for step two in our search for the elusive formula of how to compute a point exactly on a parabola. To gain some intuition, let's go back to the interactive that we
used to kick this all off. So here's my string art
construction with a bunch of lines. And now, let me cycle through
the lines one at a time, highlighted here in magenta. So there's one of them,
here's another one, here's another one. And each of these magenta
lines can be described by some fraction T that
names that point on the line. As I wiggle the magenta
line back and forth, notice that it continues
to touch the parabola in exactly one place. Well if I can develop a formula
for where that place is, that's the formula I'm looking for. We can see that even more clearly in this version of the interactive that you'll be using in a moment to solve a couple of exercises. So in this version, I
can use this perimeter T to name which string art
line I'm talking about. And notice that each
of the string art lines touches the parabola in exactly one place. In the next exercise, you'll
be asked to come up with a hypothesis for where that place is. And the hypothesis, as a hint, has something to do with the
ratios of these subsegments that are being created. And we've color coded those
subsegments to give you an even more of a hint. So see if you can figure out what that special relationship is."
Pixar in a Box,Environment modeling,Calculating parabolas,3. Compute the touching point,Let's apply what we just learned to calculate the touching point. You can explore the interactive program used in this video here. ,"(tapping and cymbal beats) - Great. So hopefully you're closer to developing a hypothesis for the relationship between the lengths of the segments in the diagram that describe exactly where the touching point is. Now, recall that we're interested in the formula for a touching point because that'll let us write a computer program to compute just points on the parabolic arc and not have to worry about where the string art lines are or even where the control points are. Let me tell you a little bit about how I came up with my hypothesis. So when we look at the diagram here with t set to the midpoint, that is, we're talking about a string art line that's halfway along the way in the construction. That is, this point is the midpoint of this segment. This point's the midpoint of this segment, and finally, the touching point looks like it's the midpoint of this string art line. So, in this case, all those ratios are the same. Let's go back to, say, t equals around a quarter, so this point is a quarter along the way here, this point is a quarter along the way here, and in this case, it looks like the touching point is also a quarter along the way of the string art line. So again, all the ratios are equal. Let's try one other value of t, say, something around 0.7, so this point is 0.7 along the way, this point is 0.7 along the way, and again, it looks like the touching point is about that same ratio, about 0.7 along the way. That leads us to guess that if this point is a fraction t along this line segment, and this point is a fraction t along this line segment that the touching point that we're after is that same fraction along this string art line. Now to turn this into formulas, let's start by labeling our points. Let's call the control points A B and C. This point here on AB, I'll point Q. This point here on BC, I'll call point R. We'll call the touching point that we're after point P. So the geometry says that if this is a fraction t along the way, that this in ratio t to one minus t. This is in ratio t to one minus t, and this is in ratio t to one minus t. The algebra that goes along with this geometry is that Q can be written as one minus t times A plus t times B because it's on the line segment AB. The point R is on the line segment BC, a fraction t along the way, so it can be written as one minus t times B, plus t times C. If P is a fraction t along the line segment QR, then it can be written again as one minus t times Q plus t times R. So with these three formulas taken together, we can compute any point on the parabola we like just by varying the value of t. The next exercise will give you some practice using these formulas to solve a few problems."
Pixar in a Box,Environment modeling,Calculating parabolas,4. How can we prove this?,"Okay we know how to calculate the touching point, great! Next let's think about how we can prove this is true. ","(steps and bouncing) (switch clicks) - You should now have some experience in computing points on parabolas, using the formulas that we wrote
down in the previous video. These formulas are based on the hypothesis that all of these ratios
are in the same proportion, and that proportion is governed by t. But now we're gonna prove that these formulas are actually correct. So I'm gonna use this version of the interactive in the proof. You'll have a chance to experiment with this interactive in a minute. And as before, I've got a string art line that is controlled by a parameter t. As I wiggle t back and forth, the string art line
wiggles back and forth. The method I'm gonna use to find where the touching point occurs seems a little bit sneaky at first, but it's the simplest method I know. And what I'm gonna do is
introduce another string art line, this one controlled by a parameter s. And what I'm gonna do is I'm
gonna write down an expression for this intersection point
here, this green point. Now, why would I do that? Well, the reason is, watch what happens as s and t get closer and closer together. So as I make s closer and closer to t, watch what happens to
this intersection point. OK, it moves, and it gets closer
and closer to the parabola, and exactly when s equals t, that intersection point lies
exactly on the parabola. So if I can write down a formula for where that intersection point is, I can compute exactly where
the touching point occurs. This is probably a good time
to pause and let you experiment with this interactive to get some feeling for what we're about to do algebraically."
Pixar in a Box,Environment modeling,Calculating parabolas,Bonus: Completing the proof,One way we can prove that we are calculating the actual touching point. ,"(clunking) - Thanks for hanging in there. I know this discussion is getting a little bit technical, but we finally have all the tools we need to complete the derivation of a formula for the touching point on a parabola. But, before we continue, let's back up just little bit, and remind ourselves why we're doing this again. Well, we need that touching point formula so that shots like this in Brave can be computed really efficiently. Right, because that touching point will allow us to write computer programs to draw each blade of grass, without having to draw all the individual string on lines. So to turn this into formulas, let's again label things. So this light magenta line is controlled by the parameter t, So I'm going to label, as before, this point Q and this point R. The dark magenta line is controlled by the parameter S, so I'm gonna call this point Q prime, and this point R prime. Now, let's start writing down a few things we know. Well, we know that Q is a fraction t along the line segment AB, which means I can write Q as one minus t times A plus t times B. Similarly, R is a fraction t along the line segment BC, so it can be written as one minus T times B plus t times C. Similarly, Q prime is s along the way from A to B, so I can write Q prime as one minus s times A, plus s times B, and I can write R prime, finally, as one minus s times B plus s times C. Okay, now this intersection point here that we're looking for, P, is somewhere on the line segment QR. But where on the line segment is it? Well, I'm gonna prove in a second that it's at fraction s. That is, I claim that P can be written as one minus s, times Q, plus s times R. Now, if that's true, something nice happens, because as s approaches t, this expression here approaches one minus t, times Q, plus t times R. And that's the thing I ultimately want to prove. So the only thing left to show is that the intersection point can be written this way. Why should that be the case? What I'm going to do, is I'm gonna substitute this expression for Q in here, this expression for R in here, and if I do that and rearrange, I'll leave that rearrangement to you, but the result is that P can be written as one minus s, times one minus t, times A, plus s times one minus t, plus t times one minus s, times B, plus s, t, times C. And now, if I rewrite this, using these expressions for Q prime, R prime, I see I can write P as one minus t, times Q prime, plus t times R prime. Well, this expression says that P is somewhere on the line segment Q prime R prime, and this expression says that P is somewhere on the line segment QR. And the only point that can be on both line segments is the intersection point. So our proof is complete. (bow stretching) (arrow thumps) Bullseye!"
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,Introduction to subdivision surfaces,Overview of this topic. ,"- Hi, I'm Tony DeRose. I'm a computer scientist here at Pixar. In Pixar films, the
way our characters look and act varies wildly. But one thing they have in common is they don't look computery. They have an organic believable look. The first step in
creating that organic look is called modeling. Modeling is creating a virtual three-dimensional shape in the computer. One of the biggest problems of modeling a character that looks
believable is getting their forms to appear to be smooth no matter how close or far away they are from the camera. The computer works most
easily with simple shapes likes planes and cylinders, but we need to create much more complicated shapes. This sounds like a complex problem. But we were able to break it down into two simple steps that are easy to calculate on a computer. We discovered we could use a mathematical algorithm
called subdivision to make smooth shapes. Here's how it works. Let's start with a simple
two-dimensional example made of straight lines like this, defined by four points. The first thing I'm going
to do is add midpoints along each line. I'll call this the split step. Next I'm gonna make the
shape a little smoother by sliding each point halfway to its right neighbor, then I'll connect all eight points. I'll call that the averaging step. And that's a good start, but I can make this curve even smoother by doing it again. Split and then average, and then another time. And I can even put these two steps, split and average, together into a combined
step called subdivision. That's easier still. The really cool thing about this solution is that it allows you to
animate the whole curve just by moving the original four points. Now our characters are not just curves in two dimensions. There's surfaces and
three-dimensional space. But the same principles of splitting and averaging apply in three dimensions. And you can still animate it using just a couple of points. So we've solved the complex problem of creating curves by
breaking it down into steps we can solve with math. - Oh!"
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,1. Split vs. average,"First we need to make sure we understand exactly what happens in the split & average steps.
Click here to go to the Environment Modeling lesson
. ","- Hi. I'm Alonso Martinez
and I'm a Character modeler here at Pixar Animation Studios, and that means that I create
the virtual characters that the animators use to
bring our characters to life. And if I do my job right that means that not only will people
believe that they're real, but also they'll become personal friends. Right now I'm standing
at the Pixar Art Gallery and this place is dedicated to celebrate all of the hard work that goes into making these movies great. It's important for all
departments here at Pixar to help with the story telling. And for the character department, when we design our characters, we tell story through the
shapes of our characters. One of my favorite examples
is from the movie Up, and that's because Carl
is designed like a box and that's because he's jailed
in with all of the emotions from the hard times that he's had in life. But Russell is shaped like an egg. Both of these are symbols
for who these characters are. To create great characters like these, we need to make tools that are easy for artists to create those shapes that we were talking about. And also, at the same time,
for them to be efficient for the computer to be able
to deal with all of that data. And that's the topic for this lesson. Stick around for more. In the Environment Modeling Lesson we saw how to describe blades
of grass using parabolas, but parabolas are just not good enough to describe the
expressiveness of characters. For example, here's a
sculpture of Geri's hand from Geri's Game. To describe complex surfaces like this, that's where subdivision comes in. And as we saw in the previous video, subdivision is extremely expressive. In the first part of the lesson we'll be looking more
closely at how subdivision can be used to create complex shapes. And then in part two,
we'll dive more deeply into the mathematics of subdivision. Most of the mathematics
we use here at Pixar have been around for hundreds
or thousands of years, but subdivision is different. It was actually only
invented about 40 years ago and is still an active area
of mathematical research. The skins of our characters
live in three dimensional space, but for now, we're going to look at curves in two dimensions. Starting with a four-point polygon, we add more points by Splitting, that is, by adding
mid-points to the edges. I can make it smoother
by moving each point from where it is now, to the mid-point of its right neighbor. We call this, the Averaging step. By repeatedly Splitting and Averaging, we create a series of
increasingly smoother curves. Now, imagine that you're
an artist at Pixar and you've been asked to
create a shape like this one. Using this next interactive, see how close you can get."
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,2. Subdivide operation,"Now we can combine split and average into a single operation called subdivide.
Click here to review midpoints.
Click here to go to the Environment Modeling lesson. ","- One of the cool things about
splitting and averaging is that it's pretty easy to program. So, you just need to find the midpoint, which is just averaging coordinates. This makes it pretty easy for the people that write our software to create intuitive tools for artists, like myself, to create characters. Kinda like you used on the smiley face. In this next version of the interactive, we've replaced the split
and average buttons with a single button, called ""Subdivide"". Clicking it simply does
split followed by average. Focus your attention on
this region of the curve. Now, let's extend these lines until they hit the control polygon. Hmm. Doesn't this look, suspiciously, like the string art construction we saw in the parabolic arcs? Now, watch what happens
when I subdivide again. The string art pattern
continues to emerge. Now, every time you hit subdivide, you get twice as many strings. And that means that the curve that we're creating is a
parabolic arc in this region. And there's another
parabolic arc over here and over here and over here. But, magically, these
four arcs are smoothly blending from one to another. I think that's just so cool. As someone interested in mathematics, this is the kind of surprise
that I find exciting. This next exercise will test how well you understand this concept."
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,3. Subdividing your own designs,Now you are ready to start subdividing your own shapes with more than 4 points! ,"- So far, we've been doing subdivisions with just four points, which make a blob. But, if you're gunna make something as cool as a Pixar character, you're gunna need a lot more points. For example, suppose that I wanna model the outline of a hand or, maybe,
the profile of a character. Fortunately, subdivision doesn't care how many points you start out with. In this interactive, you
can move points, as before, but you can also add as many
new points as you'd like. Just click on an interior of
an edge to create a new point. And, then, use the mouse to drag the new point
wherever you want it. I can make a crude looking
hand shaped like this. Use this slider to control
how many subdivisions are used to give a smoother result. Using this interactive, make
a hand or whatever you'd like. Maybe, a dinosaur, or the
outline of Mike Wazowski, or whatever interests you. Be creative!"
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,4. Subdivision in 3D,Now let's think about how subdivision would work in 3D. ,"- So far, in this lesson, we've learned how to model curves in two dimensions. And, now, it's time to go
back to the real problem that we wanna address:
how to model the fun part, characters, using surfaces
in three dimensions. And that is where
subdivision really shines. The same ideas of splitting and averaging still apply
in three dimensions. And that means that
subdivision applies as well. For example, suppose
that I start with a cube. I can look at the cube
from different angles by clicking on the
background and dragging. The splitting step is a little bit more complicated than for curves. In addition to adding new
midpoints of edges, like this one, I also need to add midpoints
of the facets, like this one. Midpoints of facets are computed by averaging all of the coordinates of the control points
surrounding that facet. For instance, this midpoint is computed as the average of these four points. And this one, is the average
of these four points. The averaging step is a
little bit more complicated than the curve case, too. Each point is, again,
repositioned using averaging, but, now, it isn't a straight average. We need to use the weighted
average of all of the points next to the one that we are repositioning. We'll talk more about weighted
averages in the next lesson. And, just like the curves, we can combine split and average into
a subdivide operation. And, if we subdivide it enough times, the shape becomes a smooth surface. Now, let's try this on a doughnut shape. Subdividing once gives me this. Subdividing again gives me that. In practice, we subdivide
as many times as we need to, to create a smooth image. Subdivision was first used to create the character named Geri, from the short film called ""Geri's game"". Here's Geri's hand before the subdivision. And here it is after subdivision. Since ""Geri's game"",
we've used subdivision to create practically
all of our characters. We even used subdivision for
things besides characters, like the buildings in ""The Incredibles"", because subdivision surfaces
are so easy for artists to use. Next up, we have a simplified 3D program for you to play with. Really. Go play! Try anything and everything
you can think of. You can't break it and
you can always restart. Once you start to feel comfortable with how the subdivision
operation behaves, move on and we'll try the final exercise. After that, you can check
out the next lesson, which goes a bit deeper into
the mathematics of subdivision. Go do something awesome!"
Pixar in a Box,Character modeling,Modeling with subdivision surfaces,Getting to know Alonso Martinez,What makes Alonso tick? ,"- I remember, when I was a kid, I used to, like, run
out of shoe to draw on. And I would just, like,
continue drawing up my leg and just, like, just continue drawing. And, you know, my dad
didn't really want me to do too much art stuff. He was like, ""Oh, maybe
you should try architecture or something like that."" And, I had to, kind of, prove to him that there was money, that I
could make a living from art. And, what I found out early on was that, when you combine art with technology, which kind of made it more relevant to the world that we live in today, that there was a lot more job stability. You know, stuff like that. And, so, when I was making websites, there was, like, animations. You could, like, click on a button and it would make a little animation. And I was like, ""Oh, what's
this animation thing?"" And then I got more and more curious and then, as my websites
got fancier and fancier, there was like, ""Oh, what if
I could, like, make a logo and it was, like, spinning in 3D. Like, how do I make stuff in 3D?"" I went to this thing, called
the National Portfolio Day, which is where all the
art schools, kind of, look at students' portfolios. And I had some 3D stuff but I didn't really, I was
just like, ""I'm an artist and I happen to have some of
this stuff in my portfolio."" And, then, when a University saw it, they were like, ""Whoa."" They were like, ""You need to do 3D."" And I was like, ""3D what?"" And they were like, ""No,
3D computer animation."" I didn't know too much technology stuff, so, like, University was like, just, I was like a sponge and, yeah, I learned a lot in University. At school, we had to come up with a two and a half minute short film. And mine was about a lighthouse keeper that, the mechanism that
he turns on his light, it needs repair because it's frozen. And, so, this boat is gunna come crashing into the reef that he's on. And, so, in trying to fix the thing, he electrocutes himself and dies. And he pops up as a ghost and he's trying to fix the switch but he's, like, going though the switch because now he's a ghost. And he turns around, the boat blows his horn. He turns around, sees his dead
body, and is in crazy shock. He needs to snap out of it really quickly because, if he doesn't,
the boat's gunna crash. And, so, what he realizes is that he can go inside of the lens
that amplifies the light. And, so, the ghost jumps into the lens and it explodes in light. And, finally, the boat can see the rocks and, sort of, avoids them. But there was, I think,
some golden nuggets, sort of, inside of there. I think my character, that I made, I had a lot of fun making it. And, when I applied to Pixar, I was applying for a
different job position and I happened to have a little video of my character, kind
of like, moving around and having all these,
like, facial expressions. And they were like, ""We
want you for rigging."" And I was like, ""What's rigging?"" (laughs) And, so, rigging, also
known as reticulation, is, basically, designing an
interface of a bunch of, like, knobs that when you,
like, move them around it's, like, moving the character,
and blinking the eyelid and stuff like that. (laughs) I love making robots and I love making robots because it's a continuation of
what I love here at Pixar. Which is making these characters that, hopefully, in the minds
of people, they're alive. And, for me, robotics is just like , ""What if I couldn't make
characters seem alive for just two hours? What if I could just make them
seem alive for a lot longer? Like, hopefully, many years."" And, so, yeah, it's exciting, just, you know, tinkering
with a bunch of things that I don't know about because it's literally, I
came from an art background. And, so, it's mechanical engineering, electrical engineering,
computer science, fabrication. There's so many things
that I just don't know. And, literally, just
looking on the internet. Like, I haven't taken a single class because I'm such a visual learner. I always, you know,
search on YouTube first. For me, like, videos are what help me. And, text, I only resort to text
when there isn't any video stuff. And, so it's just, kind of, an experiment with robots and humans and the kind of interactions that you can have with, kind of, an artifical being. Just, pretty cool."
Pixar in a Box,Character modeling,Mathematics of subdivision,Weighted average of three points,"First we'll review weighted averages of two points and extend the idea to three points.
Practice weighted averages of two points in Environment Modeling if you haven't seen it before. ",Here we are again with the interactive replacement curves
Pixar in a Box,Character modeling,Mathematics of subdivision,2. Weighted subdivision,Next let's extend the averaging step from the previous lesson to include multiple points. Now we'll need to calculate positions using a weighted average. ,"- Hopefully now, you have a good idea of
how weighted averages work for both two points and three points. Next, we're gonna see what happens when you replace the
averaging step using midpoints with weighted averages. So here we are again with a curved subdivision interactive, except now, we have this
field that allows us to change the weights used
in the averaging step. The one, one over here means that we're doing straight averaging. So I split it as usual
by inserting midpoints. And the averaging step moves the points to the midpoint of their
clockwise neighbor. Watch what happens when I
change the weights to two, one. Now let's generalize to the case of averages of three points. Watch what happens when
I change the weights to one, two, one. And now I split as before but when I do the averaging step, each point will move to the position that takes itself with the
weight to its left neighbor with the weight one, and the right neighbor
with the weight one. This point should move about here as we saw in the weighted average example, and if we split an average
again, it looks like this. This next exercise will
give you some practice with the idea of weighted subdivisions. Good luck."
Pixar in a Box,Character modeling,Mathematics of subdivision,3. Fun with weights,"Let's take a closer look at the weights used during subdivision. Do we have to be careful when selecting weights?
Click here to learn more about Pascal's Triangle & the Binomial theorem
Click here to learn about eigenvalues & eignenvectors. ","- Congratulations you're in
the last step of this lesson. To finish our look at weighted averages recall that if I pick weights one one I get subdivision curves
that look like this. And we learn that these
shapes are pieces of degree two curves like Y equals X
squared stitched together. And if I pick the weights one-two-one, I get curves that look smoother. Just like this. These curves turn out to be
pieces of degree three curves like Y equals X cubed stitched together. In this example there are four
different degree three pieces I can even get smoother curves by picking the weights
one-three-three-one. Which are degree four curves
like Y equals X to the fourth. And it turns out that the
weights have to be chosen very carefully for the
curves to be smooth. So what exactly does carefully mean? These numbers one-one,
one-two-one, one-three-three-one all come from a pattern
called Pascal's Triangle. Let's see what happens if I pick weights that aren't from Pascal's Triangle. I don't even have to
pick positive weights, so supposed I pick one-negative two-three? Nothing new with split, it
always just adds mid points. But when I do the averaging stuff, whoa! As I keep subdividing the curve
gets less and less smooth. It's something called a fractal. We don't have all of
the mathematical tools that we require to show this, there's some more advanced
concepts from linear algebra and something called eigenanalysis. Eigenanalysis sounds kinda scary
but mathematicians are just really good at coming up with
names that are kinda scary. And just like we've done so far you just learn one step at a time. The main thing that I
want you to walk away with is that the surfaces
that you see in our films are actually pretty easy to create. The art department creates
sketches for the modelers to refer to when determining
control point positions. From there the software tools
do the splitting and averaging to produce the beautiful surfaces that you see in the theater. Of course when you're
watching one of our films we don't want you to
think about any of that. We just want you to sit back, relax, and let the movie take you away. So play around with the weights. See what weird results you can get. And when you're done you can
move onto the final exercise."
Pixar in a Box,Crowds,Building crowds,Introduction to combinatorics,Overview of this topic. ,"- Hi, my name is Lou Hamou-Lhadj. I'm a Character TD here at Pixar. - Hi, I'm Jacob Speirs, I'm
also a Character TD at Pixar. - [Lou] We started here at
Pixar on WALL-E as interns and our task was to make a
huge cast of background robots. - Today's lesson is going
to be about how to create a huge crowd of robots using
only a few simple parts. (mechanical clicks) - I wanna take WALL-E from a world where there's no robots anymore and it's just him to a world
where there's tons of them. I just like that contrast
and suddenly making him feel like he was alone in a crowd. - We're trying to create a
world where robots do every task that you would want done. What we did first was
to look at cruise ships. We got a list of every
single job on a cruise ship and then went through
and tried to think of the robotic equivalent of that job and it became apparent quickly
that that was more robots than we would ever be able
to build in one lifetime. - So as interns, Jacob and I
had the task of making this huge cast of robots, but we
didn't want to design each individual one specifically. - Right, so luckily there
was an animator, Angus, and he had a great idea about
how to approach the process. - I'm a huge Lego fan and I really wanted the background characters
to be the best they could be and I figured if we
designed a modular system that would allow for us to add
and subtract different parts onto the character for
the background characters then we could kinda
make whatever we needed and it would all feel like the same world. - [Lou] Doing it this way, modularly, meant we could build 10
heads, 10 arms, and 10 bodies and though we'd only built 30 pieces we could make a thousand
different combinations. - Yeah, and there's actually
a branch of mathematics about that sort of thing,
counting and combinations and it's called combinatorics. (mechanical noises) - Combinatorics is actually
what your lesson today is gonna be about. We're gonna start with a few small pieces and build a huge cast of
robots just like we did."
Pixar in a Box,Crowds,Building crowds,1. Counting with tables,How do we keep track of how many robots we've made? ,"- Hi, I'm Fran Kalal. I'm a cloth and sim technical director at Pixar Animation Studios. That means I get to take what
I know about art and design and make outfits, and what I know about math and physics to make them move. I'm here today to talk to you about crowds like the large one behind me. Except that the one behind me is physical, and the ones we need to make for our films are virtual. That means they exist
only on the computer. We saw in the last video
how lots of robots were made using only a few parts through the use of combinatorics. So follow me to learn more about what combinatorics is and
how we use it at Pixar. To understand how many robots we can make from a bin of parts, let's
start with an example where a robot has one head and one body. And I've got two different
heads to choose from and three different bodies. So I can take this head with this body, or this same head with this body, and that's already two different robots. And clearly I can make a whole lot more. A great way to keep track
of this is with a table where I'm going to place
the heads along the columns and the bodies along the rows. This cell means put
this head on this body. There are six cells on the table, so there are six different robots even though we only have
five different parts. This is a great example of the fact that finding a good way
to think about a problem makes it easier to solve. How many robots could you make if there were different
numbers of heads and bodies? You can explore that question
in the next exercise."
Pixar in a Box,Crowds,Building crowds,2. Robot combinations,Let's review the multiplication principle which allows us to quickly count the number of possible robots. ,"- In the previous video and
exercise, we saw how a table is a great way to keep track
of a lot of different kinds of robots, where each robot
is made up of one head and one body. Let's call each of those
different robots a combination. You experience combinations all the time. For instance, when you
wake up in the morning and you pick out a top
and some bottoms to wear, that's a combination. Notice that since each cell
in the table corresponds to a different combination,
we just need to count the number of cells, but we
don't have to count one by one. That's because the number
of cells in a table is just the number of rows
times the number of columns. So, with two heads and three bodies, we have two times three or
six different combinations. And, with three heads and four bodies, we have three times four or
12 different combinations. The next exercise will give you a chance to practice with other combinations."
Pixar in a Box,Crowds,Building crowds,3. Tree challenge,How can trees be combined to count robots with many parts? ,"- Great work, but suppose
the director decides that we need robots made
up of a little more variety and now, we need three kinds of parts; heads, bodies, and arms. When there are three parts to combine, the table doesn't work anymore. We need some other way to think
about all the different ways that three parts can be combined. It would be even better if we
can think of a way that works for two, or three, or four,
or even more kinds of parts. When I first start trying
to solve a new problem, I like to break that problem down into a bunch of smaller parts
that are easier to solve. In this case, counting
the number of robots made from two heads and three bodies. I can illustrate the two
ways of selecting a head using a picture like this. And, I can illustrate the
three ways of selecting a body using a picture like this. The problem with these picture
so far is, they make it look like there are only five
possible combinations. Before moving on to the next video, see if you can combine these two diagrams to show that there are six
different combinations of robots."
Pixar in a Box,Crowds,Building crowds,4. Counting with trees,Tree diagrams allow us to visualize these counting problems using any number of parts. ,"- To see how to put the diagrams together, let's go back to the example where we had just two kinds of parts, heads and bodies. Suppose I pick, umm,
this head and this body. Or, I can pick this body, or this one, let's finish off all the possibilities. Notice that the bottom of the diagram has six combinations as before. And the diagram, hopefully, makes it clear that we have two choices of
heads and for each of those, we have three choices of bodies. Or, two times three combinations. Use the next interactive to figure out what the diagram would look
like if there were a different number of heads and a
different number of bodies. (squeak, boing, squeak, squeak, squeak)"
Pixar in a Box,Crowds,Building crowds,5. Casting challenge,Now it's your turn to drive. In this video we'll present you with a casting challenge to complete using everything we've learned so far. ,"- The advantage of this diagram,
is that since it represents all of the choices you
have, we can just add more and more choices to the bottom. So, if we have two heads and
three bodies and three arms, then the diagram would look like this, for a total of two
times three times three, or 18 different combinations. These are sometimes called
tree diagrams, because when you turn them over,
they look a lot like a tree. The diagram has helped us
understand that we just need to multiple the number
of each kind of part. So, if we're just interested
in how many combinations are needed, we don't
need the diagram anymore. And, the number of
combinations gets big fast. For instance, if we had
five heads, six bodies, and seven arms, and say, eight
different kinds of wheels on our robots, we would
have to build five plus six plus seven plus eight, or 26
different kinds of objects. But, we could build five times
six times seven times eight, or 1,680 different robots. Because there are so many
possible combinations, it's easy to go crazy and
build a huge crowd of robots. (robots flying through the air
and rolling across the floor) (crashing and squeaking) - Emmet! - While a big crowd of robots might make the film more exciting,
we have to keep in mind that the more robots there are, the more robots the
animators have to animate and the more robots the
computer needs to deal with. So, we're always trying
to achieve our artisticals in the most efficient way possible. Now, it's time to put you to work. Your job with this interactive,
is to make both the director and the producer happy. You should have a wide variety of robots, so that there's a lot of visual interest and the director is happy with your work. But, you should keep the cost down, so that the producer is
happy with your work. The cost of each part is shown,
select a subset of heads, bodies, and arms so that combining
them in all possible ways gives exactly 12 robots and
the cost of all the parts must be below $300. The director and producer
will be here in 10 minutes to review your work. I know you got this."
Pixar in a Box,Crowds,Building crowds,Getting to know Fran Kalal,n/a,"•Current transcript segment: 0:00Huh.•0:01Hah.•0:02Come on!•0:04So one of the mentors that was
really important to me in deciding that•0:08I wanted to go into computer
graphics was Maria Palazzi.•0:11She was the director of•0:12the Advanced Computing Center
for the Arts and Design•0:14at Ohio State University.•0:15And she met with me as a high schooler.•0:17And I talked to her about my interests.•0:19And she said, ""There's a field where
you can use your love for art and design,•0:25and your love for science and coding,
and that field is computer graphics.•0:29And she showed me her center
and walked me around.•0:32And I could see all of the cool things
that the graduate students there were doing.•0:35And I thought,
""This is my place.""•0:37So this is some of my student work
that you're looking at.•0:39One of my favorite things to do with
my student work was to understand how•0:43signals could overlap each other to create
different looks in a shader network.•0:48And so this is a lot of me playing
with shader networks to see,•0:52""Gosh, can I change
a high-frequency fractal,•0:55and can that alternate between
a saturated and a desaturated•0:59version of this texture?""•1:01And I thought that that was so cool that
you could use these relatively simple signals•1:05to combine complex texture maps
and get these interesting looks in the end.•1:10What I loved about doing
this work is that every time•1:13I would write a piece of code
or make a connection,•1:15I could see a visual result
right away from what I was doing.•1:19And that's how I loved
learning how to code –•1:21to have this visual result from the work
that I was doing was so rewarding.•1:24And for me, I was
a really active learner.•1:26And so it was really helpful to see
a result as soon as I made something.•1:30Another reason I went
into computer graphics•1:32instead of live-action film
is what was happening at the time.•1:38I was so inspired
by the short ""Bunny.""•1:41I thought it was one of the most
beautiful things I'd ever seen.•1:44I've always been so moved by bringing
animals and characters to life.•1:51And that's something that
you can do with puppetry quite well.•1:54But that's something that computer
graphics does exceptionally well.•1:57It is just the right format for those things.•2:00And ""Ratatouille""
had just come out.•2:02And I found out that Pixar
was going to come visit our campus.•2:04And I could not wait to talk to the people
who made the delicious looking food.•2:08But we had a really good conversation.•2:10And they liked my work.•2:12And so they asked if I would come to
Pixar and do some shading.•2:15So I did.•2:16And my boss was the lady who made the beautiful
food in ""Ratatouille,"" Athena Xenakis.•2:21It was amazing when I showed up
and got that assignment on the first day.•2:24I just could not believe my luck.•2:26I was so excited.•2:28And on my resumé, there was
a line that said ""Hobbies.""•2:31And in the line that said ""Hobbies,""•2:33it said, ""knitting,
playing piano, and sewing.""•2:38And one of the supervising
technical directors looked at that line•2:40and said, ""Wait.•2:42You can understand how to
use computer programs, and you can sew.•2:45Do you know there are jobs for people
that do that at Pixar?""•2:49And I said ""No.""•2:50And he said, ""Do you want to
come and try that?""•2:52And I said, ""Yeah!""•2:53So they found a spot for me on ""Wall-E"".•2:56We had just gone through getting
some notes back from an audience preview.•2:59And the characters weren't
a size that made the audience happy.•3:02So we resized some of the characters,
and they needed their outfits refitted –•3:05which is perfect intern work.•3:07And then they gave me Ellie.•3:09And they asked me
to dress and tailor Ellie.•3:11And I just could not
believe my luck.•3:13She is the most amazing
and wonderful character.•3:17She's outgoing and she's fun
and she's smart.•3:19Ellie went well.•3:20They liked the way she looked.•3:22And I was happy with it too.•3:23So, they asked me to work on Merida,
which was really awesome.•3:26And that went well.•3:27So then they asked me to work on Disgust
and Riley and all Riley's mom's clothes,•3:33which was a lot of fun.•3:34And now I'm working on something
I totally can't talk about on camera.•3:38If this is a field
that's interesting to you,•3:40or if there's any field
that's interesting to you,•3:42and you look around, and you see
not a lot of people in that field•3:46""look like me,"" it's ok.•3:48You're gonna find your people.•3:49Just go into it, get some great mentors,
make some great friends,•3:54and just believe if you want to be there
bad enough, it's your place.•3:58Kitty!•3:59I'm sorry, there's a cat.•4:01[Laughter] There's a cat.•4:04Oh God, there's a cat.•4:06[Women laughing.]"
Pixar in a Box,Crowds,Counting crowds,1. Two headed robots,What happens if the director changes their mind and asks for two headed robots? ,"- Great job completing the last tutorial! You made both the director
and the producer very happy. Sometimes our directors change
their minds when they see their drawings translated
to 3D computer graphics. In fact, sometimes our directors
change their minds a lot, and we need to be able to
adapt to those changes. So let's say we have a
director that wants a robot with two heads, but each
head has to be different. That is, the director doesn't want a robot with two copies of the same head. Now a robot consists of two
heads, a body, and arms. We'd like to know how
many of those we can have if we have H heads, B bodies, and A arms. We saw that by using a Tree
Diagram we could multiply the number of each kind of part together to get the total number of combinations. Well, we have H choices
for the first head, but since the second
head has to be different, we only have H minus one
choices for the second head. As before, we have B choices for bodies and A choices for arms, for a total of H times H minus one times B times A combinations. So it's all about multiplying together all the choices you have at each stage. Mathematicians make up
words for everything. They use the word combinatorics to refer to this type of counting. The next exercise will give you a chance to practice with other combinations."
Pixar in a Box,Crowds,Counting crowds,2. Snake bots,Let's build some snakes to get us thinking about permutations. ,"- In the rest of this
lesson, we're gonna look at a few other counting
problems that come up when you try to make a large crowd of robots from a small bin of parts. We're gonna be building up
to a really powerful formula that you can think of as a counting tool. (chimes ringing) To start, let's imagine snake-like robots. Let's call them Snake Bots. They are built as a sequence of segments where every segment must
be used exactly once. For instance, if I'm building
a three-segment Snake Bot, I might assemble the segments this way. Or I could do it this way. We'd again like to know: How many of these Snake Bots can I build? Remember, you have to account
for every possibility. In the next exercise,
you're gonna be asked to build all possible Snake
Bots of length one through four. Go get 'em!"
Pixar in a Box,Crowds,Counting crowds,3. Calculating factorials,Now that we have a feeling for constructing permutations let's introduce the factorial formula to make counting them easy. ,"- Nice work! Suppose we wanted four-segment Snake Bots as in the previous exercise. How many of those are there? Well, we have four choices
for the first segment, three choices for the second segment, two choices for the third segment, and one choice for the fourth segment. So that's four times
three times two times one, which multiplies out to 24. Isn't it interesting that
you can make 24 different Snake Bots using only
four different objects? And it gets better! Suppose you wanted a
ten-segment Snake Bot. Then you could make ten times nine times eight times seven times
six times five times four times three times two times
one different combination! Which amounts to a whopping 3,628,800 different ten-segment Bots! And you only have to build
ten different objects! These kinds of calculations
appear all the time in combinatorics, so of
course mathematicians invented a name and a shorthand for them. They're called factorials, and they're represented with an exclamation point. For instance, four exclamation point, or four factorial, stands for four times three times two times one. So four factorial is 24, five factorial is 120, and 10 factorial is over three million! Wow! That's a combinatorial
explosion of choices! (glass-shattering blast) Let's pause now and practice this concept in the next exercise."
Pixar in a Box,Crowds,Counting crowds,4. Casting problem,Now it's time for a really meaty problem! How can we count the number of possible casts when given a large set of robots to choose from? ,"- Earlier, you created
a small crowd of robots by choosing just a few of the
possible robot combinations. Let's back up a bit and
go back to the example where robots consisted of
one head, and one body. If you have two heads, and two bodies, then you can make two times
two, or four, different robots. That's like having four
possible actors to choose from but you only need a cast
of three in your movie. Let's give our actors names: Alice, Bob, Carol, and Dave, or A, B, C, and D, for short. That leads to an interesting question: how many different casts of
three actors can you make when you have four actors to choose from? Remember that, to figure
out how many ways there are to combine our actors, we need to multiply our choices at each stage. In this case, we have four
choices for our first actor, three for the second,
and two for the third. So, it seems like we have 4 x
3 x 2, or 24, possible casts. Let's list out all 24 combinations. The first combination,
ABC, means we selected Alice then Bob and then Carol, but there's a subtlety lurking in there. There aren't 24 different casts. To see where the subtlety is, notice that the second combination, ACB, means we selected Alice
then Carol and then Bob. So, the first two combinations
use the same actors, just in a different order. The same is true for
the other combinations in the first box. It's the same cast. Just the order that we
picked from was different. In other words, all the combinations in the first box should be
counted as just one cast. Similarly, the second box is a cast consisting of Alice, Bob, and Dave. The total number of casts is, therefore, the number of boxes. So, how many boxes are there? Since there are six
combinations in each box, there must be 24 divided
by six, or four, boxes. So, there are four casts. But why is it that each group contains exactly six sequences? Why not three or four or any other number? The next interactive will help
you visualize this problem using a few other examples. Have fun!"
Pixar in a Box,Crowds,Counting crowds,5. Does order matter?,Why do we divide the number of combinations by the number of permutations? ,"- Good work! I left you with this question: Why are there exactly six
combinations of each cast when you select three
actors from a group of four? To get a feeling for what's up, let's look at the first two boxes. Notice that in the first cast, or box, we have all possible
orderings of A, B, and C. Mathematicians call each of
these orderings a permutation. Now, the number of
permutations is represented by the number of rows in each box. The same is true in the second
cast involving A, B, and D. How many orderings, or permutations, are there of three things? We saw earlier that there are three factorial, or six permutations. Bingo! That's it! To keep order for
mattering, we need to take the total number of combinations
where order does matter and divide that by all
the possible permutations. So when choosing three actors
from four actors total, we can write our calculation as four times three times two over three factorial, which equals four. Let's do another example and
figure out how many casts we can form with three actors
from a pool of six actors. In this case, there would be
six times five times four. We then have to again
divide by three factorial to keep the order from mattering, leaving six times five times four over three factorial, which equals 20. So there are 20 different
casts in this case. Use the next exercise to get some practice with some other examples. And perhaps you'll
recognize our good friend M-O in the cast. (robotic sounds)"
Pixar in a Box,Crowds,Counting crowds,6. Binomial coefficient,Let's put everything together. Get ready for a really powerful formula: the binomial coefficient (warning: you may need to watch this a few times!). ,"- Nice work. Thanks for stickin' with us. We're at the last step of the lesson. Earlier, I promised you a
powerful counting formula. Let's work together to see if
we can develop that formula. First notice that 6 x 5 x 4
looks a little like a factorial except that it's missing the 3 x 2 x 1. That means we can write 6 x 5 x 4 using factorials as 6! over 3!. Because 6! equals 6 x 5 x 4 x 3! So dividing by 3! just leaves 6 x 5 x 4. That means, we can rewrite our earlier example as 6! over 3! x 3!. To generalize this for
other numbers of actors, let n be the number of
actors we can pick from and let k be the size of the cast. On the first pick, we have n choices. Then, on the second pick, we
have n-1 choices and so on. Notice that the number being subtracted is one less than the choice number. So, on the kth choice,
you have n - (k-1) choices which is n - k +1. Multiplying the choices together gives n x n - 1 through n - k + 1 which can be written as n! over (n-k)!. Now, we have to divide by k! because there are k! ways
to order the k choices. So, finally, we get to, wait for it. Drum roll, please! n! over k!(n-k)! possible
casts of k actors chosen from a group of n actors total. This formula is so famous that it has a special name and
a special symbol to write it. It's called a binomial coefficient and mathematicians write it as n choose k equals n! divided by k! (n-k)!. It's powerful because you can use it whenever you're selecting
a small number of things from a larger number of choices. With this tool, we can
easily compute, say, how many casts of 4
robots I can come up with when I have, let's say, 12
different robots to choose from. There are 12 choose 4, which, if you work it out, is exactly 495. Your final challenge, should
you choose to accept it, is to answer some final questions with the binomial coefficient formula and there won't be any
diagrams to help you this time. And, you'll be asked to count
something other than robots, like, let's say, plants,
or sandwiches, or outfits."
Pixar in a Box,Sets & staging,Geometric transformations,Introduction to geometric transformations,how are virtual sets built in the computer? ,"- At Pixar we build our movies shot-by-shot. A shot is something we make ^by staging our characters in a set ^and then framing them up through a camera. Every time the cameras point-of-view changes... ^- That's a new shot. ^On average, a Pixar movie is made of about 1,800 shots. That's a new shot almost every three seconds. - In animation we don't just dive in and start creating shots. First we need to figure out the story. And we do this by making a story reel. It'a a fast, rough version of the film made of tens of thousands of drawings. - The story reel does more than just tell the story. It hints at a lot of things, such as composition, camera movement, performance and location. - The story reel gives us a good place to start thinking about how we're gonna make these shots for real. Real, like in the virtual, three-dimensional world of computer graphics. - And math is literally the foundation for all the processes we use to create these films in the computer. This lesson will show you how geometric transformations, which are basic functions to manipulate the position, orientation, and size of an object, are an essential part of building our shots. You ready? - Of course. Let's go. - I work in the Set's Department as a Set Dresser. Often, the set starts as just an empty room. Using the story reel, and reference from the art department, I will work out what objects we need to include in the set initially. At this stage, before cameras are in there, it's not about making the set pretty. It's about supporting the action. So I only include things that are essential in staging the shot. I select the virtual models I need, and they appear in the center of the set. I move them into place around the room, turning them and re-sizing them if necessary. Each of these changes to the model is accomplished using geometric transformations. When I'm done with this first pass I send it to staging. - My department, Camera and Staging, is where we figure out how to shoot the movie through the lens of a virtual camera. So let's take a look at the shot we're gonna make. - Oh no! Our dinosaur has escaped. - In film-making, camera movement is a powerful tool to convey emotion in your audience in a subconscious way. Is the camera hand-held? On a dolly or a crane? Is the character experiencing some important moment? A moment of significance that we're pushing in on? For this shot we're gonna follow the action with our camera, panning with Bonnie as she moves through the space. - Oh no! Our dinosaur has escaped. When we're done setting up the camera, the shot goes back to Set Dressing. - Now that I know what the set looks like through the camera, I can take a more detailed pass. I'll add objects to make the set feel more believable and support the story. Sometimes this means adding a lot of stuff in messy piles to feel like a teenagers room. Or fill the crates in a bookshelf so it looks like a daycare but feels like a prison. And all that math? Well, we use geometric transformations at every step of building the shot. - In this lesson, you'll get a chance to use geometric transformations, and explore concepts as simple as addition and as spicy as trigonometry to build your own shot."
Pixar in a Box,Sets & staging,Geometric transformations,1. Coordinate plane,This video introduces the transformations we'll be using in the rest of this lesson. ,"- Hi, I'm Fran, a technical director here at Pixar Animation Studios. I'm talking to you today from the lobby of one of the beautiful buildings of the Pixar campus. As we learned in the previous video, when we create shots to make up our movies we need to assemble the environment where the story takes place. If I were to build this kind of environment, I'd start by placing the really big forms like the walls and the floor. Then I'd place the dramatic elements like this gargantuan fireplace behind me. Then I'd move down to the medium sized elements and do selection and placement of the couches, tables and chairs. Finally, I'd move down to the really small details like the magazines on the table and the pieces of wood in the fireplace. All of these items need to be positioned using the mathematical operation of translation, properly sized using the scaling operation and oriented using rotations. These operations are all examples of fundamental geometric transformations. We'll spend the remainder of this lesson looking more closely at them. For our films, these transformations control what's going on in a virtual three-dimensional space. ^Meaning that each point has three coordinates, ^X, Y and Z. ^But for this lesson we're gonna simplify a bit and look at laying out floor plans in two dimensions, like we're viewing them from above. ^So points need only two coordinates, X and Y. ^The X coordinate says how far to the right a point is, ^and the Y coordinate says how far up it is. ^This point for instance has X coordinate three ^and Y coordinate five. ^Before we begin building our own shot from Toy Story, ^let's review how to plot points in 2D using the next exercise."
Pixar in a Box,Sets & staging,Geometric transformations,2. Translation,Now we can begin laying out our scene! Starting with translation... ,"(bouncing noises) - Now that we know how to plot points on a coordinate plane, we're ready to start designing a shot. Let's take a closer look at this sketch that we got of Andy's room from Toy Story. We can see that Buzz and Bo Peep are laid out on the floor and on the bed in sort of a haphazard sort of way. We can also see in this sketch, that there's a question. Where do we want to put the lamp? Do we want it next to the bed, so that the person who lives here can use it? Or do we want it on the dresser, to mean that the adult is using it? Everywhere you put something, means something. And really good computer graphics tells a story in every single placement of every single prop. To build the shot, we've received this set of objects from the modeling department to work with. At Pixar, we call such a collection a model catalog. Since in this lesson we're working in 2D, our objects are 2D images. But when we do this for real in a Pixar movie, our assets are 3-dimensional models. In either the 2D or 3D case, we pick a reference point on the object to aid with placement. We could choose any reference point we like. In this lesson, we'll choose the lower left corner. Objects brought into the shot from the model catalog will appear with the reference point at the origin. To lay out my shot, I start with the dresser, since it's one of the bigger forms I'll need to work with. Once the object is in the shot, I can position it wherever I want using the translation operation. For instance, lets move it five units to the right, and five units upwards. To translate the entire object, we have to translate each point in the object. So, if I pick this point on the initial object. Call its coordinates x zero and y zero, it gets moved to this point after translation. Call the coordinates of this translated point x one and y one. This formula over here tells us that the mathematics of translation is addition. As I click on a point in its initial position, you see where that point goes as well as what's happening to the coordinates. So whenever you see objects changing position in our films, you know that translation, and therefore addition, is going on under the hood. Your first assignment is to select objects from the model catalog to create a first pass at that drawing you got from the story department. To keep things simple for this first assignment, we've only given you the translation operation, so you won't be able to layout the whole shot. Your job is to figure out which objects you can place using only translation. You shouldn't pick objects that are going to require re-sizing or rotation just yet. And if you add an object by mistake, you can always click remove. Good luck."
Pixar in a Box,Sets & staging,Geometric transformations,3. Scaling,Next we need to explore the mathematics of scaling. ,"(techno music) - To hit our design goal given to us from the story department, we'll also have to resize
objects in our scene. For example, I can put Buzz into the shot, but he's clearly not the
size indicated in the sketch. We can change the size of Buzz, say making him twice as big by using
the scaling operation. To scale the object to
twice its initial size, I have to multiply the
coordinates of each point in the object by a factor of two. As before with translation,
I can pick any initial point. Call its coordinates x0 and y0. After scaling it becomes a point x1 y1. This formula shows that the coordinates of each point gets multiplied by two. More generally, making something s times as big means multiplying by s. If s is larger than
one, things get bigger. And if s is less than
one, but still positive, things get smaller. We can summarize this by saying that the mathematics of scaling is multiplication. If the scaling factor in x
is bigger than the one in y, I stretch the object out horizontally. Think about what would happen if the y factor is bigger than x. Also, think about what would
happen if s is negative. We generally need to
both scale and translate objects to put them where we want. I've already scaled the Luxoball so I can position it using translation. Again, as I click on an initial position, you can see where that point goes once it's gone through both operations. The formulas tell us that two operations are being performed. In this next exercise, your assignment is to add to the shot you
created in the last exercise by adding objects that require both translation and scaling operations. Remember if they require rotation, you shouldn't place them
in the shot just yet. (strong drum beat) Take your time, but honestly the animation department has been waiting for this shot for like two weeks. So, see you in 10 minutes."
Pixar in a Box,Sets & staging,Geometric transformations,4. Commutativity,We need to be careful with the order of scaling and translation. But why? ,"(springing noises) - We're a good way towards building a shot that matches the sketch we got from the story department. But before we continue, let's pause for a moment to explore an interesting issue that comes up when combining operations. In the last exercise, you used the two operations of scaling and translation to position some objects. For example, suppose I start by translating this object by five in X and three in Y, and then scale by a factor of two. But what if I change the order and do scaling before translation? In this case, I'll scale by a factor of two, and then translate by five in X and three in Y. Huh. I get a different result. ^ That means the order of operations matters ^ when we combine scaling and translation. Let's try applying two different translations. The first by, say, hmm, five in X and three in Y. And the second by, say, two in X and four in Y. And if I do these in the opposite order, I get the same result. ^ So apparently, order doesn't matter ^ when combining two translations. When order doesn't matter, mathematicians say that the operations are commutative. (magical chiming) When order does matter, mathematicians say the operations are (magical chiming) non-commutative. Translations commute with each other because addition is commutative. ^ But scaling and translation don't commute. ^ We'll study commutativity in more detail a little later. In the meantime, use the next exercise to get some practice with this concept."
Pixar in a Box,Sets & staging,Geometric transformations,6. Composite transformations,Time to get a little mathy. Let's look at the general form for any transformation. ,"- Did you get final approval from the director? Congratulations. (crunch) Earlier, we saw that translation and scaling don't commute. Let's see if we can get a better understanding of what's going on using some algebra. Suppose we translate by an amount of five and x and three and y. Pick a point, x zero y zero, in the image we're translating. That point goes to a point, x one, y one, given by, x one equals x zero plus five, y one equals y zero plus three. Now, suppose we scale about the origin by a factor of four. Where does x one y one go? Let's call the point it goes to, x two y two. Scaling says, x two equals four times x one, and y two equals four times y one. Substitute our expressions for x one and y one. X two equals four times x zero plus five which equals four times x zero plus four times five, which equals four times x zero plus 20. Y two is equal to four times y zero plus three which equals four times y zero plus 12. This factor in front of x and y is four. So the effective scale factor is still four. However, the effective translation amount is 20 and x and 12 and y. For comparison, let's do the operations in the opposite order. Scale first that is. X one equals four times x 0, and y one equals four times y zero. Then translate... So algebraically, x two equals x one plus five, which equals four times x zero plus five and y two equals y one plus three which equals four times y zero plus three. Clearly the blue equations aren't the same as the red equations. But in either case, we can write the results of combining scaling and translation in the form x two equals s times x zero plus t x, and y two equals s times y zero plus t y. Where t x stands for the effective, or final translation amount in x, and t y is the effective translation amount in y. When two or more transformations are combined we call it a composite transformation. In the next exercise, you'll be ask to verify that this general form for composite transformation consisting of scales and translations always holds, no matter how many scales and translations are combined, and no matter what the order."
Pixar in a Box,Sets & staging,Geometric transformations,Getting to know Fran Kalal,n/a,"•Current transcript segment: 0:00Huh.•0:01Hah.•0:02Come on!•0:04So one of the mentors that was
really important to me in deciding that•0:08I wanted to go into computer
graphics was Maria Palazzi.•0:11She was the director of•0:12the Advanced Computing Center
for the Arts and Design•0:14at Ohio State University.•0:15And she met with me as a high schooler.•0:17And I talked to her about my interests.•0:19And she said, ""There's a field where
you can use your love for art and design,•0:25and your love for science and coding,
and that field is computer graphics.•0:29And she showed me her center
and walked me around.•0:32And I could see all of the cool things
that the graduate students there were doing.•0:35And I thought,
""This is my place.""•0:37So this is some of my student work
that you're looking at.•0:39One of my favorite things to do with
my student work was to understand how•0:43signals could overlap each other to create
different looks in a shader network.•0:48And so this is a lot of me playing
with shader networks to see,•0:52""Gosh, can I change
a high-frequency fractal,•0:55and can that alternate between
a saturated and a desaturated•0:59version of this texture?""•1:01And I thought that that was so cool that
you could use these relatively simple signals•1:05to combine complex texture maps
and get these interesting looks in the end.•1:10What I loved about doing
this work is that every time•1:13I would write a piece of code
or make a connection,•1:15I could see a visual result
right away from what I was doing.•1:19And that's how I loved
learning how to code –•1:21to have this visual result from the work
that I was doing was so rewarding.•1:24And for me, I was
a really active learner.•1:26And so it was really helpful to see
a result as soon as I made something.•1:30Another reason I went
into computer graphics•1:32instead of live-action film
is what was happening at the time.•1:38I was so inspired
by the short ""Bunny.""•1:41I thought it was one of the most
beautiful things I'd ever seen.•1:44I've always been so moved by bringing
animals and characters to life.•1:51And that's something that
you can do with puppetry quite well.•1:54But that's something that computer
graphics does exceptionally well.•1:57It is just the right format for those things.•2:00And ""Ratatouille""
had just come out.•2:02And I found out that Pixar
was going to come visit our campus.•2:04And I could not wait to talk to the people
who made the delicious looking food.•2:08But we had a really good conversation.•2:10And they liked my work.•2:12And so they asked if I would come to
Pixar and do some shading.•2:15So I did.•2:16And my boss was the lady who made the beautiful
food in ""Ratatouille,"" Athena Xenakis.•2:21It was amazing when I showed up
and got that assignment on the first day.•2:24I just could not believe my luck.•2:26I was so excited.•2:28And on my resumé, there was
a line that said ""Hobbies.""•2:31And in the line that said ""Hobbies,""•2:33it said, ""knitting,
playing piano, and sewing.""•2:38And one of the supervising
technical directors looked at that line•2:40and said, ""Wait.•2:42You can understand how to
use computer programs, and you can sew.•2:45Do you know there are jobs for people
that do that at Pixar?""•2:49And I said ""No.""•2:50And he said, ""Do you want to
come and try that?""•2:52And I said, ""Yeah!""•2:53So they found a spot for me on ""Wall-E"".•2:56We had just gone through getting
some notes back from an audience preview.•2:59And the characters weren't
a size that made the audience happy.•3:02So we resized some of the characters,
and they needed their outfits refitted –•3:05which is perfect intern work.•3:07And then they gave me Ellie.•3:09And they asked me
to dress and tailor Ellie.•3:11And I just could not
believe my luck.•3:13She is the most amazing
and wonderful character.•3:17She's outgoing and she's fun
and she's smart.•3:19Ellie went well.•3:20They liked the way she looked.•3:22And I was happy with it too.•3:23So, they asked me to work on Merida,
which was really awesome.•3:26And that went well.•3:27So then they asked me to work on Disgust
and Riley and all Riley's mom's clothes,•3:33which was a lot of fun.•3:34And now I'm working on something
I totally can't talk about on camera.•3:38If this is a field
that's interesting to you,•3:40or if there's any field
that's interesting to you,•3:42and you look around, and you see
not a lot of people in that field•3:46""look like me,"" it's ok.•3:48You're gonna find your people.•3:49Just go into it, get some great mentors,
make some great friends,•3:54and just believe if you want to be there
bad enough, it's your place.•3:58Kitty!•3:59I'm sorry, there's a cat.•4:01[Laughter] There's a cat.•4:04Oh God, there's a cat.•4:06[Women laughing.]"
Pixar in a Box,Sets & staging,Mathematics of rotation,1. How do we rotate points?,"First let's think about how to rotate some really simple points such as (0,0) and (1,0)
Click here to review basic trig ratios.. ","(steps and bouncing) (switch clicks) - In this tutorial, we're
gonna take a closer look at the algebra of rotations. We'll be working with the
trigonometric functions known as sine and cosine. Let's start by rotating about
the origin by an angle theta. The usual convention is that rotating by a positive angle is a
counterclockwise motion, and rotating by a negative
angle is a clockwise motion. We'd like to find a formula that tells us where every
point x, y goes when rotated. Let's let x prime, y
prime be the coordinates of the point x, y after rotation. We wanna find formulas
for x prime and y prime, in terms of x, y, and theta. One such point is really easy. What happens to the point
zero, zero when rotated? It stays still. So x prime equals zero,
and y prime equals zero. What about the point one, zero? It gets rotated to a point x
prime, y prime as shown here. To determine formulas for x
prime and y prime in this case, drop a perpendicular from x
prime, y prime to the x axis. The orange length is x prime, and the magenta length is y prime. Notice that the orange, magenta, and green triangle is a right triangle. Notice that the length of the green line, the hypotenuse of the triangle, is one, because the point one,
zero is one unit away from the origin. And the lengths don't
change when you rotate. Notice too that the magenta
line is the line opposite theta, and it has length y prime,
which we don't know just yet. The ratio of the opposite side over the hypotenuse is sine theta. That is, y prime over
one equals sine theta, or in other words, y
prime equals sine theta. (switch clicks on) (gentle ringing) Similarly, the orange
line is adjacent to theta, and has length x prime, so if I form the ratio of
adjacent over hypotenuse, I get x prime over one
equals cosine theta, meaning that x prime equals cosine theta. This tells me that the
point one, zero gets rotated to the point cosine theta, sine theta. Use the next exercise to get
some practice with these ideas."
Pixar in a Box,Sets & staging,Mathematics of rotation,2. Geometry of rotation,"Next lets build a diagram that break rotation into smaller parts. The next exercise will give us a chance to build our understanding of this diagram.
Click here to learn about rotation using linear transformations. ","(bouncing noises) - Now we know the coordinates of a few ^special points when they're rotated. To create our software tools for setting up shots, we need to have formulas for where every point goes when rotated. That is if we start with an arbitrary point, x y, we'd like to know the coordinates of x prime y prime, with a point where it ends up after rotation. The formulas we'll come up with aren't too complicated, in fact, here they are. X prime equals x cosine theta minus y sine theta. Y prime equals x sine theta plus y cosine theta. So knowing x, y, and theta, you can compute x prime and y prime, but where do these formulas come from? Well there's a couple of different ways to get these formulas. One is to use properties of linear transformations. (light turns on) ^(xylophone sound) A more elementary way to derive these formulas is using the basic definitions of Trigonometry. And it'll take us a little work to get there, so roll up your sleeves and tie back your hair. (wind whistling) (gun cocking) Let's call the point we start with, p, and the point it gets rotated to, p prime. We need to construct some other points to help us, so let's go back to what we already know, and break down the problem. First, let's rotate the diagram, and imagine OP is the X-axis. This looks like the situation we saw in the previous video when we rotated the point one zero on the x-axis. So, we drop a perpendicular from P prime to the x-axis to define a new point A. ^Now, let's reverse the rotation, ^and drop a perpendicular from A, ^to the x-axis to define a point B. ^Similarly, drop a perpendicular ^from P prime to get point C. ^Observe that the X coordinate of A, ^line OB, is greater than the ^ x-coordinate of P prime, line OC. ^So we must subtract a certain amount. ^The amount we subtract is the length of the new line AD. ^Recall the coordinates of P prime we're looking for ^are defined by OC for the x-coordinate, ^and CP prime for the y-coordinate. ^Finally, drop a perpendicular from P, ^to the x-axis, to create a point E. ^This diagram now has all the information we need. ^Let's get some practice using this diagram, ^by deriving a couple of formulas we'll need later. ^Supposed r is the distance from the origin O to P. ^And let phi be the angle OP makes with the x-axis. ^The distance EP is y, and the distance OE is x. ^EP is opposite phi, so sine phi equals EP over r. ^But EP is y, so sine phi equals y over r. ^And that means y equals r sine phi. ^Similarly, OE is adjacent to phi, ^so cosine phi equals OE over r. ^But OE is just x, so cosine phi equals x over r, ^and that means x equals r cosine phi. Wow, that was a lot of Trigonometry! Before we proceed, see if you can answer a few general questions about ^this diagram in the next exercise. ^Good luck."
Pixar in a Box,Sets & staging,Mathematics of rotation,3. Completing the proof,In this video we'll uncover the connection between the previous diagram and the rotation formulas. Repeat viewing suggested! ,"(Springing sound) - In the previous exercise, you should have found that length OA is R cosine theta. But why? First notice that OPA is a right triangle. So we can use sine and cosine. OA is the side adjacent to theta. Meaning that OA equals R cosine theta. Similarly, AP prime equals R sine theta. Good. So we need to show that angle DP prime A is phi. That's because there are similar triangles lurking in there. In particular, this triangle, and this triangle are similar. To see that, notice that this angle is equal to this angle. Because of the opposite angle theorem, notice also that this angle is 90 degrees, as is this angle. Meaning that the two triangles share two angles. They must also share the third angle, because all three angles must add up to 180 degrees. Thus, CP prime A is phi. Now we're set. One thing we're looking for is this distance, OC, because that's X prime. As we observed earlier, OC is equal to OB minus BC. So X prime equals OB minus BC. And since BC equals AD, we can write X prime equals OB minus AD. But what's OB? It's adjacent to phi, so cosine phi equals OB over OA. And we know that OA equals R cosine theta. So cosine phi equals OB over R cosine theta. And OB equals R cosine theta, cosine phi. So OB equals R cosine phi times cosine theta. But we know that R cosine phi is just X, so OB equals X cosine theta. Now what's AD? Well, AD is opposite phi in the triangle DP prime A. So sine phi equals AD over AP prime. And we know that AP prime equals R sine theta. So sine phi equals AD over R sine theta, which means that AD equals R sine theta sine phi. Which can be rearranged to be R sine phi times sine theta, and we know that R sine phi is just Y. So AD equals Y sine theta. Okay, so that means X prime equals X cosine theta minus Y sine theta. So we're halfway there. Now we just need to know what Y prime is. CP prime is Y prime, and it can be written as CP prime equals DP prime plus AB. DP prime is adjacent to phi, so cosine phi equals DP prime over AP prime. But AP prime is R sine theta. So, cosine phi equals DP prime over R sine theta. And DP prime equals R sine theta times cosine phi, which equals X sine theta. AB is opposite phi, so sine phi equals AB divided by OA. But OA is R cosine theta, so sine phi equals AB over R cosine theta. And that means AB equals R sine phi times cosine theta. But R sine phi is just Y, so AB equals Y cosine theta. Putting this together Y prime equals X sine theta plus Y cosine theta. Yay! We did it! In summary, X prime equals X cosine theta minus Y sine theta and Y prime equals X sine theta plus Y cosine theta. You hung in there, and now you've seen a super useful and prevalent formula. Whether you're doing computer graphics or building bridges or triangulating positions, you're gonna see these formulas come up again and again and again. Use the next exercise to get some practice with them."
Pixar in a Box,Rendering,Rendering 101,Introduction to rendering,Overview of this topic. ,"Hello. Hold on for just a second, please.
Welcome to ""Rendering."" I'm Christophe Hery and
I'm a researcher at Pixar. Rendering is the last phase of
the pipline and film production that takes our movies
from this to this. Rendering is where the world we've created
in the virtual three-dimensional space of the computer is finally realized
as a series of perfectly rendered two-dimensional images
that play one after another for 96 minutes and
become our movie. Rendering is an incredibly
time-consuming process, all focused on answering
one simple question: ""What color is this pixel –
and then this pixel – and then this pixel
and this pixel?"" Seems simple enough. I mean, the balloon is blue,
so the pixel will be blue, right? Well not exactly. A pixel is a tiny portion
of the final image. It acts like a little window
into the virtual 3D world. To understand what
color it should be, we have to figure out
what part of the picture we see through that window. We translate this question,
""What color is this pixel?"", into math. This equation is called
the ""rendering equation."" It's a mathematical description of how
light bounces around in the environment. I know we said ""color.""
And this equation is about light. But there's a good reason for that. Color is light – just light
+of different wavelengths. So when we ask the question,
""What color is this pixel?"", we're really asking ""What light is coming
through this pixel towards the camera?"" The solution to the equation
will be the answer to our question. ""This pixel is – purple?""
[Asks in an unsure way.] To render a movie like ""Up,""
we have to ask this question: ""What color is this pixel?""
billions and billions of times. But just like every part of this process,
each little calculation isn't hard to do. It's the layer upon layer
of calculation that makes it complex, but also makes it possible to bring
something this beautiful to the screen."
Pixar in a Box,Rendering,Rendering 101,1. What is ray tracing?,Introduction to the basics of ray tracing. ,"Hi, my name is Susan Fong and I'm a
rendering technical director here at Pixar Animation Studios my job is to
make sure that the images you see in the theater are created as quickly and
efficiently as possible now that's a big job because of
Christophe described in the previous video, rendering is an extremely
complicated process requiring thousands of computers all working together to
render our films. The render farm is where we keep all these computers, but what are these computers doing exactly? That's the topic of this lesson. In the first part
we'll take a geometric look at a renderer works. In the second part of of the lesson, we'll
look at some of the equations and algebra that are needed to write a
render as a computer program. So let's get started! Let's start with the
drastically simplified scene from Up. This object lives in three dimensions, as we can see as we navigate around it.  Just like live-action filmmaking, we need to
place a camera inside the scene. In computer graphics we call this a virtual
camera. We first pick a location for our virtual camera they'll be used to create the
image. It's shown here in white. We also need to decide which direction our camera is
pointed. That's shown here in red. Next we erect a plane upon which we'll form the
image. It's called the image plane, and represents what the virtual camera will
see. Notice it is perpendicular to the viewing direction. The image plane is
broken up into a grid of pixels that will make up the image. In this
interactive the first two sliders allow you to rotate your camera around the
scene. The job of the renderer sounds simple. It
must determine a color for each of these pixels. This is kind of like paint by
numbers where the image plane is serving as the canvas on which the renderer is
painting. Now I'm only showing you a few pixels in this example. Our real images
are made up of more than two million pixels. Over the years a number of
different rendering algorithms have been developed. one of the most elegant and
versatile algorithms is called ray tracing. Here's how it works: to determine a
color, for say this pixel, a ray tracer constructs a mathematical ray that starts at the camera, crosses the center of the pixel, and then extends off into the scene. Kind
of like a laser beam pointed at the pixel but from the camera. The ray
tracer computes the closest intersection point between the scene objects and this
ray. It then determines the color of the intersected object at that point, and
paints the picture that color. So this pixel would be colored brown, this one yellow,
and so forth for the other pixels. This process is done for all of the pixels in
the image. Fancier versions of ray tracing can
create more subtle effects, like soft shadows and variations in lighting that
helped to create different moods. The ray tracing process leads to a bunch of other
questions, like how are intersection points determined? And once that intersection
point is determined, how do we figure out what color it is? These mysteries and more will be revealed in the remainder of the tutorial. In this first exercise, you can
practice some ray tracing yourself."
Pixar in a Box,Rendering,Rendering 101,2. Light reflection,Let's look more closely at how light behaves when it strikes an object. We'll cover diffuse and specular surface responses. ,"- In the previous video we saw that the basic job of a ray tracer is to determine what color to paint each pixel. And it does that by casting a mathematical ray that starts at the camera, passes through a pixel, and then off into the scene. The ray tracer must then compute the closest intersection point between the ray and the scene geometry, and return that geometry's color. In this video, we're gonna look at how we determine how much light is travelling along the ray back towards camera. That's what we need to figure out in order to determine each pixel's color. This is actually a pretty deep and complicated question that is mathematically governed by the rendering equation. I know it looks scary. I mean believe me, this equation still gives me nightmares. But it's actually easy if you break it down into a few pieces. The amount of light travelling from a point on a surface back to the camera depends on three things. One, how much light is falling on that point? Two. how does the surface of the object at that point reflect light? And three, where is the camera? Let's examine each of these factors in turn using some props. My scene consists of a tennis ball and a light source. Now, the first factor is how much light is falling on a spot on that tennis ball? It's pretty obvious that the farther away the light, the lower the intensity of light falling on the ball. So, we need to know the distance to the light source and we need to know how bright the light is. It's less obvious that we need to take into account the orientation of the surface when determining how much light falls on the point. Grazing angles receive less light or energy, so they appear less bright. Whereas the point will be brighter or hotter if the surface is oriented perpendicular to the direction of the light. You feel this every sunny day. It's why it's hottest at noon and cooler in the morning and evening. If there is more than one light source, we repeat the process for each one of them. The second factor is how does the surface reflect light? The color of an object is a big part of how it responds to light. But it's not the only factor. Some objects have a fuzzy or dull appearance like the tennis ball. Others are shiny and display bright highlights like this pool ball. These two objects are receiving the same amount of light, but they look very different. Other surfaces are somewhere in between dull and shiny like human skin, wood, or even hair. Dull surfaces are said to be diffuse and shiny surfaces are said to be specular. Finally, the last factor is where is the camera? Watch the middle of the number 3 on the pool ball. Notice that as we move around, the brightness of that point changes. Even though everything else is the same the only thing changing is the location of the camera. Let's look at a virtual version of this physical situation. There are three sliders that you can control. Spotlight intensity which is like controlling the brightness of the flashlight. A diffuse slider which controls the dullness of the surface or roughness. And specular slider which controls the shininess. You can also move the spotlight around which is represented by a white dot. For every object in a Pixar movie there's a shader packet. The shader packet describes in visual detail everything about a surface. It will include photographs of what something looks like in real life. Drawings describing may be the way the roughness on a surface looks or how someone's hair should look. In this next exercise, you can sit in the seat of an artist using tools based on these concepts we just covered. Your job as a Pixar artist is to match the reference art. Have fun."
Pixar in a Box,Rendering,Rendering 101,3. Light rays,"Let's look more closely at how light bounces when it strikes an object. We'll cover reflected and refracted rays.
Click here for more detail on refraction! ","(introductory sound) In the previous video, we've talked about what color a point on a surface is by considering three factors: One, how much light falls on the point. Two, how the surface reflects light, and three, where the camera is. For the first factor, the ray tracer needs to determine if the point being considered is visible to the light source. This is actually pretty easy to answer. The ray tracer constructs a ray that starts at the point being shaded and launches off in the direction of the light source. These rays to light sources are called, naturally enough, shadow rays. Here's an example of an point that is visible to the light source, because the shadow ray doesn't hit anything but the light source. It's important to notice that only some of the light falling on a point comes directly from the light sources. This is called direct illumination. In the real world, some of the light comes from other objects in the scene as well. Notice that I can bounce light off this card, which you can see adds to the light hitting my face. This is an example of indirect illumination. As another example of indirect illumination, you can see a reflection of the tennis ball in the pool ball. A ray tracer can account for such reflections by sending another ray in the reflection direction. The direction of this reflective ray is determined by how a light ray would bounce naturally in the same way a pool ball bounces. This technique was used, for instance, in Cars 2 because reflections off shiny cars were super important to the look of the film. If the object is partially transparent, like this glass cup, the ray tracer can do a similar thing and launch a ray in the refracted direction. Refracted rays pass through an object while reflected rays bounce off of them. When the rays pass through an object, such as this glass, the rays bend in different directions instead of in straight lines, which explains why the image you see of me through this glass looks warped. (ding) The ray tracer can keep doing this, casting rays, sending out reflective and refractive rays to account for reflections, the refractions, and so on. Then, it uses all of these rays to determine the final pixel color. In this next exercise, you can test your understanding of these concepts."
Pixar in a Box,Rendering,Rendering 101,4. Rendering Mike Wazowski,Case study from Monsters University. ,"- In the first few videos, we discussed the basic job of a ray tracer: determine the final pixel color for each pixel in an image. Let's look at a ""real-world"" example from Monster's University. First, for each pixel, we need to find the intersection point between a ray, starting at the camera,
shooting through a pixel, and shooting into the scene. The next step is to ask, ""What color is each of these surfaces?"" It turns out that color, alone isn't very interesting to look at, right? Next, we need to determine how the surface will respond to light. As we discussed earlier,
the two basic components of surface response are
called diffuse and specular. This is a picture of how
diffuse, or dull, each object is. Where this image is bright white is gonna be where the dullest
surface in the scene is. For example, the hat is really dull. And this is a picture of how specular, or shiny, each object is. Now, from this image, can you tell where the main light source is? Pause the video now, if
you need some more time. The light source is off to
the left side of the screen. You can actually see it
reflected in Mike's eye, here. Now, each object in the scene
receives directing lighting, which we see here in these
images of diffuse and specular. But they also received indirect lighting, which is light bouncing off
of other objects in the scene. So what happens when we put all
these calculations together? It's kind of magical, right? That's what we do. It's math, but used to create magic!"
Pixar in a Box,Rendering,Rendering 101,Getting to know Susan Fong,Find out more about Susan Fong! ,"- [Voiceover] How did you get into computer graphics? - Hmm.
- [Voiceover] What drew you? - 1995 Toy Story. (laughing) When I was in high school, I worked on yearbook staff, and yearbook staff was a very graphical, artistic endeavor; but I was also really good at math. When I went to college, I kinda discovered the magic of the union of the two: I could go to school, learn math, learn how to program, but create art the end of the day. When I first came to Pixar, I started as a rendering software engineer. That means I was actually writing the math of that rendering equation for a living. Over time, I moved out of software and into production, and I now am in charge of the entire rendering process from start to finish on a film, as well as all new technology needed for a film. So, my actual title is Global Technology and Rendering Supervisor. I think one of the biggest problems facing Pixar is the concept of scalability. Rendering keeps getting more expensive, more physically realistic, and the more expensive it is, the more computers we need to do the job. The more computers that there are to do the job, the harder we have making the entire system of computers work efficiently. That's really critical to having an affordable cost point for rendering a film. So I honestly think that one of the reasons I'm really good at math is because I'm diabetic. I've been a type 1 diabetic since I was five years old, and everything in diabetes is an equation: you eat 15 grams of carbs, and that equals one unit of insulin; and everything you do. I actually have a graph now, amazing technology, that shows me my blood sugar every five minutes. I can look for trends; I can correlate if this is how much I ate last time and this was the outcome, how might I change it next time? That kind of trending, of how would I fix the situation, actually extrapolates really well to a render farm: when you're trying to think about looking at patterns and trends on a farm, and trying to make decisions about how you might change it to change the outcome the next time around. So, kind of, diabetes set me up for this."
Pixar in a Box,Rendering,Mathematics of rendering,1. Ray tracing intuition,First let's look at ray tracing in 2D using a simple example. ,"(introductory sound) We saw in the previous lesson that to write a ray tracer, you need a mathematical way to answer a bunch of questions. Where does a ray intersect a scene object? Does a shadow ray reach the light source before it intersects another object? How does the surface reflect light? How far away is the light source? Finally, where is the camera? In the remainder of this lesson, we're going to focus on the first sub-problem, that of ray object intersection. We're going to start our study by first looking at the simpler problem of how to do ray object intersection in two dimensions. What does ray tracing look like in two dimensions? Let's start with our three-dimensional situation and take a cross-section through this white plane that contains the camera and the viewing direction. Notice too that the white plane intersects the image plane on the line, which we'll call the image line. That means if we draw just what's in the white plane, we get a picture like this. To make the problem even easier, we'll try first intersecting with the simplest object possible, the line segment. Here's our scene: Just a line segment connecting two points, A and B. To render the scene, just as in three dimensions, we need to pick a location for our camera. Call the camera point, C. Next, we pick a viewing direction, shown here in red. In three dimensions, the camera location and viewing direction defines an image plane. but in two dimensions, it gives us an image line. That's the line in which our image will be formed. Now, let's pick a point, P, on the image line to denote the pixel we want to determine the color of. Recall that the ray tracer builds a ray from C through P off into the scene. We need a mathematical way to compute intersection points. Like this one, called 'I'. To develop the math, we first introduce a coordinate system. The math we need comes from looking at the Algebra of intersecting a ray with a line segment. We've introduced quite a few ideas in this video. So, use the next exercise to make sure you're comfortable with two-dimensional ray tracing."
Pixar in a Box,Rendering,Mathematics of rendering,2. Parametric form of a ray,"This video introduces the parametric form of a ray in 2D.
Click here to review weighted averages of 2 points.
Click here to review slope-intercept form of a line. ","- Recall that to figure out where a two-dimensional ray intersects a line segment, we started by first introducing a coordinate system. Once we have our coordinate system, we can write our line AB in slope intercept form. Since in this example A has coordinates three two, and B has coordinates four negative one, the slope intercept form of AB is y equals negative three x plus 11. Similarly, if I pick P to have coordinates two, one half, then the slope intercept form of the ray CP is y equals one quarter x. The point I we're looking for is on both of these lines. So if I sub x and I sub y represent the coordinates of I, then I sub y equals negative three I sub x plus eleven, because I lies on AB. And I sub y equals one quarter I sub x, because I lies on the ray CP. Solving these two equations for the two unknowns gives us the coordinates I sub x and I sub y. Using the slope intercept form of the ray works in two dimensions, and is fairly simple to understand, but there's a problem when we generalize it to three dimensions. The problem is that in three dimensions, the ray doesn't have a slope intercept form. So we'll have to throw out this representation of our ray in preparation for three dimensional raytracing. To represent our ray CP, we'll use something called a parametric function. What I'm about to write looks a little strange at first, but bear with me, these functions start to become familiar with practice. My ray will be represented by a new function, R of t, that is the weighted average of C and P, where t is the weight. In particular, I'm going to write R of t as one minus t times C, plus t times P. Notice what happens when t equals zero. One minus t is just one. So R of zero is C. And when t equals one, R of one equals P. That's convenient, because I can relabel C as R of zero, and I can relabel P as R of one. R of one half would be exactly halfway between C and P. Values of t greater than one name points on the ray off in the scene beyond P. Before we continue, get some experience using this kind of parametric function in the next exercise."
Pixar in a Box,Rendering,Mathematics of rendering,3. Calculate intersection point,Now we are ready to calculate an intersection point using our ray CP (parametric form) and our line AB (slope-intercept form). ,"- Now that you have a feel for how t works, we're ready to calculate our intersection point I between our ray CP and our line segment AB. Recall from the previous video that the slope intercept form of the line AB is y equals negative three x plus 11 and the parametric representation of the ray CP is the function R of t equals one minus t times C plus t times P. Different values of the parameter t locate different points on the ray. The intersection point that we're after is one such point on the ray so there must be some value of t, call it t star, such that I equals R of t star. This is really two equations, one for the x-coordinate of I and one for the y-coordinate. These two equations are I sub x equals R sub x of t star, which equals one minus t star times C sub x plus t star times P sub x. In the same way I sub y equals R sub y of t star, which equals one minus t star times C sub y plus t star times P sub y. In this particular case C, our camera position, has coordinates zero, zero and P has coordinates two, 1/2. So we have I sub x equals t star times two and I sub y equals t star times 1/2. I is also on the line segment AB meaning that I satisfies the slope intercept form for AB, that is I sub y equals negative three times I sub x plus 11. So we have three equations and three unknowns, I sub x, I sub y and t star. We can solve the system of equations by substituting the first two equations into the third to get an equation just in t star. 1/2 t star equals negative three times two times t star plus 11. Solve this for t star, then plug that value of t star into the first two equations to get I sub x and I sub y. And that's how it's done. Before we continue get some experience using this kind of parametric function in the next exercise."
Pixar in a Box,Rendering,Mathematics of rendering,4. Using the line equation,"Next we need to throw away the slope-intercept form and use the line equation instead.
Click here to see why dividing by zero is bad.
Click here to try the interactive program shown in the video. ","- There's a detail that we need to attend to: there's a slight problem with the slope intercept form of the sine geometry. The problem is that if AB is vertical, the slope isn't defined. To see that, look at the slope intercept form in general: y equals m x plus i, where m is the slope and i is the y-intercept. The slope m is the change in y divided by the change in x, meaning that if AB is a vertical line, there is no change in x. So, computing the slope would mean dividing by zero, which is bad. (bell) But we can eliminate this problem by multiplying through by the change in x. So, multiplying through by the change in x, we get change in x times y equals change in y times x plus i times change in x. It's common to move everything to one side and re-write this as change in y times x minus change in x times y plus i times change of x equals zero. Call this term, change in y, a value: a; this term, negative change in x, a value: b; and this term, i times change of x, a value: c; meaning we can write an equation for the line as a x plus b y plus c equals zero. An equation like this for a line goes by several names. It is sometimes called the line equation. It's also called the implicit form for the line. Let's do an example for this specific line, AB. Change in y is negative three. Change in x is one, and i is 11. So, negative three x minus y plus 11 equals zero. That line equation is shown here. Notice that as I move A and B around, the line equation updates accordingly. The line equation can be used with the parametric form of array to compute intersection points, this time, for any type of line, even vertical ones. Use the next exercise to practice computing intersection points using line equations."
Pixar in a Box,Rendering,Mathematics of rendering,5. 3D ray tracing part 1,"Now we are ready to ray trace in 3D. We'll look at the problem of ray triangle intersection.
Click here for more detail on the plane equation. ","- Now that we can retrace in 2D, we can finally go back to the problem we really wanna solve: retracing in 3D. In particular, we'll need
to retrace flat planes, houses, and, ultimately, characters. A character like Carl is a complex shape but, as we discussed in the
character modeling lesson, he can be broken down into lots of small, four-sided quadrilaterals,
that is, four-sided polygons. And each quadrilateral can be
converted into two triangles by adding an edge that
connects diagonal points. That leads to the question: How do you intersect
a ray with a triangle? It turns out, that that's
one of the most fundamental calculations that a ray tracer performs. Here's a scene consisting
of just one triangle. Our real scenes contain
millions of triangles. But, once we know how to
intersect a single triangle, our ray tracer just keeps doing
that, over and over again. Now, I don't know about
you, but I don't wanna do the same thing over and over again. So, it's a good thing we
have computers to help us out and that they don't get tired. As in 2D, we start by setting
up a coordinate system. But, this time, there are
three directions: X, Y, and Z. As we explained earlier,
we pick a camera position, call it C, and a viewing direction. And we construct an image plane perpendicular to the viewing direction. This is where our image will be formed. Let's pick a pixel, P, on the image plane and construct the
parametric representation of the ray, CP, as R(t) = (1-t)C + tP. This is the same equation we saw in 2D, but now it represents
three separate equations. One for X coordinates,
one for Y coordinates, and one for Z coordinates. Remember that, in the previous video, we saw that, in two dimensions, every line can be written in implicit
form as ax + by + c = 0. Very similar to this is
the equation for a plane. And every triangle lies in a plane. The equation for a plane can
be written in implicit form as ax + by + cz + d = 0. The intersection point,
I, we're looking for, is in the plane of the triangle, meaning that aIx + bIy + cIz + d = 0, where Ix, Iy, and Iz are
the coordinates of I. I is also on the ray, meaning
that there's a value of t, again, let's call it
t*, such that I = R(t*) which equals (1-t*)c + t*P which is really the three
equations shown here. One for X, one for Y, and one for Z. Now we have four equations
and four unknowns. To solve this system of equations, we can follow the recipe from 2D and substitute the last three
equations into the first one. This gives us one equation
with only one unknown, t*. But, it turns out, when you
put all these substitutions in, it looks pretty scary. But, remember, it's not that bad. We're just plugging one value from one equation into another. Solve this for t*, then substitute back into the ray equations
to get Ix, Iy, and Iz. Now, I know we've gone kind of fast, but the next exercise
will let you practice computing intersection
points for yourself."
Pixar in a Box,Rendering,Mathematics of rendering,6. 3D ray tracing part 2,"Now we just need to determine whether our intersection point is inside or outside the triangle.
Click here to review weighted averages of three points. ","- In the previous video, we saw how to compute an intersection point, I, that lies in the plane of a triangle. But how can we tell if the point is like this one, that's inside the triangle; or like this one, that's outside the triangle? The method our ray tracer actually uses makes use of vector algebra. But a method that is essentially the same is easy to explain if you understand weighted averages. (bell) Notice that as I change the weights in the average, the intersection point, I, moves. And if all the weights are positive, I is inside the triangle. But look what happens when one or more weights is negative: I escapes from the triangle. Bingo! If we can determine the weights needed to produce I, we can simply check their signs. If one or two of them is negative, I is outside the triangle, and otherwise, I is inside. But how can we determine the weights? Let's leave them as unknowns for the moment, and we'll call them little a, little b, and little c. Every point I in the plane of big A, big B, and big C can be written as a weighted average of big A, big B, and big C. If I pick little a, little b, and little c, so that they add to one, then I can forget about the denominator. The resulting equation, I equals little a times big A plus little b times big B plus little c times big C represents the following three equations: one for the x-coordinate, one for the y-coordinate, and one for the z. We know I, big A, big B, and big C, so the only unknowns are little a, little b, and little c. So this is three equations and three unknowns that can be solved for the values of little a, little b, and little c. Once you know little a, little b, and little c, check their signs to determine if I is inside the triangle. In this final exercise, you'll be asked to compute intersection points I, and determine if they lie inside or outside the triangle. Now, after all that, go forth and write your own ray tracer."
Code.org,Computers and the Internet,How computers work,Introducing How Computers Work,Microsoft founder Bill Gates gives a quick overview of the entire How Computers Work series. ,"- Everywhere you look, computers
are changing the world. Whether they're on our desktops,
in our homes, our pockets or just about anywhere else. - But while most of us use
this revolutionary technology daily, we don't often ask,
how do computers work? In this series, you're gonna learn how computers really work. Starting with what makes
a computer a computer. Then, you'll look at how
information is represented inside the computer using
tiny electrical signals going on and off at mind-boggling speeds. After that, you'll learn how
computers choose circuits to do everything from simple math to simulating entire virtual worlds. Next, you'll zoom out and look
at the different parts of the computer that actually input, output, and store all that information. Finally, you'll take a look
at what code actually is and how software controls hardware. So, whether you're just
curious about the devices you use everyday or you
wanna design the innovations of the future, the first step is learning how computers work. (upbeat music)"
Code.org,Computers and the Internet,How computers work,"What makes a computer, a computer?",Inventor and designer May-Li Khoe and virtual reality designer Nat Brown introduce the four features that all computers share. ,"(upbeat music)
- One, two, three, four! - My name is May-Li Khoe and
I'm a designer and an inventor. So, some of the things I've
designed have been at Apple, and now I design products for kids to use so that they can have an
easier time in school. My other jobs include DJ'ing and dancing. (upbeat, bouncy music) Computers are everywhere. They're in people's pockets, they're in people's cars, people
have them on their wrists, they might be in your backpack right now, but what makes a computer a computer? - What does make a
computer a computer anyway? - And how does it even work? (upbeat guitar music) - Hi, I'm Nat. I was one of the original
designers of the Xbox. I've been working with
computers since I was, maybe, seven years old and now I
work on virtual reality. (fast, jazzy music) As humans, we've always built tools to help us solve problems. Tools like a wheelbarrow, a hammer, or a printing press, or a tractor trailer. All of these inventions
helped us with manual work. Over time, people began to wonder if a machine could be designed and built to help us with the thinking work we do. Like solving equations or
tracking the stars in the sky. Rather than moving or
manipulating physical things, like dirt and stone, these machines would need to be designed
to manipulate information. - As the pioneers of computer science explored how to design a thinking machine, they realized that it had to
perform four different tasks. It would need to take
input, store information, process it, and then output the results. Now this might sound simple, but these four things are
common to all computers. And that's what makes
a computer a computer. - [Nat] The earliest
computers were made out of wood and metal with
mechanical levers and gears. By the 20th century though, computers started using
electrical components. These early computers were
really large and really slow. A computer the size of a room might take hours just to do a basic math problem. - [Announcer] These machines
are things of gleaming, varied colored metal and numerous flashing lights. - Computers started out
as basic calculators, which was already really
awesome at the time and they were only
manipulating numbers back then. But now we can use them
to talk to each other, we can use them to play games, control robots, and do any crazy thing that you could probably imagine. - Modern computers look nothing like those clunky old machines, but they still do the same four things. (funky, upbeat music) - First, we're gonna talk about input. This is my favorite because what input is, is the stuff that the world does, or that you do that makes
the computer do stuff. You can tell a computer what
to do with the keyboard, you can tell them what
to do with the mouse, the microphone, the camera, and now if you're wearing
a computer on your wrist, it might listen to your heartbeat, or in your car it might be listening to what the car is doing. And a touchscreen can
actually sense your finger and it takes that as
input on what it's doing. - All these different inputs
give the computer information, which is then stored in memory. A computer's processor takes
information for memory, it manipulates it or changes it using algorithm, which is
just a series of commands, and then it sends the process information back to be stored in memory again. This continues until the processed information is ready to be output. How a computer outputs information depends on what the
computer is designed to do. A computer display can
show texts, photos, videos, or interactive games,
even virtual reality. The output of a computer may even include signals to control a robot. And when computers
connect over the internet, the output from one computer becomes the input to another, and vice versa. - The computers we use today look really different from the
earliest thinking machines. And who knows what the computers
of tomorrow will be like. My hope is that you get to help decide what you want the computers
of tomorrow to look like. But across all computers, regardless of the different types of
technology they use, they're also doing the same four things. They take in information,
they store it as data, they process it, and then
they output the results."
Code.org,Computers and the Internet,How computers work,Binary & data,"Adafruit founder Limor Fried and program manager Federico Gomez Suarez explain how computers represent numbers, text, images, and sound using tiny electric signals. ","(upbeat music) - Hi, my name is Limor
Fried, and I'm an engineer here at Adafruit Industries,
and this is where I do engineering and design,
and I design circuits for fashion and music and technology. - My name is Federico Gomez Suarez, and I'm a software developer
with Microsoft Hack for Good, and I look into using technology to help solve some of the big
social problems of our times. (upbeat music) - You may have heard that
computers work on ones and zeroes, or you may have seen
scary-looking visuals like this. But almost nobody today
actually deals directly with these ones and zeroes,
but ones and zeroes do play a big role in how computers
work on the inside. - Inside a computer are
electric wires and circuits and carry all the
information in a computer. How do you store or represent
information using electricity? - Well, if you have a single wire with electricity flowing through it, the signal can either be on or off. That's not a lot of choices, but it's a really important start. With one wire, we can
represent a ""yes"" or a ""no,"" true or false, a one or a zero, or anything else with only two options. This on/off state of a
single wire is called a bit, and it's the smallest piece of information the computer can store. If you use more wires, you get more bits. More ones and zeroes with more bits, you can represent more
complex information. But to understand that,
we need to learn about something called the binary number system. (calm music) - In the decimal number system, we have 10 digits from zero to nine, and that's how we've all learned to count. In the binary number system, we only have two digits, zero and one. With these two digits, we
can count up to any number. Here's how this works. In the decimal number
system we're all used to, each position in a number
has a different value. There's the one position, the 10 position, the 100 position, and so on. For example, a nine in
the 100 position is a 900. In binary, each position
also carries a value, but instead of multiplying
by 10 each time, you multiply by two. So there's the one's position, the two's position, four's position, the eight's position, and so on. For example, the number
nine in binary is 1001. To calculate the value,
we add one times eight, plus zero times four, plus zero times two, plus one times one. Almost nobody does this math
because computer do it for us. What's important is that any number can be represented with
only ones and zeroes, or by a bunch of wires that are on or off. The more wires you use, the larger the numbers you can store. With eight wires, you can store numbers between zero and 255. That's eight ones. With just 32 wires, you can store all the way from zero
to over four billion. Using the binary number system, you can represent any number you like. But what about other types of information, like text, images, or sound? It turns out that all these things can also be represented with numbers. (upbeat music) Think of all the letters in the alphabet. You could assign a number to each letter. ""A"" could be ""1,"" ""B""
could be ""2,"" and so on. You can then represent
any word or paragraph as a sequence of numbers, and as we saw, these numbers can be stored as
on or off electrical signals. Every word you see on
every webpage or your phone is represented using a system like this. (upbeat music) Now, let's consider photos, videos, and all the graphics you see on a screen. All of these images are
made out of teeny dots called pixels, and each pixel has color. Each of the colors can be
represented with numbers. When you consider that a
typical image has millions of these pixels, and a
typical video shows 30 images per second, now, we're taking
about a lot of data here. (upbeat music) - Every sound is basically a series of vibrations in the ear. Vibrations can be represented
graphically as a waveform. Any point on this waveform can
be represented by a number. And this way, any sound can be broken down into a series of numbers. If you want higher-quality sound, you will pick 32-bit
audio over 8-bit audio. More bits means a higher range of numbers. - When you use a computer to write code or make your own app,
you're not dealing directly with these ones and zeroes,
but you will be dealing with images, or sound, or video. So, if you want to
understand how computers work on the inside, it all comes down to these simple ones and zeroes and the electrical signals
in the circuits behind them. They are the backbone of how all computers input, store, process,
and output information. (upbeat music)"
Code.org,Computers and the Internet,How computers work,Circuits & Logic,Adafruit founder Limor Fried and virtual reality designer Nat Brown show how simple logical circuits underlie everything your computer does. ,"(Ding) (electric guitar music) - One of the coolest
things I've discovered about circuits is, circuitry
can be an art form. If I have a creative idea, I can get that creative
idea out using circuits. So, if you have ideas, you
can use technology to make those ideas come to life. Every input or output of
a computer is effectively a type of information,
which can be represented by on or off electrical signals. Or one's and zero's. In order to process the
information that comes in, as input, and the make the
information that's output. A computer needs to modify
and combine the input signals. To do this, a computer uses
millions of tiny electronic components, which come
together to form circuits. (upbeat music) - Let's take a closer look
at how circuits can modify and process information that's represented in one's and zero's. This is an incredibly simple circuit. It takes an electrical signal,
on or off, and it flips it. So, if the signal you give it is a one, the circuit gives it a zero. And if you give the circuit
a zero, it gives you a one. The signal that goes in, is
not the same as the signal that comes out. And so, we call the circuit, not. - More complicated circuits
can take multiple signals and combine them, and give
you a different result. In this example, a circuit will
take two electrical signals. Now, each one might be a one or a zero. If either of the signals
coming in is a zero, then the result is also a zero. This circuit will only give you a one if the first signal and the
second signal are both a one. And so, we call this circuit, and. There are many small circuits like this, that perform simple, logical calculations. But connecting these circuits together, we can make more complex circuits that perform more complex calculations. For example, you can make a
circuit that adds two bits together called, an adder. This circuit takes in two
individual bits, each one, a one or a zero, and adds them
together to calculate the sum. The sum can be zero plus zero equals zero, zero plus one equals one,
or one plus one equals two. You need two wires coming out
because it can take up to two binary digits to represent the sum. Once you have a single
adder for adding two bits of information, you can put
together multiples of these adder circuits side by side to add
together much larger numbers. - For example, here's how an eight bit adder adds the numbers 25 and 50. Each number is represented
using eight bits resulting in 16 different
electrical signals that go into the circuit. The circuit for an eight bit
adder has lots of little adders inside of it, which
together, calculate the sum. Different electrical circuits
can perform other simple calculations like subtraction
or multiplication. In fact, all the information
processing your computer does it's just lots and lots of small simple operations put together. Each individual operation
done by a computer is so, so simple, it
could be done by a human. But these circuits inside
computers are way, way faster. - Back in the day, these
circuits were big and clunky. An an eight bit adder
could be as big as a fridge and it would take minutes for them to perform a simple calculation. Today, computer circuits
are microscopic in size and way, way faster. Why are smaller computers also faster? - Well, because the
smaller the circuit is, the less distance the
electrical signal has to go. Electricity moves at just
about the speed of light which is why modern circuits can perform billions of calculations per second. - So, whether you're playing
a game, recording a video, or exploring the cosmos,
everything you can possibly do with technology requires lots of information to be processed extremely quickly. Underneath all this complexity, is just lots of teeny little
circuits that turn binary signals into websites and
videos, music and games. These circuits can even help us decode DNA to diagnose and cure disease. (upbeat music)"
Code.org,Computers and the Internet,How computers work,"CPU, memory, input & output","Smart fabric designer Madison Maxey and founder and maker Danielle Applestone explain the different components that allow computers to input, store, process, and output information. ","(rock music) - Hi, my name is Madison Maxey. I have a company called
Loomia, and we focus on making smart fabrics for smart clothing and smart soft-good products. The sky's the limit when
it comes to textiles. - My name is Danielle Applestone, and I'm CEO of Other Machine Copmany. We build a desktop milling machine. A milling machine takes
a rotating cutting tool and moves it through material
to create a 3-D object. - Under the hood, all computers do the same four basic things. They input information, store, and process the information, and
then output information. Each of these things is done by a different part of the computer. There are input devices that
take input from the outside world and convert it
into binary information. There's memory to store this information. There's a central processing unit, or CPU, where all the calculations are done. And finally, there are output devices that take information and
convert it into physical output. - [Danielle] Let's talk about input first. Computers can take many
different types of input, like the keyboard of a computer,
the touch pad of a phone, a camera, a microphone, or a GPS, but even the sensors
on a car, a thermostat, or a drone are also
different input devices. Now, let's look at a simple
example of how input travels through a computer and becomes output. When you press a key on your keyboard, let's say the letter B, the keyboard converts the letter to a number. That number is sent as binary, ones and zeros, into the computer. Starting from this
number, the CPU calculates how to display the
letter B pixel-by-pixel. The CPU requests step-by-step
instructions from memory, which tell it how to draw the letter B. The CPU runs these instructions and stores the results
as pixels in memory. Finally, this pixel information is sent in binary to the screen. The screen is an output
device, which converts the binary signals into the tiny lights and colors that make up what you see. - This all happens so quickly
it feels instantaneous, but to display each letter,
a computer runs thousands of instructions, starting from the moment your finger presses the keyboard. - In that example, the
output device was the screen, but there are many
different types of output, which take a binary
signal from the computer and do something in the physical world. For example, a speaker will play sound and a 3-D printer will print an object. Output devices can also
control physical motion, like a robotic arm, the motor
of a car, or the cutting tool of the milling machine
that my company makes. New types of inputs and
outputs let computers interact with the world
in entirely new ways. This has been helped out by improvements to the speed and size
of the memory and CPU. The more complicated
a task is and the more information that's input or
output, the more processing power and memory a computer needs. Typing letters on a screen may be easy, but to do complicated
3-D graphics or record a high-definition movie, modern computers often have multiple CPUs to
process all that information, and many gigabits of memory to store it. - No matter what it is you
want to do with a computer, every single action is about inputting information from the physical world, storing and processing that information, and getting some output back
into the physical world."
Code.org,Computers and the Internet,How computers work,Hardware and Software,"Engineering manager Erica Gomez, program manager Jerome Holman, and Microsoft founder Bill Gates explain how a computer's hardware and software work together. ","(lively music) (women laughing) - Hi, my name's Erica Gomez and I'm an engineering manager at Amazon.com. One of the best things
about working in tech and at Amazon in
particular is that I get to bring my dog with me to work every day. My job is to help make sure
software gets out the door and her job is to nap under
my desk and snore very loudly. - My name is Jerome Holman and I'm a program manager on Team Xbox, And I have a really fun job. Basically bringing the hardware
and the software together to give you all the games
that you love on your Xbox. Oh. (laughing) - When you look inside a computing device you see a bunch of circuits,
chips, wires, speakers, plugs, and all sorts of other stuff. This is the hardware. But what you don't see is the software. Software is all of the computer programs, or code, running on this machine. Software can be anything
from apps and games to webpages and data science
software that me and my teams use at Amazon to understand
how customers behave. But how do the hardware and the software interact with one another? Lets start at looking at a computer's central processing unit, or CPU. - The CPU is the master chip that controls all the other parts of the computer. A CPU needs to do different
things, so inside it has smaller, simpler parts
that handle specific tasks. It has circuits to do
simple math and logic, it has other circuits to
send and receive information to and from different
parts of the computer. The real magic of the CPU is how it knows which circuits to use
and when to use them. - [Erica] The CPU receives simple commands that tell it which circuit
to use to do a specific job. For example, and add
command tells the CPU to use its adder circuit to
calculate a new number. And then the store command
tells the CPU to use a different circuit to save
that result into memory. Just like numbers, all
of these simple commands can be represented in
binary ones and zeros, or on and off electrical signals. The binary commands are stored in memory and the CPU fetches and
executes them in sequence one after the other. This sequence of commands is in fact the very simple computer program. - Binary code is the most
basic form of software and it controls all the
hardware of a computer. These days nobody writes
software in binary, it would take forever. Today, the software we
write looks more like this, or this, or even this. Programming languages like
these let you type in commands in something that looks
a lot like english. To draw a rectangle on the screen you just need a single command. This high level command is converted into hundreds or thousands
of simpler binary commands that the CPU understands. - Software tells the CPU what to do, but when you're listening to
music and browsing the web and chatting with a friend,
your computer is running multiple pieces of software all at once. So how do all of these programs
get on the computer in the first place, and how can the
CPU run them all at once? To find out we'll have to take a look at the operating system. - The operating system of a computer is the master program
that manages how software gets to use the hardware of the computer. For example, I helped create
the Windows operating system that runs on most personal computers. The operating system is a
program with special abilities that let it control the other
software on the computer. It lets you install new
programs by loading them into your computers memory. It decides when a program is run by the central processing unit,
whether that program can access the computer's
input and output devices. And when you think your computer
is running many programs at once, in reality,
its the operating system that's quickly switching between programs, sharing that CPU for
fractions of a second. - Inside every computer
is an operating system managing software that controls
the computer's hardware. The software is as series of commands made of simple binary
code, and that binary code is just electrical signals flowing through billions of tiny circuits. - Computers have the potential to do all kinds of amazing things, but the only thing that makes computers smart or useful is you. When you learn to code, you
get to define the problem you want to solve and write the software that turns those ideas into reality. That gives you the power to build things that matter to you, your
community, and the world."
Code.org,Computers and the Internet,How the Internet works,What is the Internet?,"What is the internet? Short answer: a distributed packet-switched network. This is the introduction video to the series, ""How the Internet Works"". Vint Cerf, one of the ""fathers of the internet"" explains the history of the net and how no one person or organization is really in charge of it. ","[woosh] [ding] [buildup sound] [music] What is the internet? The internet is like a popular thing. Some satellites up there. I picture it in my head with like waves of
internet going to the phone. Somebody told me a cloud once. The internet is a lot like plumbing it's always moving. Most people don't have any idea where
the internet came from and doesn't matter, they don't need to. It's
sort of like asking who invented the ballpoint pen, or the flush toilet or the zipper. These are all things we just use every
day we don't even think about the fact that one day somebody invented them. So the internet is just like that. Many,
many years ago in the early 1970s my partner Bob Kahn and I began working on the design of what we now call the internet. It was a result of another experiment called the ARPANET which stood for Advanced Research Project Agency Network. It was a Defense Department research project. Paul Baran was trying to figure out how to build a communication system that might actually survive a nuclear attack. So he had this idea of breaking messages
up into blocks and sending them as fast as possible in every possible direction
through the mesh network. [whoosh] So we built what eventually became a nationwide
experimental packet network, and it worked. [electronic music with heavy beats] Is anybody in charge of the internet? The government controls it. Elves, obviously elves! The people to control the Wi-Fi
because then no Wi-Fi, no internet. T-mobile, um, Xfinity, Bill Gates [pause] Right?! The honest answer is well nobody and maybe another answer is everybody. The real answer is that the internet is
made up of an incredibly large number of independently operated networks. What's interesting about the system is
that it's fully distributed. There's no central control that is deciding how packets are routed or where pieces of the network are built or even who interconnects with whom. These are all business decisions that
are made independently by the operators. They are all motivated to assure that
there is end-to-end connectivity of every part of the network because the
utility of the net is that any device can communicate with any other device;
just like you want to be able to make phone calls to any other telephone in
the world. There's nothing like this that has ever
been built before. The idea that what you know might be useful to somebody else or vice versa is a very powerful motivator for sharing information. By the way that's how science gets done,
people share information. So this is an opportunity for people to
think up new applications, maybe program them as apps on a mobile phone, maybe become part of the continued
growth of the infrastructure of the network to bring it to people who don't
have access to it yet; or just make use of it on a day-to-day basis. You can't escape from contact with the
internet so why not get to know it and use it. [swirling sound effect] [ding] Subtitles by the Amara.org community"
Code.org,Computers and the Internet,How the Internet works,"Wires, cables, and WiFi",Software engineer Tess Winlock introduces how the physical infrastructure of the Internet moves information.  ,"(upbeat music) - My name is Tess Winlock, I'm a software engineer at Google. Here's a question. How does a picture, text message, or email get sent from one place to another? It isn't magic. It's the internet. A tangible, physical system that was made to move information. The internet is a lot
like the postal service. But, the physical stuff that gets sent is a little bit different. Instead of boxes and envelopes, the internet ships binary information. Information is made of bits. A bit can be described
as any pair of opposites on or off, yes or no. We typically use a one, meaning on, or a zero, meaning off. Because a bit has two possible states, we call in binary code. Eight bits strung
together, makes one byte. 1,000 bytes all together is a kilobyte. 1,000 kilobytes is a megabyte. A song is typically encoded using about three to four megabytes. It doesn't matter if
it's a picture, a video, or a song, everything on the internet is represented and sent around as bits. These are the atoms of information. But, it's not like we're
physically sending ones and zeroes from one place to another,
one person to another. So, what is the physical stuff that actually gets sent over
the wires and the airwaves? Well, let's look at a small example here of how humans can physically communicate to send a single bit of information from one place to another. So, say we could turn on a
light for a one or off for zero. Or use beeps or similar sort of things of, like, Morse code. These methods work, but
they're really slow, error-prone, and totally
dependent upon humans. What we really need is a machine. So, throughout history,
we've built many systems that can actually send
this binary information through different types
of physical mediums. Today, we physically
send bits by electricity, light, and radio waves. To send a bit via electricity, imagine that you have
two light bulbs connected by a copper wire. If one device operator
turns on the electricity, then the light bulb lights up. No electricity, no light. If the operators on both ends agree that light on means one
and light off means zero, then we have a system for sending bits of information from one person
to another using electricity. But, we have a problem. Let's say that, we want to
send five zeroes in a row. Well, how can you do that in such a way that either person can actually
count the number of zeroes? Well, the solution is to
introduce a clock or a timer. The operators can agree that the sender will send one bit per second and the receiver will sit down and record every single second and
see what's on the line. To send five zeroes in a row, you just turn off the
light, wait five seconds. The person on the other end of the line will write down all five
seconds say, ""Zero, zero, zero."" And for ones do the
opposite, turn on the light. Obviously, we'd like to send things a little bit faster
than one bit per second. So, we need to increase our bandwidth, the maximum transmission
capacity of a device. Bandwidth is measured by bit rate, which is the number of bits
that we can actually send over a given period of time,
usually measured in seconds. A different measure of
speed is the latency, or the amount of time it takes for one bit to travel from one place to another. From the source, to the requesting device. In our human analogy, one bit per second was pretty fast, but kind of hard for a
human to keep up with. So, let's say that you
want to actually download a three megabyte sone
in, like, three seconds. At eight million bits per
megabyte, that means a bit rate of about eight million bits per second. Obviously, human can't send or receive eight million bits per second, but a machine could do that just fine. But, now, there's also
a question of what sort of cable to send these messages over and how far the signals can go. With an ethernet wire,
the kind that you find in your home or office or school, you see really measurable signal loss over just a few hundred feet. So, if we really want this internet thing to work over the entire world, we need a different way of sending this information really long distances. I mean, like, across an ocean. So, what else can we use? Well, what do we know
that moves a lot faster than just electricity through a wire? Is, well, light. We can actually send bits as light beams from one place to another
using a fiber optic cable. A fiber optic cable is a thread of glass engineered to reflect light. When you send a beam of
light down the cable, light bounces up and down
the length of the cable until it is received on the other end. Depending on the bounce angle, we can actually send
multiple bits simultaneously, all of them traveling
at the speed of light. So, fiber is really, really fast. But, more importantly, the
signal doesn't really degrade over long distances. This is how you can go hundreds of miles without signal loss. This is why we use fiber optic cables across the ocean floors to
connect one continent to another. In 2008, there was a cable
that was actually cut near Alexandria, Egypt,
which really interrupted the internet for most of
the Middle East and India. So, we take this internet
thing for granted. But, it's really a pretty
fragile physical system. Fiber is awesome, but
it's also really expensive and hard to work with. For most purposes, you're
gonna find copper cable. But, how do we move things without wires? How do we send things wirelessly? Wireless bit-sending machines typically use a radio signal to send bits from one place to another. The machines have to actually translate the ones and zeroes into radio waves of different frequencies. The receiving machines reverse the process and convert it back into
binary on your computer. So, wireless has made our internet mobile. But, a radio signal
doesn't travel all that far before it completely gets garbles. This is why you can't
really pick up a Los Angeles radio station in Chicago. As great as wireless is,
today it still relies on the wired internet. If you're in a coffee shop using Wi-Fi, then the bits get sent
through this wireless router and then are transferred
to the physical wire to travel the really long
distances of the internet. The physical method for sending bits may change in the future. Whether it's lasers
sent between satellites or radio waves from balloons or drones. But, the underlying binary representation of information and the
protocols for sending that information and
receiving that information have pretty much stayed the same. Everything on the internet,
whether it's words, emails, images, cat videos, puppy videos, all come down to these ones and zeroes being delivered by electronic pulses, light beams, radio waves, and, you know, lots and lots of love. (upbeat music)"
Code.org,Computers and the Internet,How the Internet works,IP addresses and DNS,The co-founder of the Internet Vint Cerf and software engineer Paola Mejia take us through the ins and outs of how networks talk to each other. ,"(upbeat piano and drum music) - Hi. My name is Paola, and I am a software engineer at Microsoft. Let's talk about how the internet works. My job relies on networks being able to talk with one another. But back in the 1970s, there was no standard method for this. It took the work of Vint Cerf and Bob Kahn to invent the Internetworking Protocol to make communication possible. This invention laid the groundwork for what we now call the internet. - The internet is a network of networks. It links billions of devices
together all around the globe. Maybe you're connected with a laptop or a phone through wifi. But then that wifi connection connects to an Internet
Service Provider, or ISP. And that ISP connects you
to billions and billions of devices around the world through hundreds of thousands of networks that are all interconnected. One thing that most
people do not appreciate, is that the internet is
really a design philosophy and an architecture expressed
in a set of protocols. A protocol is a well-known set
of rules and standards that, if all parties agree to use it, will allow them to
communicate without trouble. How the internet actually
physically works is less important than the fact that this
design philosophy has allowed the internet to adapt and absorb new communication technologies. This is because in order
for a new technology to use the internet in some fashion, it just needs to know which
protocols to work with. All the different devices on the internet have unique addresses. An address on the
internet is just a number, similar to a phone number,
or a sort of street address that's unique to each computer or device at the edge of the network. This is similar to how most
homes and businesses have a mailing address. You don't need to know a person to send them a letter in the mail, but you do need to know their address, and how to write the address properly, so the letter can be
carried by the mail system to its destination. The addressing system for computers on the internet is similar, and it forms part of one
of the most important protocols used in internet communication, simply called the
Internet Protocol, or IP. A computer's address, then,
is called its IP address. Visiting a website is really
just your computer asking another computer for information. Your computer sends a message
to the other computer's IP address, and it also sends
along its origin address so the other computer knows
where to send its response. - You may have seen an IP address. It's just a bunch of numbers. These numbers are
organized in a hierarchy. Just like a home address has a country, a city, a street, and a house number, an IP address has many parts. Just like all digital data, each of these numbers
is represented in bits. Traditional IP addresses are 32 bits long, with eight bits for each
part of the address. The earlier numbers usually identify the country and regional
network of the device. Then come the subnetworks. And then, finally, the address
of the specific device. This version of IP
addressing is called IPv4. It was designed in 1973, and widely adopted in the early '80s, and provides for more than
4 billion unique addresses for devices connecting to the internet. But the internet has turned
out to be much more popular than even Vint Cerf imagined, and 4 billion unique
addresses won't be enough. We're now in the middle
of a multi-year transition to a longer IP address format called IPv6, which uses 128 bits per address, and provides over 340
undecillion unique addresses. That's more than enough for
every grain of sand on Earth to have its own IP address. - Most users never see or
care about internet addresses. A system called the Domain
Name System, or DNS, associates names, like www.example.com, with the corresponding addresses. Your computer uses the DNS
to look up domain names and get the associated
IP address, which is used to connect your computer to the
destination on the internet. - [Voiceover] And it goes a
little something like this. - Hey, hi there. I want to go to www.code.org - Yeah, well I don't know the
IP address for that domain. Let me ask around. Hey, anyone know how to get to a... code.org? - Yeah, I got it right here. It's 174 dot 129 dot 14 dot 120. - Oh, okay, great. Thanks. Yeah, I'm gonna write that
down and save it for later in case I need it. Hey, here's that address you wanted. - Awesome. Thank you. (piano flourish) - So how do we design a
system for billions of devices to find any one of billions
of different websites? There is no way one DNS server can handle all of the
requests from all devices. The answer is that DNS
servers are connected in a distributed hierarchy,
and are divided into zones, splitting up responsibility
for the major domains such as .org, .com, .net, et cetera. DNS was originally created to be an open and public communication protocol for government and
educational institutions. Because of its openness, DNS is susceptible to cyber attacks. An example attack is DNS spoofing. That's when a hacker
taps into a DNS server and changes it to match a domain name with the wrong IP address. This lets the attacker send
people to one imposter website. If this happens to you, you are vulnerable for more problems because you are using that
fake website as if it is real. The internet is huge, and
getting bigger every day. But the Domain Name System
and Internet Protocol are designed to scale, no matter how much the internet grows."
Code.org,Computers and the Internet,How the Internet works,"Packets, routers, and reliability","Spotify engineer Lynn Root and Vint Cerf, Father of the Internet, explain how information on the Internet is broken down into packets, and how to ensure that information is reliably received. ","- [Voiceover] Seven, six,
five, four, three, two, one. (funky music) - Hi, my name is Lynn Root.
I am the Software Engineer here at Spotify, and I will
be the first to admit that I often take for granted the
reliability of the Internet. The sheer amount of
information zooming around the Internet is astonishing. But
how's it possible for every piece of data to be
delivered to you reliably? Say you want to play a song from Spotify. It seems like your computer
connects directly to Spotify's servers, and
Spotify sends you a song on a direct, dedicated line.
But actually, that's not how the Internet works. If the Internet were made of
direct, dedicated connections, it would be impossible
to keep things working as millions of users join,
especially since there is no guarantee that every wire and computer is working all the time. Instead, data travels on
the Internet in a much less direct fashion. - Many, many years ago,
in the early 1970s, my partner, Bob Kahn,
and I began working on the design of what we
now call the Internet. Bob and I had the responsibility
and the opportunity to design the Internet's
protocols and its architecture. So, we persisted in participating
in the Internet's growth and evolution for all of this time, up to, and including, the present. The way information gets
transferred from one computer to another is pretty interesting. It need not follow a fixed path. In fact, your path may
change in the midst of a computer-to-computer conversation. Information on the Internet
goes from one computer to another in what we call
a packet of information, and a packet travels from
one place to another on the Internet a lot like how
you might get from one place to another in a car, depending
on traffic congestion or road conditions, you might
choose or be forced to take a different route to get
to the same place each time you travel. And just as you can
transport all sorts of stuff inside a car, many kinds of
digital information can be sent with IP packets, but
there are some limits. What if, for example, you
need to move a space shuttle from where it was built to
where it will be launched? A shuttle won't fit in one
truck, so it needs to be broken down into pieces, transported
using a fleet of trucks. They could all take different
routes, and might get to the destination at different
times, but once all the pieces are there, you can reassemble
the pieces into the complete shuttle, and
it'll be ready for launch. On the Internet, the
details work similarly. If you have a very large
image that you want to send to a friend or upload to a
website, that image might be made up of tens of billions
of bits of ones and zeroes, too many to send along in one packet. Since it's data on a
computer, the computer sending the image can quickly break
it into hundreds or even thousands of smaller parts called packets. Unlike cars or trucks, these
packets don't have drivers, and they don't choose their
route. Each packet has the internet address of
where it came from and where it's going. Special
computers on the Internet, called routers, act like
traffic managers to keep the packets moving through
the networks smoothly. If one route is congested,
individual packets may travel different routes
through the Internet, and they may arrive at the
destination at slightly different times, or even out of order. - So, let's talk about how this works. As part of the Internet
Protocol, every router keeps track of multiple
paths for sending packets, and it chooses the
cheapest available path for each piece of data, based on destination IP address for the packet. ""Cheapest,"" in this
case, doesn't mean cost, but time and non-technical
factors such as politics and relationships between companies. Often the best route for data
to travel isn't necessarily the most direct. Having
options for paths makes the network fault tolerant,
which means the network can keep sending packets, even
if something goes horribly, horribly wrong. This is the
basis for a key principle of the Internet, reliability. Now, what if you want to request some data and not everything is delivered? Say you want to listen to a song. How can you bee 100%
sure all the data will be delivered so the song plays perfectly? Introducing your new best friend, TCP, Transmission Control Protocol. TCP manages the sending and
receiving of all your data as packets. Think of it like
a guaranteed mail service. When you request a song on your device, Spotify sends the song
broken up into many packets. When your packets arrive,
TCP does a full inventory and sends back acknowledgements
of each packet received. If all packets are there,
TCP signs for your delivery, and you're done. (upbeat music) If TCP finds some packets are missing, it won't sign. Otherwise, your
song wouldn't sound as good, or portions of the song could be missing. For each missing or incomplete packet, Spotify will resend them.
Once TCP verifies the delivery of many packets for that one song request, your song will start to play. (upbeat music) What's great about the
TCP and router systems is they're scalable. They can
work with eight devices or 8,000,000,000 devices. In fact,
because of these principles of fault tolerance and redundancy,
the more routers we add, the more reliable the Internet becomes. What's also great is we
can grow and scale the Internet without interrupting
service for anybody using it. - The Internet is made of
hundreds of thousands of networks and billions
of computers and devices connected physically. These
different systems that make up the Internet connect to
each other, communicate with each other, and work together
because of agreed upon standards for how data is
sent around on the Internet. Computing devices, or
routers along the Internet, help all the packets make
their way to the destination where they're reassembled,
if necessary, in order. This happens billions of
times a day, whether you and others are sending an
email, visiting a webpage, doing a video chat, using a
mobile app, or when sensors or devices on the Internet
talk to each other."
Code.org,Computers and the Internet,How the Internet works,HTTP and HTML,Tumblr founder David Karp and Xbox program manager Jasmine Lawrence give a detailed description of how files and webpages are sent and received using HTTP and HTML. ,"- I'm Jasmine Lawrence and I'm a Program Manager on the Xbox One engineering team. One of our biggest features
is called Xbox Live. It's an online service
that connects gamers from all around the world, and we rely on the internet
to make that happen. This is no easy task and there are a lot of things happening behind the scenes. The internet is totally changing how people interact and connect. But how does it work? How do the computers all across the world actually communicate with each other? Let's look at web browsing. First, you open a web browser. It's the app you use to
access the web pages. Next, you type in the web address, or URL, which stands for Uniform Resource Locator, of a website you want to
visit like Tumblr.com. (upbeat electronic music) - Hi, I'm David Karp,
the founder of Tumblr, and we're here today to talk about how those web browsers we use every day actually work. So you've probably wondered what actually happens when you type an address into your web browser and then hit enter, and it really is about as
crazy as you can imagine. So in that moment, your computer starts
talking to another computer called a server that's usually thousands of miles away, and in milliseconds your computer asks that server for a website, and that server starts to talk back to your computer in a
language called HTTP. HTTP stands for Hypertext
Transfer Protocol. You can kind of think of it as the language that one computer uses to ask another computer for a document. It's actually really
pretty straightforward. If you were to intercept the conversation between your computer and a web server on the internet, it's mainly made up of something called ""GET"" requests. And those are really very
simply the word ""GET"" and then the name of the document that you're requesting. So if you're trying to log into Tumblr and load our login page, all you're doing is sending a GET request to Tumblr's server that says ""GET /login"" and that tells Tumblr's server that you want all of the HTML code for the Tumblr login page. HTML stands for HyperText Markup Language and you can think of that
as the language you use to tell a web browser
how to make a page look. So if you think about
something like Wikipedia, which is really just
a big simple document, and HTML is the language that you use to make that title big and bold, to make the font the right font, to link certain text
to certain other pages, to make some text bold, to make some text italic, to put an image in the middle of the page, to align the image to the right, to align the image to the left. - The text of a web page is included directly in the HTML, but other parts, images or videos, are separate files with their own URLs that need to be requested. The browser sends separate HTTP requests for each of these and
displays them as they arrive. If a web page has a lot
of different images, each of them causes a
separate HTTP request and the page loads slower. Now sometimes when you browse the web, you're not just requesting pages with GET requests. Sometimes you send information, like when you fill out a
form or type a search query. Your browser sends this information in plain text to the web server using an HTTP post request. - So let's say you log in to Tumblr. The first thing you do
is make a ""POST"" request That is, a ""POST"" to Tumblr's login page that has some data attached to it. It has your email address,
it has your password. That goes to Tumblr's server. Tumblr's server figures out
that, okay, you're David. It sends a web page back to your browser that says, ""Success! Logged in as David."" But along with that web page, it also attaches a little
bit of invisible cookie data that your browser sees and knows to save, and that's really important because it's really the only way that a website can remember who you are. All that cookie data really is is an ID card for Tumblr. It's a number that
identifies you as David. Your web browser holds onto that number, and then the next time you refresh Tumblr, the next time you go to Tumblr.com, your web browser knows to automatically attach that ID number with the request that it sends over to Tumblr's server, so now Tumblr's server sees the request coming from your browser,
sees the ID number, and knows, okay, this
is a request from David. - Now, the internet is completely open, all of its connections are shared, and information is sent in plain text. This makes it possible for hackers to snoop on any personal information that you send over the internet, but safe websites prevent this by asking your web browser to communicate on a secure channel using something called
Secure Sockets Layer and its successor
Transport Layer Security. You can think of SSL and
TLS as a layer of security wrapped around your communications to protect them from
snooping or tampering. SSL and TLS are active when
you see the little lock that appears in your browser address bar next to the HTTPS. The HTTPS protocols ensure that your HTTP requests are secure and protected. When a website asks your browser to engage in a secure connection, it first provides a digital certificate, which is like an official ID card proving that it's the
website it claims to be. Digital certificates are published by certificate authorities, which are trusted entities
that verify the identities of websites and issue
certificates for them, just like a government can
issue IDs or passports. Now, if a website tries to
start a secure connection without a properly issued
digital certificate, your browser will warn you. That's the basics of web browsing, the part of the internet
we see day to day. To summarize, HTTP and DNS manage the sending and receiving of HTML, media files, or anything on the web. What makes this possible under the hood are TCP/IP and router networks that break down and transport information in small packets. Those packets themselves
are made up of binary, sequences of ones and zeros that are physically sent
through electric wires, fiber optic cables, and wireless networks. Fortunately, once you've
learned how one layer of the internet works, you can rely on it without remembering all the details. We can trust that all those
layers will work together to successfully deliver information at scale and with reliability."
Code.org,Computers and the Internet,How the Internet works,Encryption and public keys,"Mia Epner, who works on security for a US national intelligence agency, explains how cryptography allows for the secure transfer of data online. This video explains 256-bit encryption, public and private keys, SSL & TLS and HTTPS.  ","(energetic music) - Hi. My name is Mia Gil Epner. I'm majoring in Computer
Science at UC Berkeley and I work for the Department of Defense where I try to keep information safe. The internet is an open and public system. We all send and receive information over shared wires and connections. Even though it's an open system, we still exchange a lot of private data, things like credit card numbers, bank information, passwords, and emails. So how is all this
private stuff kept secret? Data of any kind can be kept secret through a process known as encryption, descrambling or changing of the message to hide the original text. Now, decryption is the process of unscrambling that
message to make it readable. This is a simple idea, and people have been
doing it for centuries. One of the first well-known
methods of encryption was Caesar's cipher,
named after Julius Caesar, a Roman general who encrypted
his military commands to make sure that if a message
was intercepted by enemies, they wouldn't be able to read it. Caesar's cipher is an algorithm that substitutes each letter
in the original message with a letter a certain number
of steps down the alphabet. If the number is something only the sender and receiver know, then
it's called the key. It allows the reader to
unlock the secret message. For example, if your
original message is, ""Hello"", then, using the Caesar's cipher algorithm with a key of five, the
encrypted message would be this. (typrwriter keys clacking) (computer chime) To decrypt the message, the recipient would simply use the key
to reverse the process. But there's a big problem
with Caesar's cipher. Anybody can easily break or
crack the encrypted message by trying every possible key. In the English alphabet,
there are only 26 letters, which means you'd only
need to try, at most, 26 keys to decrypt the message. Now, trying 26 possible
keys isn't very hard. It would take, at most, an hour to do. So let's make it harder. Instead of shifting every
letter by the same amount, let's shift each letter
by a different amount. In this example, a 10 digit key shows how many positions
each successive letter will be changed to
encrypt a longer message. (typewriter keys clacking) Guessing this key would be really hard. Using 10 digit encryption, there could be 10 billion
possible key solutions. Obviously, that's more than
any human could ever solve. It would take many centuries,
but an average computer today would take just a few seconds to try all 10 billion possibilities. So in a modern world, where the bad guys are armed with computers
instead of pencils, how can you encrypt messages so securely that they're too hard to crack? Now, ""too hard"" means that
there are too many possibilities to compute in a reasonable amount of time. Today's secure communications are encrypted using 256 bit keys. That means a bad guy's computer that intercepts your message, would need to try this
many possible options until they discover the
key and crack the message. (robot bleeps and beeps) (energetic music) Even if you had a hundred
thousand super computers, and each of them was able to try a million billion keys every second, it would take trillions
of trillions of trillions of years to try every option, just to crack a single message protected with 256 bit encryption. Of course, computer
chips get twice as fast, then half the size every year or so. If that pace of exponential
progress continues, today's impossible
problems will be solvable just a few hundred years in the future, and 256 bits won't be enough to be safe. In fact, we've already had to increase the standard key length to keep up with the speed of computers. The good news is, using a longer key doesn't make encrypting
messages much harder, but it exponentially increases
the number of guesses that it would to crack a cipher. When the sender and the
receiver share the same key to scramble and unscramble a message, it's called symmetric encryption. With symmetric encryption,
like Caesar's cipher, the secret key has to be
agreed on ahead of time by two people in private. That's great for people, but the internet is open and public, so it's impossible for two computers to meet in private to
agree on a secret key. Instead, computers use asymmetric keys, a public key that can be
exchanged with anybody and a private key that is not shared. The public key is used to encrypt data and anybody can use it to
create a secret message, but the secret can only be decrypted by a computer with access
to the private key. How it works is with some math that we won't get into right now. Think of it this way, imagine that you have a personal mailbox where anybody can deposit mail, but they need a key to do it. Now, you could make many copies of the deposit key, and
send one to your friend or even just make it publicly available. Your friend, or even a stranger, can use the public key to access your deposit
slot and drop a message in, but only you can open the
mailbox with your private key to access all of the secret
messages you've received. You can send a secure
message back to your friend by using the public deposit
key to their mailbox. This way, people can
exchange secure messages without ever needing to
agree on a private key. Public key cryptography is the foundation of all secure messaging
on the open internet including security protocols
known as SSL and TLS which protect us when
we're browsing the web. Your computer uses this today. Any time you see the little lock or the letters https in
your browser's address bar, this means your computer is
using public key encryption to exchange data securely
with the website you're on. (energetic music) As more and more people
get on the internet, more and more private
data will be transmitted, and the need to secure that data will be even more important. As computers become faster and faster, we'll have to develop new ways to make encryption too hard
for computers to break. This is what I do with my
work, and it's always changing. (energetic music)"
Code.org,Computers and the Internet,How the Internet works,Cybersecurity and crime,"Google Security Princess Parisa Tabriz and Jenny Martin from Symantec introduce the most common types of cybercrime, including viruses, malware, DDOS attacks and phishing scams.  ","- Hi. My name's Jenny Martin and I'm the Director of Cybersecurity Investigations at Symantec. Today cybercrime causes huge problems for society. Personally, financially, and even in matters of national security. Just in the last few years, hundreds of millions
of credit card numbers have been stolen. Tens of millions of
social security numbers and health care records were compromised. Even nuclear centrifuges have been hacked and unmanned aerial
drones have been hijacked. This is all done by
exploiting vulnerabilities in hardware and software. Or more often by taking advantage of unintentional decisions made by the people using the software. The people committing these cybercrimes don't fit a single profile or motivation. It could be anyone from an
international terrorist, to a teenager competing
for bragging rights. Today, the largest countries not only have a regular army, but also have a well-armed cyber army. In fact, the next world war may not be fought with traditional weapons but with computers, used to shut down national water supplies, energy grids, and transportation systems. - Hi. My name is Parisa and I'm Google's Security Princess. I've worked on a lot of
different Google products in a lot of different ways
to try and make our software as secure as possible. Now let's take a look at how cybercrime works under the hood. We'll learn about software viruses, denial-of-service attacks,
and phishing scams. In biology in life, a virus is an organism that is spread by coughing, sneezing, or physical contact. Viruses work by infecting cells, injecting their genetic material and using those cells to replicate. They can make people really sick and then spread to other people. A computer virus works a bit similarly. A virus is an executable program that gets installed,
usually unintentionally, and harms a user and their computer. It's also possible for
a virus to spread itself to other computers. Now how does a virus get on your computer in the first place? There are couple ways an attacker can infect someone's computer. They might lure a victim
into installing a program with deception about
the program's purpose. So for example, a lot
of viruses are disguised as security updates. It's also possible that the
software on your computer has a vulnerability. So an attacker can install itself without even needing explicit permission. Once a virus in on your computer it can steal or delete any of your files, control other programs,
or even allow someone else to remotely control your computer. Using computer viruses,
hackers can take over millions of computers worldwide. And then use them as a digital army, otherwise known as a botnet, to attack and take down websites. This kind of attack is called a distributed denial-of-service. A denial-of-service is when hackers overwhelm a website
with too many requests. We call it a distributed denial-of-service when the attack comes from many computers all at once. Most websites are ready to respond to millions of requests a day, but if you hit them with
billions or trillions of requests coming from different places, the computers are overloaded
and stop responding. - Another trick used by cybercriminals is to send large amounts of spam email in an attempt to trick people into sharing sensitive
personal information. This is called a phishing scam. A phishing scam is when you get what seems like a trustworthy email asking you to login to your account, but clicking the email
takes you to a fake website. If you login anyway, you've been tricked into giving your password away. Hackers can then use
your login credentials to access your real accounts to steal information, or maybe even to steal your money. Fortunately there are many companies, laws, and government organizations working to make the internet safer. But these efforts are not enough. You may think when a
computer system gets hacked, the problem was the security design, or the software. 90% of the time a system
gets hacked however, it's not because of a security bug, but because of a simple
mistake made by a human. - It turns out there are
steps we can all take to protect ourselves. Often, your actions not only impact the security of your
own data and computer, but the security of everyone at your school, workplace, and home. With billions or trillions
of dollars at stake, cybercriminals get smarter each year, and we all need to keep up."
